

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Nov  7 12:15:34 2019

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           	psect	idataCOMRAM
    71  00195C                     __pidataCOMRAM:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _e_address
    75  00195C  0005               	dw	5
    76                           
    77                           ;initializer for _save
    78  00195E  0005               	dw	5
    79                           
    80                           ;initializer for read_switches@once
    81  001960  01                 	db	1
    82                           
    83                           ;initializer for _n_time
    84  001961  30                 	db	48
    85  001962  30                 	db	48
    86  001963  3A                 	db	58
    87  001964  30                 	db	48
    88  001965  30                 	db	48
    89  001966  3A                 	db	58
    90  001967  30                 	db	48
    91  001968  30                 	db	48
    92  001969  00                 	db	0
    93                           
    94                           	psect	idataBANK0
    95  00198E                     __pidataBANK0:
    96                           	opt stack 0
    97                           
    98                           ;initializer for display_menu@F16059
    99  00198E  BC                 	db	low STR_9
   100  00198F  2F                 	db	high STR_9
   101  001990  75                 	db	low STR_10
   102  001991  2F                 	db	high STR_10
   103  001992  B3                 	db	low STR_11
   104  001993  2F                 	db	high STR_11
   105  001994  AA                 	db	low STR_12
   106  001995  2F                 	db	high STR_12
   107  001996  C5                 	db	low STR_13
   108  001997  2F                 	db	high STR_13
   109  0000                     _TMR0	set	4054
   110  0000                     _ADCON1	set	4033
   111  0000                     _ADRESH	set	4036
   112  0000                     _ADRESL	set	4035
   113  0000                     _EEADR	set	4009
   114  0000                     _EECON1bits	set	4006
   115  0000                     _EECON2	set	4007
   116  0000                     _EEDATA	set	4008
   117  0000                     _PIR2bits	set	4001
   118  0000                     _PORTB	set	3969
   119  0000                     _PORTD	set	3971
   120  0000                     _RCREG	set	4014
   121  0000                     _SPBRG	set	4015
   122  0000                     _SSPADD	set	4040
   123  0000                     _SSPBUF	set	4041
   124  0000                     _SSPCON1	set	4038
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISD	set	3989
   128  0000                     _TXREG	set	4013
   129  0000                     _ABDEN	set	32192
   130  0000                     _ABDOVF	set	32199
   131  0000                     _ACKDT	set	32301
   132  0000                     _ACKEN	set	32300
   133  0000                     _ACKSTAT	set	32302
   134  0000                     _ACQT0	set	32259
   135  0000                     _ACQT1	set	32260
   136  0000                     _ACQT2	set	32261
   137  0000                     _ADCS0	set	32256
   138  0000                     _ADCS1	set	32257
   139  0000                     _ADCS2	set	32258
   140  0000                     _ADDEN	set	32091
   141  0000                     _ADFM	set	32263
   142  0000                     _ADON	set	32272
   143  0000                     _BCLIF	set	32011
   144  0000                     _BRG16	set	32195
   145  0000                     _BRGH	set	32098
   146  0000                     _CHS2	set	32276
   147  0000                     _CKE	set	32318
   148  0000                     _CREN	set	32092
   149  0000                     _CSRC	set	32103
   150  0000                     _FERR	set	32090
   151  0000                     _GIE	set	32663
   152  0000                     _GO	set	32273
   153  0000                     _GODONE	set	32273
   154  0000                     _OERR	set	32089
   155  0000                     _PEN	set	32298
   156  0000                     _RB1	set	31753
   157  0000                     _RB2	set	31754
   158  0000                     _RB3	set	31755
   159  0000                     _RB4	set	31756
   160  0000                     _RB5	set	31757
   161  0000                     _RB6	set	31758
   162  0000                     _RB7	set	31759
   163  0000                     _RBPU	set	32655
   164  0000                     _RC0	set	31760
   165  0000                     _RC1	set	31761
   166  0000                     _RC2	set	31762
   167  0000                     _RCEN	set	32299
   168  0000                     _RCIDL	set	32198
   169  0000                     _RCIE	set	31981
   170  0000                     _RCIF	set	31989
   171  0000                     _RD7	set	31775
   172  0000                     _RSEN	set	32297
   173  0000                     _RX9	set	32094
   174  0000                     _RX9D	set	32088
   175  0000                     _SCKP	set	32196
   176  0000                     _SEN	set	32296
   177  0000                     _SENDB	set	32099
   178  0000                     _SMP	set	32319
   179  0000                     _SPEN	set	32095
   180  0000                     _SREN	set	32093
   181  0000                     _SSPIF	set	31987
   182  0000                     _SYNC	set	32100
   183  0000                     _T0CS	set	32429
   184  0000                     _T0IF	set	32658
   185  0000                     _TMR0IE	set	32661
   186  0000                     _TMR0IF	set	32658
   187  0000                     _TRISC3	set	31907
   188  0000                     _TRISC4	set	31908
   189  0000                     _TRISC6	set	31910
   190  0000                     _TRISC7	set	31911
   191  0000                     _TRISD7	set	31919
   192  0000                     _TRMT	set	32097
   193  0000                     _TX9	set	32102
   194  0000                     _TX9D	set	32096
   195  0000                     _TXEN	set	32101
   196  0000                     _TXIE	set	31980
   197  0000                     _TXIF	set	31988
   198  0000                     _VCFG0	set	32268
   199  0000                     _VCFG1	set	32269
   200  0000                     _WUE	set	32193
   201                           
   202                           	psect	mediumconst
   203  002EBC                     __pmediumconst:
   204                           	opt stack 0
   205  002EBC  00                 	db	0
   206  002EBD                     STR_22:
   207  002EBD  4D                 	db	77	;'M'
   208  002EBE  61                 	db	97	;'a'
   209  002EBF  74                 	db	116	;'t'
   210  002EC0  63                 	db	99	;'c'
   211  002EC1  68                 	db	104	;'h'
   212  002EC2  65                 	db	101	;'e'
   213  002EC3  64                 	db	100	;'d'
   214  002EC4  20                 	db	32
   215  002EC5  74                 	db	116	;'t'
   216  002EC6  72                 	db	114	;'r'
   217  002EC7  79                 	db	121	;'y'
   218  002EC8  20                 	db	32
   219  002EC9  61                 	db	97	;'a'
   220  002ECA  67                 	db	103	;'g'
   221  002ECB  61                 	db	97	;'a'
   222  002ECC  69                 	db	105	;'i'
   223  002ECD  6E                 	db	110	;'n'
   224  002ECE  20                 	db	32
   225  002ECF  6C                 	db	108	;'l'
   226  002ED0  61                 	db	97	;'a'
   227  002ED1  74                 	db	116	;'t'
   228  002ED2  65                 	db	101	;'e'
   229  002ED3  72                 	db	114	;'r'
   230  002ED4  00                 	db	0
   231  002ED5                     STR_18:
   232  002ED5  20                 	db	32
   233  002ED6  52                 	db	82	;'R'
   234  002ED7  65                 	db	101	;'e'
   235  002ED8  20                 	db	32
   236  002ED9  45                 	db	69	;'E'
   237  002EDA  6E                 	db	110	;'n'
   238  002EDB  74                 	db	116	;'t'
   239  002EDC  65                 	db	101	;'e'
   240  002EDD  72                 	db	114	;'r'
   241  002EDE  20                 	db	32
   242  002EDF  6E                 	db	110	;'n'
   243  002EE0  65                 	db	101	;'e'
   244  002EE1  77                 	db	119	;'w'
   245  002EE2  20                 	db	32
   246  002EE3  70                 	db	112	;'p'
   247  002EE4  61                 	db	97	;'a'
   248  002EE5  73                 	db	115	;'s'
   249  002EE6  73                 	db	115	;'s'
   250  002EE7  77                 	db	119	;'w'
   251  002EE8  6F                 	db	111	;'o'
   252  002EE9  72                 	db	114	;'r'
   253  002EEA  64                 	db	100	;'d'
   254  002EEB  00                 	db	0
   255  002EEC                     STR_26:
   256  002EEC  50                 	db	80	;'P'
   257  002EED  61                 	db	97	;'a'
   258  002EEE  73                 	db	115	;'s'
   259  002EEF  73                 	db	115	;'s'
   260  002EF0  77                 	db	119	;'w'
   261  002EF1  6F                 	db	111	;'o'
   262  002EF2  72                 	db	114	;'r'
   263  002EF3  64                 	db	100	;'d'
   264  002EF4  20                 	db	32
   265  002EF5  4E                 	db	78	;'N'
   266  002EF6  6F                 	db	111	;'o'
   267  002EF7  74                 	db	116	;'t'
   268  002EF8  20                 	db	32
   269  002EF9  4D                 	db	77	;'M'
   270  002EFA  61                 	db	97	;'a'
   271  002EFB  74                 	db	116	;'t'
   272  002EFC  63                 	db	99	;'c'
   273  002EFD  68                 	db	104	;'h'
   274  002EFE  00                 	db	0
   275  002EFF                     STR_25:
   276  002EFF  45                 	db	69	;'E'
   277  002F00  6E                 	db	110	;'n'
   278  002F01  74                 	db	116	;'t'
   279  002F02  65                 	db	101	;'e'
   280  002F03  72                 	db	114	;'r'
   281  002F04  20                 	db	32
   282  002F05  50                 	db	80	;'P'
   283  002F06  61                 	db	97	;'a'
   284  002F07  73                 	db	115	;'s'
   285  002F08  73                 	db	115	;'s'
   286  002F09  77                 	db	119	;'w'
   287  002F0A  6F                 	db	111	;'o'
   288  002F0B  72                 	db	114	;'r'
   289  002F0C  64                 	db	100	;'d'
   290  002F0D  20                 	db	32
   291  002F0E  20                 	db	32
   292  002F0F  20                 	db	32
   293  002F10  00                 	db	0
   294  002F11                     STR_14:
   295  002F11  4C                 	db	76	;'L'
   296  002F12  4F                 	db	79	;'O'
   297  002F13  47                 	db	71	;'G'
   298  002F14  20                 	db	32
   299  002F15  44                 	db	68	;'D'
   300  002F16  4F                 	db	79	;'O'
   301  002F17  57                 	db	87	;'W'
   302  002F18  4E                 	db	78	;'N'
   303  002F19  4C                 	db	76	;'L'
   304  002F1A  4F                 	db	79	;'O'
   305  002F1B  41                 	db	65	;'A'
   306  002F1C  44                 	db	68	;'D'
   307  002F1D  45                 	db	69	;'E'
   308  002F1E  44                 	db	68	;'D'
   309  002F1F  2E                 	db	46
   310  002F20  0A                 	db	10
   311  002F21  0D                 	db	13
   312  002F22  00                 	db	0
   313  002F23                     STR_15:
   314  002F23  54                 	db	84	;'T'
   315  002F24  49                 	db	73	;'I'
   316  002F25  4D                 	db	77	;'M'
   317  002F26  45                 	db	69	;'E'
   318  002F27  20                 	db	32
   319  002F28  20                 	db	32
   320  002F29  20                 	db	32
   321  002F2A  20                 	db	32
   322  002F2B  20                 	db	32
   323  002F2C  45                 	db	69	;'E'
   324  002F2D  56                 	db	86	;'V'
   325  002F2E  45                 	db	69	;'E'
   326  002F2F  20                 	db	32
   327  002F30  20                 	db	32
   328  002F31  53                 	db	83	;'S'
   329  002F32  50                 	db	80	;'P'
   330  002F33  44                 	db	68	;'D'
   331  002F34  00                 	db	0
   332  002F35                     STR_27:
   333  002F35  20                 	db	32
   334  002F36  54                 	db	84	;'T'
   335  002F37  72                 	db	114	;'r'
   336  002F38  69                 	db	105	;'i'
   337  002F39  65                 	db	101	;'e'
   338  002F3A  73                 	db	115	;'s'
   339  002F3B  20                 	db	32
   340  002F3C  6C                 	db	108	;'l'
   341  002F3D  65                 	db	101	;'e'
   342  002F3E  66                 	db	102	;'f'
   343  002F3F  74                 	db	116	;'t'
   344  002F40  2E                 	db	46
   345  002F41  2E                 	db	46
   346  002F42  2E                 	db	46
   347  002F43  21                 	db	33
   348  002F44  00                 	db	0
   349  002F45                     STR_29:
   350  002F45  57                 	db	87	;'W'
   351  002F46  61                 	db	97	;'a'
   352  002F47  69                 	db	105	;'i'
   353  002F48  74                 	db	116	;'t'
   354  002F49  20                 	db	32
   355  002F4A  31                 	db	49	;'1'
   356  002F4B  35                 	db	53	;'5'
   357  002F4C  20                 	db	32
   358  002F4D  6D                 	db	109	;'m'
   359  002F4E  69                 	db	105	;'i'
   360  002F4F  6E                 	db	110	;'n'
   361  002F50  75                 	db	117	;'u'
   362  002F51  74                 	db	116	;'t'
   363  002F52  65                 	db	101	;'e'
   364  002F53  73                 	db	115	;'s'
   365  002F54  00                 	db	0
   366  002F55                     STR_19:
   367  002F55  70                 	db	112	;'p'
   368  002F56  61                 	db	97	;'a'
   369  002F57  73                 	db	115	;'s'
   370  002F58  73                 	db	115	;'s'
   371  002F59  77                 	db	119	;'w'
   372  002F5A  6F                 	db	111	;'o'
   373  002F5B  72                 	db	114	;'r'
   374  002F5C  64                 	db	100	;'d'
   375  002F5D  20                 	db	32
   376  002F5E  63                 	db	99	;'c'
   377  002F5F  68                 	db	104	;'h'
   378  002F60  61                 	db	97	;'a'
   379  002F61  6E                 	db	110	;'n'
   380  002F62  67                 	db	103	;'g'
   381  002F63  65                 	db	101	;'e'
   382  002F64  00                 	db	0
   383  002F65                     STR_21:
   384  002F65  43                 	db	67	;'C'
   385  002F66  68                 	db	104	;'h'
   386  002F67  61                 	db	97	;'a'
   387  002F68  6E                 	db	110	;'n'
   388  002F69  67                 	db	103	;'g'
   389  002F6A  65                 	db	101	;'e'
   390  002F6B  20                 	db	32
   391  002F6C  70                 	db	112	;'p'
   392  002F6D  61                 	db	97	;'a'
   393  002F6E  73                 	db	115	;'s'
   394  002F6F  73                 	db	115	;'s'
   395  002F70  20                 	db	32
   396  002F71  6E                 	db	110	;'n'
   397  002F72  6F                 	db	111	;'o'
   398  002F73  74                 	db	116	;'t'
   399  002F74  00                 	db	0
   400  002F75                     STR_10:
   401  002F75  43                 	db	67	;'C'
   402  002F76  68                 	db	104	;'h'
   403  002F77  61                 	db	97	;'a'
   404  002F78  6E                 	db	110	;'n'
   405  002F79  67                 	db	103	;'g'
   406  002F7A  65                 	db	101	;'e'
   407  002F7B  20                 	db	32
   408  002F7C  50                 	db	80	;'P'
   409  002F7D  61                 	db	97	;'a'
   410  002F7E  73                 	db	115	;'s'
   411  002F7F  73                 	db	115	;'s'
   412  002F80  77                 	db	119	;'w'
   413  002F81  6F                 	db	111	;'o'
   414  002F82  72                 	db	114	;'r'
   415  002F83  64                 	db	100	;'d'
   416  002F84  00                 	db	0
   417  002F85                     STR_23:
   418  002F85  54                 	db	84	;'T'
   419  002F86  49                 	db	73	;'I'
   420  002F87  4D                 	db	77	;'M'
   421  002F88  45                 	db	69	;'E'
   422  002F89  20                 	db	32
   423  002F8A  20                 	db	32
   424  002F8B  45                 	db	69	;'E'
   425  002F8C  56                 	db	86	;'V'
   426  002F8D  54                 	db	84	;'T'
   427  002F8E  20                 	db	32
   428  002F8F  20                 	db	32
   429  002F90  53                 	db	83	;'S'
   430  002F91  50                 	db	80	;'P'
   431  002F92  44                 	db	68	;'D'
   432  002F93  00                 	db	0
   433  002F94                     STR_20:
   434  002F94  53                 	db	83	;'S'
   435  002F95  75                 	db	117	;'u'
   436  002F96  63                 	db	99	;'c'
   437  002F97  63                 	db	99	;'c'
   438  002F98  65                 	db	101	;'e'
   439  002F99  73                 	db	115	;'s'
   440  002F9A  73                 	db	115	;'s'
   441  002F9B  66                 	db	102	;'f'
   442  002F9C  75                 	db	117	;'u'
   443  002F9D  6C                 	db	108	;'l'
   444  002F9E  6C                 	db	108	;'l'
   445  002F9F  79                 	db	121	;'y'
   446  002FA0  00                 	db	0
   447  002FA1                     STR_30:
   448  002FA1  48                 	db	72	;'H'
   449  002FA2  48                 	db	72	;'H'
   450  002FA3  3A                 	db	58	;':'
   451  002FA4  4D                 	db	77	;'M'
   452  002FA5  4D                 	db	77	;'M'
   453  002FA6  3A                 	db	58	;':'
   454  002FA7  53                 	db	83	;'S'
   455  002FA8  53                 	db	83	;'S'
   456  002FA9  00                 	db	0
   457  002FAA                     STR_12:
   458  002FAA  44                 	db	68	;'D'
   459  002FAB  6F                 	db	111	;'o'
   460  002FAC  77                 	db	119	;'w'
   461  002FAD  6E                 	db	110	;'n'
   462  002FAE  6C                 	db	108	;'l'
   463  002FAF  6F                 	db	111	;'o'
   464  002FB0  61                 	db	97	;'a'
   465  002FB1  64                 	db	100	;'d'
   466  002FB2  00                 	db	0
   467  002FB3                     STR_11:
   468  002FB3  53                 	db	83	;'S'
   469  002FB4  65                 	db	101	;'e'
   470  002FB5  74                 	db	116	;'t'
   471  002FB6  20                 	db	32
   472  002FB7  54                 	db	84	;'T'
   473  002FB8  69                 	db	105	;'i'
   474  002FB9  6D                 	db	109	;'m'
   475  002FBA  65                 	db	101	;'e'
   476  002FBB  00                 	db	0
   477  002FBC                     STR_9:
   478  002FBC  56                 	db	86	;'V'
   479  002FBD  69                 	db	105	;'i'
   480  002FBE  65                 	db	101	;'e'
   481  002FBF  77                 	db	119	;'w'
   482  002FC0  20                 	db	32
   483  002FC1  4C                 	db	76	;'L'
   484  002FC2  6F                 	db	111	;'o'
   485  002FC3  67                 	db	103	;'g'
   486  002FC4  00                 	db	0
   487  002FC5                     STR_13:
   488  002FC5  43                 	db	67	;'C'
   489  002FC6  6C                 	db	108	;'l'
   490  002FC7  65                 	db	101	;'e'
   491  002FC8  61                 	db	97	;'a'
   492  002FC9  72                 	db	114	;'r'
   493  002FCA  00                 	db	0
   494  002FCB                     STR_8:
   495  002FCB  4D                 	db	77	;'M'
   496  002FCC  45                 	db	69	;'E'
   497  002FCD  4E                 	db	78	;'N'
   498  002FCE  55                 	db	85	;'U'
   499  002FCF  00                 	db	0
   500  002FD0                     STR_1:
   501  002FD0  54                 	db	84	;'T'
   502  002FD1  49                 	db	73	;'I'
   503  002FD2  4D                 	db	77	;'M'
   504  002FD3  45                 	db	69	;'E'
   505  002FD4  00                 	db	0
   506  002FD5                     STR_4:
   507  002FD5  57                 	db	87	;'W'
   508  002FD6  61                 	db	97	;'a'
   509  002FD7  69                 	db	105	;'i'
   510  002FD8  74                 	db	116	;'t'
   511  002FD9  00                 	db	0
   512  002FDA                     STR_33:
   513  002FDA  47                 	db	71	;'G'
   514  002FDB  31                 	db	49	;'1'
   515  002FDC  20                 	db	32
   516  002FDD  00                 	db	0
   517  002FDE                     STR_34:
   518  002FDE  47                 	db	71	;'G'
   519  002FDF  32                 	db	50	;'2'
   520  002FE0  20                 	db	32
   521  002FE1  00                 	db	0
   522  002FE2                     STR_35:
   523  002FE2  47                 	db	71	;'G'
   524  002FE3  33                 	db	51	;'3'
   525  002FE4  20                 	db	32
   526  002FE5  00                 	db	0
   527  002FE6                     STR_36:
   528  002FE6  47                 	db	71	;'G'
   529  002FE7  34                 	db	52	;'4'
   530  002FE8  20                 	db	32
   531  002FE9  00                 	db	0
   532  002FEA                     STR_32:
   533  002FEA  47                 	db	71	;'G'
   534  002FEB  4E                 	db	78	;'N'
   535  002FEC  20                 	db	32
   536  002FED  00                 	db	0
   537  002FEE                     STR_31:
   538  002FEE  47                 	db	71	;'G'
   539  002FEF  52                 	db	82	;'R'
   540  002FF0  20                 	db	32
   541  002FF1  00                 	db	0
   542  002FF2                     STR_6:
   543  002FF2  4F                 	db	79	;'O'
   544  002FF3  4E                 	db	78	;'N'
   545  002FF4  20                 	db	32
   546  002FF5  00                 	db	0
   547  002FF6                     STR_7:
   548  002FF6  4F                 	db	79	;'O'
   549  002FF7  46                 	db	70	;'F'
   550  002FF8  46                 	db	70	;'F'
   551  002FF9  00                 	db	0
   552  002FFA                     STR_2:
   553  002FFA  45                 	db	69	;'E'
   554  002FFB  56                 	db	86	;'V'
   555  002FFC  54                 	db	84	;'T'
   556  002FFD  00                 	db	0
   557  0000                     
   558                           ; #config settings
   559  002FFE  00                 	db	0	; dummy byte at the end
   560  0000                     
   561                           	psect	cinit
   562  0013BC                     __pcinit:
   563                           	opt stack 0
   564  0013BC                     start_initialization:
   565                           	opt stack 0
   566  0013BC                     __initialization:
   567                           	opt stack 0
   568                           
   569                           ; Clear objects allocated to BANK0 (65 bytes)
   570  0013BC  EE00  F060         	lfsr	0,__pbssBANK0
   571  0013C0  0E41               	movlw	65
   572  0013C2                     clear_0:
   573  0013C2  6AEE               	clrf	postinc0,c
   574  0013C4  06E8               	decf	wreg,f,c
   575  0013C6  E1FD               	bnz	clear_0
   576                           
   577                           ; Clear objects allocated to COMRAM (6 bytes)
   578  0013C8  6A4F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   579  0013CA  6A4E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   580  0013CC  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   581  0013CE  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   582  0013D0  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   583  0013D2  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   584                           
   585                           ; Initialize objects allocated to BANK0 (10 bytes)
   586                           ; load TBLPTR registers with __pidataBANK0
   587  0013D4  0E8E               	movlw	low __pidataBANK0
   588  0013D6  6EF6               	movwf	tblptrl,c
   589  0013D8  0E19               	movlw	high __pidataBANK0
   590  0013DA  6EF7               	movwf	tblptrh,c
   591  0013DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   592  0013DE  6EF8               	movwf	tblptru,c
   593  0013E0  EE00  F0B3         	lfsr	0,__pdataBANK0
   594  0013E4  EE10 F00A          	lfsr	1,10
   595  0013E8                     copy_data0:
   596  0013E8  0009               	tblrd		*+
   597  0013EA  CFF5 FFEE          	movff	tablat,postinc0
   598  0013EE  50E5               	movf	postdec1,w,c
   599  0013F0  50E1               	movf	fsr1l,w,c
   600  0013F2  E1FA               	bnz	copy_data0
   601                           
   602                           ; Initialize objects allocated to COMRAM (14 bytes)
   603                           ; load TBLPTR registers with __pidataCOMRAM
   604  0013F4  0E5C               	movlw	low __pidataCOMRAM
   605  0013F6  6EF6               	movwf	tblptrl,c
   606  0013F8  0E19               	movlw	high __pidataCOMRAM
   607  0013FA  6EF7               	movwf	tblptrh,c
   608  0013FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   609  0013FE  6EF8               	movwf	tblptru,c
   610  001400  EE00  F03C         	lfsr	0,__pdataCOMRAM
   611  001404  EE10 F00E          	lfsr	1,14
   612  001408                     copy_data1:
   613  001408  0009               	tblrd		*+
   614  00140A  CFF5 FFEE          	movff	tablat,postinc0
   615  00140E  50E5               	movf	postdec1,w,c
   616  001410  50E1               	movf	fsr1l,w,c
   617  001412  E1FA               	bnz	copy_data1
   618  001414                     end_of_initialization:
   619                           	opt stack 0
   620  001414                     __end_of__initialization:
   621                           	opt stack 0
   622  001414  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   623  001416  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   624  001418  0E00               	movlw	low (__Lmediumconst shr (0+16))
   625  00141A  6EF8               	movwf	tblptru,c
   626  00141C  0100               	movlb	0
   627  00141E  EFB3  F001         	goto	_main	;jump to C main() function
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           
   637                           	psect	bssCOMRAM
   638  00004A                     __pbssCOMRAM:
   639                           	opt stack 0
   640  00004A                     _clock_reg:
   641                           	opt stack 0
   642  00004A                     	ds	3
   643  00004D                     _flag:
   644                           	opt stack 0
   645  00004D                     	ds	2
   646  00004F                     _new_time_flag:
   647                           	opt stack 0
   648  00004F                     	ds	1
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           postdec1	equ	0xFE5
   656                           fsr1l	equ	0xFE1
   657                           
   658                           	psect	dataCOMRAM
   659  00003C                     __pdataCOMRAM:
   660                           	opt stack 0
   661  00003C                     _e_address:
   662                           	opt stack 0
   663  00003C                     	ds	2
   664  00003E                     _save:
   665                           	opt stack 0
   666  00003E                     	ds	2
   667  000040                     read_switches@once:
   668                           	opt stack 0
   669  000040                     	ds	1
   670  000041                     _n_time:
   671                           	opt stack 0
   672  000041                     	ds	9
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           postinc0	equ	0xFEE
   678                           wreg	equ	0xFE8
   679                           postdec1	equ	0xFE5
   680                           fsr1l	equ	0xFE1
   681                           
   682                           	psect	bssBANK0
   683  000060                     __pbssBANK0:
   684                           	opt stack 0
   685  000060                     password_change@F16060:
   686                           	opt stack 0
   687  000060                     	ds	5
   688  000065                     password_change@F16062:
   689                           	opt stack 0
   690  000065                     	ds	5
   691  00006A                     password_compare@F16068:
   692                           	opt stack 0
   693  00006A                     	ds	5
   694  00006F                     password_compare@F16070:
   695                           	opt stack 0
   696  00006F                     	ds	5
   697  000074                     _calender_reg:
   698                           	opt stack 0
   699  000074                     	ds	4
   700  000078                     isr@count:
   701                           	opt stack 0
   702  000078                     	ds	2
   703  00007A                     main@count:
   704                           	opt stack 0
   705  00007A                     	ds	2
   706  00007C                     _save_array:
   707                           	opt stack 0
   708  00007C                     	ds	17
   709  00008D                     _date:
   710                           	opt stack 0
   711  00008D                     	ds	11
   712  000098                     _time:
   713                           	opt stack 0
   714  000098                     	ds	9
   715                           tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           postdec1	equ	0xFE5
   722                           fsr1l	equ	0xFE1
   723                           
   724                           	psect	dataBANK0
   725  0000B3                     __pdataBANK0:
   726                           	opt stack 0
   727  0000B3                     display_menu@F16059:
   728                           	opt stack 0
   729  0000B3                     	ds	10
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           postinc0	equ	0xFEE
   735                           wreg	equ	0xFE8
   736                           postdec1	equ	0xFE5
   737                           fsr1l	equ	0xFE1
   738                           
   739                           	psect	cstackBANK0
   740  0000A1                     __pcstackBANK0:
   741                           	opt stack 0
   742  0000A1                     display_menu@star:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x0
   746  0000A1                     	ds	2
   747  0000A3                     display_menu@menu_list:
   748                           	opt stack 0
   749                           
   750                           ; 10 bytes @ 0x2
   751  0000A3                     	ds	10
   752  0000AD                     display_menu@key1:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0xC
   756  0000AD                     	ds	1
   757  0000AE                     display_menu@temp:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0xD
   761  0000AE                     	ds	2
   762  0000B0                     display_menu@key:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0xF
   766  0000B0                     	ds	1
   767  0000B1                     display_menu@count:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x10
   771  0000B1                     	ds	2
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           postdec1	equ	0xFE5
   779                           fsr1l	equ	0xFE1
   780                           
   781                           	psect	cstackCOMRAM
   782  000001                     __pcstackCOMRAM:
   783                           	opt stack 0
   784  000001                     ??_isr:
   785  000001                     
   786                           ; 1 bytes @ 0x0
   787  000001                     	ds	14
   788  00000F                     ?_read_adc:
   789                           	opt stack 0
   790  00000F                     ?_strcmp:
   791                           	opt stack 0
   792  00000F                     ?___awdiv:
   793                           	opt stack 0
   794  00000F                     ?___awmod:
   795                           	opt stack 0
   796  00000F                     ?___lwdiv:
   797                           	opt stack 0
   798  00000F                     ?___lwmod:
   799                           	opt stack 0
   800  00000F                     clcd_write@control_bit:
   801                           	opt stack 0
   802  00000F                     read_switches@key1:
   803                           	opt stack 0
   804  00000F                     putch@byte:
   805                           	opt stack 0
   806  00000F                     write_internal_eeprom@data:
   807                           	opt stack 0
   808  00000F                     read_internal_eeprom@address:
   809                           	opt stack 0
   810  00000F                     i2c_write@data:
   811                           	opt stack 0
   812  00000F                     delay_fun@i:
   813                           	opt stack 0
   814  00000F                     save_time@i_231:
   815                           	opt stack 0
   816  00000F                     ___awdiv@dividend:
   817                           	opt stack 0
   818  00000F                     ___awmod@dividend:
   819                           	opt stack 0
   820  00000F                     ___lwdiv@dividend:
   821                           	opt stack 0
   822  00000F                     ___lwmod@dividend:
   823                           	opt stack 0
   824  00000F                     strcmp@s1:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0xE
   828  00000F                     	ds	1
   829  000010                     clcd_write@byte:
   830                           	opt stack 0
   831  000010                     read_switches@detection_type:
   832                           	opt stack 0
   833  000010                     write_ds1307@data:
   834                           	opt stack 0
   835  000010                     read_ds1307@address:
   836                           	opt stack 0
   837  000010                     write_internal_eeprom@address:
   838                           	opt stack 0
   839  000010                     puts@s:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0xF
   843  000010                     	ds	1
   844  000011                     ??_read_adc:
   845  000011                     clcd_putch@addr:
   846                           	opt stack 0
   847  000011                     read_switches@key:
   848                           	opt stack 0
   849  000011                     write_ds1307@address:
   850                           	opt stack 0
   851  000011                     read_ds1307@data:
   852                           	opt stack 0
   853  000011                     clcd_print@data:
   854                           	opt stack 0
   855  000011                     delay_fun@j:
   856                           	opt stack 0
   857  000011                     save_time@i:
   858                           	opt stack 0
   859  000011                     save_events@i:
   860                           	opt stack 0
   861  000011                     clear_log@address:
   862                           	opt stack 0
   863  000011                     ___awdiv@divisor:
   864                           	opt stack 0
   865  000011                     ___awmod@divisor:
   866                           	opt stack 0
   867  000011                     ___lwdiv@divisor:
   868                           	opt stack 0
   869  000011                     ___lwmod@divisor:
   870                           	opt stack 0
   871  000011                     strcmp@s2:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x10
   875  000011                     	ds	1
   876  000012                     clcd_putch@data:
   877                           	opt stack 0
   878  000012                     init_ds1307@dummy:
   879                           	opt stack 0
   880  000012                     download_log@new1:
   881                           	opt stack 0
   882                           
   883                           ; 16 bytes @ 0x11
   884  000012                     	ds	1
   885  000013                     ??_strcmp:
   886  000013                     clcd_print@addr:
   887                           	opt stack 0
   888  000013                     ___awdiv@counter:
   889                           	opt stack 0
   890  000013                     ___awmod@counter:
   891                           	opt stack 0
   892  000013                     ___lwmod@counter:
   893                           	opt stack 0
   894  000013                     delay_fun@k:
   895                           	opt stack 0
   896  000013                     read_adc@reg_val:
   897                           	opt stack 0
   898  000013                     ___lwdiv@quotient:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x12
   902  000013                     	ds	1
   903  000014                     ??_view_log:
   904  000014                     ??_set_time:
   905  000014                     ___awdiv@sign:
   906                           	opt stack 0
   907  000014                     ___awmod@sign:
   908                           	opt stack 0
   909  000014                     strcmp@r:
   910                           	opt stack 0
   911  000014                     ON_OFF_up_down_gear@gear:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x13
   915  000014                     	ds	1
   916  000015                     ?_password_compare:
   917                           	opt stack 0
   918  000015                     set_time@t_flag:
   919                           	opt stack 0
   920  000015                     ___lwdiv@counter:
   921                           	opt stack 0
   922  000015                     password_change@star:
   923                           	opt stack 0
   924  000015                     ___awdiv@quotient:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x14
   928  000015                     	ds	1
   929  000016                     ??_ON_OFF_up_down_gear:
   930  000016                     view_log@key1:
   931                           	opt stack 0
   932  000016                     set_time@sh_flag:
   933                           	opt stack 0
   934  000016                     save_speed@adc_reg_val:
   935                           	opt stack 0
   936  000016                     display_speed@adc_reg_val:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x15
   940  000016                     	ds	1
   941  000017                     view_log@count:
   942                           	opt stack 0
   943  000017                     set_time@i_417:
   944                           	opt stack 0
   945  000017                     password_change@r_password:
   946                           	opt stack 0
   947  000017                     password_compare@enter_pass:
   948                           	opt stack 0
   949                           
   950                           ; 5 bytes @ 0x16
   951  000017                     	ds	1
   952  000018                     save_speed@buff:
   953                           	opt stack 0
   954  000018                     display_speed@buff:
   955                           	opt stack 0
   956                           
   957                           ; 5 bytes @ 0x17
   958  000018                     	ds	1
   959  000019                     view_log@inc_dec:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x18
   963  000019                     	ds	2
   964  00001B                     view_log@key:
   965                           	opt stack 0
   966  00001B                     set_time@i_418:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x1A
   970  00001B                     	ds	1
   971  00001C                     view_log@add:
   972                           	opt stack 0
   973  00001C                     password_compare@i:
   974                           	opt stack 0
   975  00001C                     password_change@c_password:
   976                           	opt stack 0
   977                           
   978                           ; 5 bytes @ 0x1B
   979  00001C                     	ds	1
   980  00001D                     save_speed@i:
   981                           	opt stack 0
   982  00001D                     display_speed@i:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x1C
   986  00001D                     	ds	1
   987  00001E                     password_compare@flag1:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0x1D
   991  00001E                     	ds	1
   992  00001F                     set_time@i_419:
   993                           	opt stack 0
   994                           
   995                           ; 4 bytes @ 0x1E
   996  00001F                     	ds	1
   997  000020                     password_compare@password:
   998                           	opt stack 0
   999                           
  1000                           ; 5 bytes @ 0x1F
  1001  000020                     	ds	1
  1002  000021                     password_change@address:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x20
  1006  000021                     	ds	1
  1007  000022                     download_log@j:
  1008                           	opt stack 0
  1009  000022                     password_change@count:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x21
  1013  000022                     	ds	1
  1014  000023                     set_time@i_420:
  1015                           	opt stack 0
  1016                           
  1017                           ; 4 bytes @ 0x22
  1018  000023                     	ds	1
  1019  000024                     password_change@key:
  1020                           	opt stack 0
  1021  000024                     download_log@i:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x23
  1025  000024                     	ds	1
  1026  000025                     password_compare@ch:
  1027                           	opt stack 0
  1028  000025                     password_change@pos:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x24
  1032  000025                     	ds	1
  1033  000026                     password_compare@address:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x25
  1037  000026                     	ds	1
  1038  000027                     set_time@key:
  1039                           	opt stack 0
  1040  000027                     password_compare@flag:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x26
  1044  000027                     	ds	1
  1045  000028                     set_time@just:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x27
  1049  000028                     	ds	1
  1050  000029                     set_time@count:
  1051                           	opt stack 0
  1052  000029                     password_compare@count:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x28
  1056  000029                     	ds	1
  1057  00002A                     ??_display_menu:
  1058                           
  1059                           ; 1 bytes @ 0x29
  1060  00002A                     	ds	1
  1061  00002B                     password_compare@j:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x2A
  1065  00002B                     	ds	2
  1066  00002D                     password_compare@key:
  1067                           	opt stack 0
  1068                           
  1069                           ; 1 bytes @ 0x2C
  1070  00002D                     	ds	1
  1071  00002E                     password_compare@pos:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0x2D
  1075  00002E                     	ds	2
  1076  000030                     ??_main:
  1077                           
  1078                           ; 1 bytes @ 0x2F
  1079  000030                     	ds	2
  1080  000032                     main@status:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x31
  1084  000032                     	ds	2
  1085  000034                     main@key1:
  1086                           	opt stack 0
  1087                           
  1088                           ; 1 bytes @ 0x33
  1089  000034                     	ds	1
  1090  000035                     main@wait:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0x34
  1094  000035                     	ds	1
  1095  000036                     main@adc_reg_val:
  1096                           	opt stack 0
  1097                           
  1098                           ; 2 bytes @ 0x35
  1099  000036                     	ds	2
  1100  000038                     main@ON_OFF:
  1101                           	opt stack 0
  1102                           
  1103                           ; 1 bytes @ 0x37
  1104  000038                     	ds	1
  1105  000039                     main@gear:
  1106                           	opt stack 0
  1107                           
  1108                           ; 2 bytes @ 0x38
  1109  000039                     	ds	2
  1110  00003B                     main@key:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x3A
  1114  00003B                     	ds	1
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           postdec1	equ	0xFE5
  1122                           fsr1l	equ	0xFE1
  1123                           
  1124 ;;
  1125 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1126 ;;
  1127 ;; *************** function _main *****************
  1128 ;; Defined at:
  1129 ;;		line 25 in file "main.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  wait            1   52[COMRAM] unsigned char 
  1134 ;;  buff            5    0        unsigned char [5]
  1135 ;;  gear            2   56[COMRAM] unsigned short 
  1136 ;;  adc_reg_val     2   53[COMRAM] unsigned short 
  1137 ;;  status          2   49[COMRAM] short 
  1138 ;;  key             1   58[COMRAM] unsigned char 
  1139 ;;  ON_OFF          1   55[COMRAM] unsigned char 
  1140 ;;  key1            1   51[COMRAM] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1150 ;;      Params:         0       0       0       0       0       0       0
  1151 ;;      Locals:        10       0       0       0       0       0       0
  1152 ;;      Temps:          2       0       0       0       0       0       0
  1153 ;;      Totals:        12       0       0       0       0       0       0
  1154 ;;Total ram usage:       12 bytes
  1155 ;; Hardware stack levels required when called:    7
  1156 ;; This function calls:
  1157 ;;		_ON_OFF_up_down_gear
  1158 ;;		___awdiv
  1159 ;;		___awmod
  1160 ;;		_clcd_print
  1161 ;;		_clcd_putch
  1162 ;;		_clcd_write
  1163 ;;		_delay_fun
  1164 ;;		_display_menu
  1165 ;;		_display_speed
  1166 ;;		_display_time
  1167 ;;		_get_time
  1168 ;;		_init_config
  1169 ;;		_password_compare
  1170 ;;		_read_adc
  1171 ;;		_read_switches
  1172 ;;		_save_events
  1173 ;;		_save_speed
  1174 ;;		_save_time
  1175 ;;		_write_internal_eeprom
  1176 ;; This function is called by:
  1177 ;;		Startup code after reset
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text0
  1182  000366                     __ptext0:
  1183                           	opt stack 0
  1184  000366                     _main:
  1185                           	opt stack 24
  1186                           
  1187                           ;main.c: 27: init_config();
  1188                           
  1189                           ;incstack = 0
  1190  000366  EC67  F00C         	call	_init_config	;wreg free
  1191                           
  1192                           ;main.c: 28: char buff[5];
  1193                           ;main.c: 29: unsigned short adc_reg_val, gear = 0;
  1194  00036A  0E00               	movlw	0
  1195  00036C  6E3A               	movwf	main@gear+1,c
  1196  00036E  0E00               	movlw	0
  1197  000370  6E39               	movwf	main@gear,c
  1198                           
  1199                           ;main.c: 30: static unsigned short count = 0;
  1200                           ;main.c: 31: unsigned char key,key1, ON_OFF = 0x00;
  1201  000372  0E00               	movlw	0
  1202  000374  6E38               	movwf	main@ON_OFF,c
  1203                           
  1204                           ;main.c: 32: short status;
  1205                           ;main.c: 36: write_internal_eeprom(0x01, '1');
  1206  000376  0E31               	movlw	49
  1207  000378  6E0F               	movwf	write_internal_eeprom@data,c
  1208  00037A  0E01               	movlw	1
  1209  00037C  EC34  F00C         	call	_write_internal_eeprom
  1210                           
  1211                           ;main.c: 37: write_internal_eeprom(0x03, '1');
  1212  000380  0E31               	movlw	49
  1213  000382  6E0F               	movwf	write_internal_eeprom@data,c
  1214  000384  0E03               	movlw	3
  1215  000386  EC34  F00C         	call	_write_internal_eeprom
  1216                           
  1217                           ;main.c: 38: write_internal_eeprom(0x04, '1');
  1218  00038A  0E31               	movlw	49
  1219  00038C  6E0F               	movwf	write_internal_eeprom@data,c
  1220  00038E  0E04               	movlw	4
  1221  000390  EC34  F00C         	call	_write_internal_eeprom
  1222                           
  1223                           ;main.c: 39: write_internal_eeprom(0x02, '1');
  1224  000394  0E31               	movlw	49
  1225  000396  6E0F               	movwf	write_internal_eeprom@data,c
  1226  000398  0E02               	movlw	2
  1227  00039A  EC34  F00C         	call	_write_internal_eeprom
  1228  00039E                     l5111:
  1229                           
  1230                           ;main.c: 45: {
  1231                           ;main.c: 47: clcd_print("TIME", (0x80 + (1)));
  1232  00039E  0ED0               	movlw	low STR_1
  1233  0003A0  6E11               	movwf	clcd_print@data,c
  1234  0003A2  0E2F               	movlw	high STR_1
  1235  0003A4  6E12               	movwf	clcd_print@data+1,c
  1236  0003A6  0E81               	movlw	129
  1237  0003A8  6E13               	movwf	clcd_print@addr,c
  1238  0003AA  EC43  F00A         	call	_clcd_print	;wreg free
  1239                           
  1240                           ;main.c: 48: clcd_print("EVT", (0x80 + (9)));
  1241  0003AE  0EFA               	movlw	low STR_2
  1242  0003B0  6E11               	movwf	clcd_print@data,c
  1243  0003B2  0E2F               	movlw	high STR_2
  1244  0003B4  6E12               	movwf	clcd_print@data+1,c
  1245  0003B6  0E89               	movlw	137
  1246  0003B8  6E13               	movwf	clcd_print@addr,c
  1247  0003BA  EC43  F00A         	call	_clcd_print	;wreg free
  1248                           
  1249                           ;main.c: 49: clcd_print("SPD", (0x80 + (13)));
  1250  0003BE  0E31               	movlw	low (STR_15+14)
  1251  0003C0  6E11               	movwf	clcd_print@data,c
  1252  0003C2  0E2F               	movlw	high (STR_15+14)
  1253  0003C4  6E12               	movwf	clcd_print@data+1,c
  1254  0003C6  0E8D               	movlw	141
  1255  0003C8  6E13               	movwf	clcd_print@addr,c
  1256  0003CA  EC43  F00A         	call	_clcd_print	;wreg free
  1257                           
  1258                           ;main.c: 56: save_array[16] = '\0';
  1259  0003CE  0E00               	movlw	0
  1260  0003D0  0100               	movlb	0	; () banked
  1261  0003D2  6F8C               	movwf	(_save_array+16)& (0+255),b
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;main.c: 58: get_time();
  1265  0003D4  ECC4  F008         	call	_get_time	;wreg free
  1266                           
  1267                           ;main.c: 59: display_time();
  1268  0003D8  EC94  F00C         	call	_display_time	;wreg free
  1269                           
  1270                           ;main.c: 61: adc_reg_val = read_adc(0x04);
  1271  0003DC  0E04               	movlw	4
  1272  0003DE  EC21  F00C         	call	_read_adc
  1273  0003E2  C00F  F036         	movff	?_read_adc,main@adc_reg_val
  1274  0003E6  C010  F037         	movff	?_read_adc+1,main@adc_reg_val+1
  1275                           
  1276                           ;main.c: 62: display_speed(adc_reg_val);
  1277  0003EA  C036  F016         	movff	main@adc_reg_val,display_speed@adc_reg_val
  1278  0003EE  C037  F017         	movff	main@adc_reg_val+1,display_speed@adc_reg_val+1
  1279  0003F2  ECAA  F009         	call	_display_speed	;wreg free
  1280                           
  1281                           ;main.c: 64: key = read_switches(1);
  1282  0003F6  0E01               	movlw	1
  1283  0003F8  EC87  F00B         	call	_read_switches
  1284  0003FC  6E3B               	movwf	main@key,c
  1285                           
  1286                           ;main.c: 65: key1 = read_switches(0);
  1287  0003FE  0E00               	movlw	0
  1288  000400  EC87  F00B         	call	_read_switches
  1289  000404  6E34               	movwf	main@key1,c
  1290                           
  1291                           ;main.c: 68: if (key1 == 10)
  1292  000406  0E0A               	movlw	10
  1293  000408  1834               	xorwf	main@key1,w,c
  1294  00040A  A4D8               	btfss	status,2,c
  1295  00040C  D07A               	goto	l5173
  1296                           
  1297                           ;main.c: 69: {
  1298                           ;main.c: 70: if(count++ >= 100)
  1299  00040E  0100               	movlb	0	; () banked
  1300  000410  517A               	movf	main@count& (0+255),w,b
  1301  000412  6E30               	movwf	??_main& (0+255),c
  1302  000414  0100               	movlb	0	; () banked
  1303  000416  517B               	movf	(main@count+1)& (0+255),w,b
  1304  000418  6E31               	movwf	(??_main+1)& (0+255),c
  1305  00041A  0100               	movlb	0	; () banked
  1306  00041C  4B7A               	infsnz	main@count& (0+255),f,b
  1307  00041E  2B7B               	incf	(main@count+1)& (0+255),f,b
  1308  000420  5031               	movf	??_main+1,w,c
  1309  000422  E104               	bnz	u4570
  1310  000424  0E64               	movlw	100
  1311  000426  5C30               	subwf	??_main,w,c
  1312  000428  A0D8               	btfss	status,0,c
  1313  00042A  D06B               	goto	l5173
  1314  00042C                     u4570:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;main.c: 71: {
  1318                           ;main.c: 72: if (flag == 0)
  1319  00042C  504D               	movf	_flag,w,c
  1320  00042E  104E               	iorwf	_flag+1,w,c
  1321  000430  A4D8               	btfss	status,2,c
  1322  000432  D023               	goto	l5153
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;main.c: 73: {
  1326                           ;main.c: 74: status = password_compare();
  1327  000434  EC07  F003         	call	_password_compare	;wreg free
  1328  000438  C015  F032         	movff	?_password_compare,main@status
  1329  00043C  C016  F033         	movff	?_password_compare+1,main@status+1
  1330                           
  1331                           ;main.c: 76: clcd_write(0x0C, 0);
  1332  000440  0E00               	movlw	0
  1333  000442  6E0F               	movwf	clcd_write@control_bit,c
  1334  000444  0E0C               	movlw	12
  1335  000446  EC0D  F00C         	call	_clcd_write
  1336                           
  1337                           ;main.c: 78: if(status)
  1338  00044A  5032               	movf	main@status,w,c
  1339  00044C  1033               	iorwf	main@status+1,w,c
  1340  00044E  B4D8               	btfsc	status,2,c
  1341  000450  D003               	goto	l5145
  1342                           
  1343                           ;main.c: 79: {
  1344                           ;main.c: 81: display_menu();
  1345  000452  EC53  F005         	call	_display_menu	;wreg free
  1346                           
  1347                           ;main.c: 82: }
  1348  000456  D00B               	goto	l5151
  1349  000458                     l5145:
  1350                           
  1351                           ;main.c: 83: else
  1352                           ;main.c: 84: {
  1353                           ;main.c: 85: flag = 15;
  1354  000458  0E00               	movlw	0
  1355  00045A  6E4E               	movwf	_flag+1,c
  1356  00045C  0E0F               	movlw	15
  1357  00045E  6E4D               	movwf	_flag,c
  1358                           
  1359                           ;main.c: 86: delay_fun();
  1360  000460  EC73  F00A         	call	_delay_fun	;wreg free
  1361                           
  1362                           ;main.c: 87: clcd_write(0x01, 0);
  1363  000464  0E00               	movlw	0
  1364  000466  6E0F               	movwf	clcd_write@control_bit,c
  1365  000468  0E01               	movlw	1
  1366  00046A  EC0D  F00C         	call	_clcd_write
  1367  00046E                     l5151:
  1368                           
  1369                           ;main.c: 88: }
  1370                           ;main.c: 89: count = 0;
  1371  00046E  0E00               	movlw	0
  1372  000470  0100               	movlb	0	; () banked
  1373  000472  6F7B               	movwf	(main@count+1)& (0+255),b
  1374  000474  0E00               	movlw	0
  1375  000476  6F7A               	movwf	main@count& (0+255),b
  1376                           
  1377                           ;main.c: 90: }
  1378  000478  D044               	goto	l5173
  1379  00047A                     l5153:
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;main.c: 91: else if(flag != 0)
  1383  00047A  504D               	movf	_flag,w,c
  1384  00047C  104E               	iorwf	_flag+1,w,c
  1385  00047E  B4D8               	btfsc	status,2,c
  1386  000480  D040               	goto	l5173
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;main.c: 92: {
  1390                           ;main.c: 93: clcd_write(0x01, 0);
  1391  000482  0E00               	movlw	0
  1392  000484  6E0F               	movwf	clcd_write@control_bit,c
  1393  000486  0E01               	movlw	1
  1394  000488  EC0D  F00C         	call	_clcd_write
  1395                           
  1396                           ;main.c: 94: char wait = flag % 10 + '0';
  1397  00048C  C04D  F00F         	movff	_flag,___awmod@dividend
  1398  000490  C04E  F010         	movff	_flag+1,___awmod@dividend+1
  1399  000494  0E00               	movlw	0
  1400  000496  6E12               	movwf	___awmod@divisor+1,c
  1401  000498  0E0A               	movlw	10
  1402  00049A  6E11               	movwf	___awmod@divisor,c
  1403  00049C  EC3D  F009         	call	___awmod	;wreg free
  1404  0004A0  500F               	movf	?___awmod,w,c
  1405  0004A2  0F30               	addlw	48
  1406  0004A4  6E35               	movwf	main@wait,c
  1407                           
  1408                           ;main.c: 95: clcd_print("Wait", (0x80 + (4)));
  1409  0004A6  0ED5               	movlw	low STR_4
  1410  0004A8  6E11               	movwf	clcd_print@data,c
  1411  0004AA  0E2F               	movlw	high STR_4
  1412  0004AC  6E12               	movwf	clcd_print@data+1,c
  1413  0004AE  0E84               	movlw	132
  1414  0004B0  6E13               	movwf	clcd_print@addr,c
  1415  0004B2  EC43  F00A         	call	_clcd_print	;wreg free
  1416                           
  1417                           ;main.c: 96: clcd_putch(wait, (0xC0 + (2)));
  1418  0004B6  0EC2               	movlw	194
  1419  0004B8  6E11               	movwf	clcd_putch@addr,c
  1420  0004BA  5035               	movf	main@wait,w,c
  1421  0004BC  EC74  F00C         	call	_clcd_putch
  1422                           
  1423                           ;main.c: 97: wait = flag / 10 + '0';
  1424  0004C0  C04D  F00F         	movff	_flag,___awdiv@dividend
  1425  0004C4  C04E  F010         	movff	_flag+1,___awdiv@dividend+1
  1426  0004C8  0E00               	movlw	0
  1427  0004CA  6E12               	movwf	___awdiv@divisor+1,c
  1428  0004CC  0E0A               	movlw	10
  1429  0004CE  6E11               	movwf	___awdiv@divisor,c
  1430  0004D0  EC82  F008         	call	___awdiv	;wreg free
  1431  0004D4  500F               	movf	?___awdiv,w,c
  1432  0004D6  0F30               	addlw	48
  1433  0004D8  6E35               	movwf	main@wait,c
  1434                           
  1435                           ;main.c: 98: clcd_putch(wait, (0xC0 + (1)));
  1436  0004DA  0EC1               	movlw	193
  1437  0004DC  6E11               	movwf	clcd_putch@addr,c
  1438  0004DE  5035               	movf	main@wait,w,c
  1439  0004E0  EC74  F00C         	call	_clcd_putch
  1440                           
  1441                           ;main.c: 100: clcd_print("minutes", (0xC0 + (5)));
  1442  0004E4  0E4D               	movlw	low (STR_29+8)
  1443  0004E6  6E11               	movwf	clcd_print@data,c
  1444  0004E8  0E2F               	movlw	high (STR_29+8)
  1445  0004EA  6E12               	movwf	clcd_print@data+1,c
  1446  0004EC  0EC5               	movlw	197
  1447  0004EE  6E13               	movwf	clcd_print@addr,c
  1448  0004F0  EC43  F00A         	call	_clcd_print	;wreg free
  1449                           
  1450                           ;main.c: 101: delay_fun();
  1451  0004F4  EC73  F00A         	call	_delay_fun	;wreg free
  1452                           
  1453                           ;main.c: 102: clcd_write(0x01, 0);
  1454  0004F8  0E00               	movlw	0
  1455  0004FA  6E0F               	movwf	clcd_write@control_bit,c
  1456  0004FC  0E01               	movlw	1
  1457  0004FE  EC0D  F00C         	call	_clcd_write
  1458  000502                     l5173:
  1459                           
  1460                           ;main.c: 104: }
  1461                           ;main.c: 107: }
  1462                           ;main.c: 108: }
  1463                           ;main.c: 110: if (key == 1 ||key == 2 || key == 3 || key == 4 || key == 5)
  1464  000502  043B               	decf	main@key,w,c
  1465  000504  B4D8               	btfsc	status,2,c
  1466  000506  D010               	goto	l5183
  1467  000508  0E02               	movlw	2
  1468  00050A  183B               	xorwf	main@key,w,c
  1469  00050C  B4D8               	btfsc	status,2,c
  1470  00050E  D00C               	goto	l5183
  1471  000510  0E03               	movlw	3
  1472  000512  183B               	xorwf	main@key,w,c
  1473  000514  B4D8               	btfsc	status,2,c
  1474  000516  D008               	goto	l5183
  1475  000518  0E04               	movlw	4
  1476  00051A  183B               	xorwf	main@key,w,c
  1477  00051C  B4D8               	btfsc	status,2,c
  1478  00051E  D004               	goto	l5183
  1479  000520  0E05               	movlw	5
  1480  000522  183B               	xorwf	main@key,w,c
  1481  000524  A4D8               	btfss	status,2,c
  1482  000526  D73B               	goto	l5111
  1483  000528                     l5183:
  1484                           
  1485                           ;main.c: 111: {
  1486                           ;main.c: 112: if (key == 1)
  1487  000528  043B               	decf	main@key,w,c
  1488  00052A  A4D8               	btfss	status,2,c
  1489  00052C  D035               	goto	l5203
  1490                           
  1491                           ;main.c: 113: {
  1492                           ;main.c: 114: ON_OFF = !ON_OFF;
  1493  00052E  5038               	movf	main@ON_OFF,w,c
  1494  000530  A4D8               	btfss	status,2,c
  1495  000532  D002               	goto	u4670
  1496  000534  0E01               	movlw	1
  1497  000536  D001               	goto	u4680
  1498  000538                     u4670:
  1499  000538  0E00               	movlw	0
  1500  00053A                     u4680:
  1501  00053A  6E38               	movwf	main@ON_OFF,c
  1502                           
  1503                           ;main.c: 116: save_time();
  1504  00053C  EC75  F009         	call	_save_time	;wreg free
  1505                           
  1506                           ;main.c: 118: if (ON_OFF)
  1507  000540  5038               	movf	main@ON_OFF,w,c
  1508  000542  B4D8               	btfsc	status,2,c
  1509  000544  D013               	goto	l5197
  1510                           
  1511                           ;main.c: 119: {
  1512                           ;main.c: 121: clcd_print("ON ", (0xC0 + (9)));
  1513  000546  0EF2               	movlw	low STR_6
  1514  000548  6E11               	movwf	clcd_print@data,c
  1515  00054A  0E2F               	movlw	high STR_6
  1516  00054C  6E12               	movwf	clcd_print@data+1,c
  1517  00054E  0EC9               	movlw	201
  1518  000550  6E13               	movwf	clcd_print@addr,c
  1519  000552  EC43  F00A         	call	_clcd_print	;wreg free
  1520                           
  1521                           ;main.c: 122: gear = 0;
  1522  000556  0E00               	movlw	0
  1523  000558  6E3A               	movwf	main@gear+1,c
  1524  00055A  0E00               	movlw	0
  1525  00055C  6E39               	movwf	main@gear,c
  1526                           
  1527                           ;main.c: 126: ON_OFF_up_down_gear(10);
  1528  00055E  0E00               	movlw	0
  1529  000560  6E15               	movwf	ON_OFF_up_down_gear@gear+1,c
  1530  000562  0E0A               	movlw	10
  1531  000564  6E14               	movwf	ON_OFF_up_down_gear@gear,c
  1532  000566  EC3D  F007         	call	_ON_OFF_up_down_gear	;wreg free
  1533                           
  1534                           ;main.c: 127: }
  1535  00056A  D00E               	goto	l5199
  1536  00056C                     l5197:
  1537                           
  1538                           ;main.c: 128: else
  1539                           ;main.c: 129: {
  1540                           ;main.c: 132: clcd_print("OFF", (0xC0 + (9)));
  1541  00056C  0EF6               	movlw	low STR_7
  1542  00056E  6E11               	movwf	clcd_print@data,c
  1543  000570  0E2F               	movlw	high STR_7
  1544  000572  6E12               	movwf	clcd_print@data+1,c
  1545  000574  0EC9               	movlw	201
  1546  000576  6E13               	movwf	clcd_print@addr,c
  1547  000578  EC43  F00A         	call	_clcd_print	;wreg free
  1548                           
  1549                           ;main.c: 136: ON_OFF_up_down_gear(11);
  1550  00057C  0E00               	movlw	0
  1551  00057E  6E15               	movwf	ON_OFF_up_down_gear@gear+1,c
  1552  000580  0E0B               	movlw	11
  1553  000582  6E14               	movwf	ON_OFF_up_down_gear@gear,c
  1554  000584  EC3D  F007         	call	_ON_OFF_up_down_gear	;wreg free
  1555  000588                     l5199:
  1556                           
  1557                           ;main.c: 137: }
  1558                           ;main.c: 139: save_speed(adc_reg_val);
  1559  000588  C036  F016         	movff	main@adc_reg_val,save_speed@adc_reg_val
  1560  00058C  C037  F017         	movff	main@adc_reg_val+1,save_speed@adc_reg_val+1
  1561  000590  EC11  F00A         	call	_save_speed	;wreg free
  1562                           
  1563                           ;main.c: 141: save_events();
  1564  000594  EC1D  F00B         	call	_save_events	;wreg free
  1565  000598                     l5203:
  1566                           
  1567                           ;main.c: 142: }
  1568                           ;main.c: 144: if ((key == 2 || key == 3) && ON_OFF)
  1569  000598  0E02               	movlw	2
  1570  00059A  183B               	xorwf	main@key,w,c
  1571  00059C  B4D8               	btfsc	status,2,c
  1572  00059E  D004               	goto	l5207
  1573  0005A0  0E03               	movlw	3
  1574  0005A2  183B               	xorwf	main@key,w,c
  1575  0005A4  A4D8               	btfss	status,2,c
  1576  0005A6  D6FB               	goto	l5111
  1577  0005A8                     l5207:
  1578  0005A8  5038               	movf	main@ON_OFF,w,c
  1579  0005AA  B4D8               	btfsc	status,2,c
  1580  0005AC  D6F8               	goto	l5111
  1581                           
  1582                           ;main.c: 145: {
  1583                           ;main.c: 148: if (key == 2)
  1584  0005AE  0E02               	movlw	2
  1585  0005B0  183B               	xorwf	main@key,w,c
  1586  0005B2  A4D8               	btfss	status,2,c
  1587  0005B4  D00B               	goto	l5217
  1588                           
  1589                           ;main.c: 149: {
  1590                           ;main.c: 150: gear++;
  1591  0005B6  4A39               	infsnz	main@gear,f,c
  1592  0005B8  2A3A               	incf	main@gear+1,f,c
  1593                           
  1594                           ;main.c: 151: if (gear == 7)
  1595  0005BA  0E07               	movlw	7
  1596  0005BC  1839               	xorwf	main@gear,w,c
  1597  0005BE  103A               	iorwf	main@gear+1,w,c
  1598  0005C0  A4D8               	btfss	status,2,c
  1599  0005C2  D00F               	goto	l5223
  1600                           
  1601                           ;main.c: 152: gear = 6;
  1602  0005C4  0E00               	movlw	0
  1603  0005C6  6E3A               	movwf	main@gear+1,c
  1604  0005C8  0E06               	movlw	6
  1605  0005CA  D00A               	goto	L1
  1606  0005CC                     l5217:
  1607                           
  1608                           ;main.c: 154: else
  1609                           ;main.c: 155: {
  1610                           ;main.c: 156: gear--;
  1611  0005CC  0639               	decf	main@gear,f,c
  1612  0005CE  A0D8               	btfss	status,0,c
  1613  0005D0  063A               	decf	main@gear+1,f,c
  1614                           
  1615                           ;main.c: 157: if (gear == 0)
  1616  0005D2  5039               	movf	main@gear,w,c
  1617  0005D4  103A               	iorwf	main@gear+1,w,c
  1618  0005D6  A4D8               	btfss	status,2,c
  1619  0005D8  D004               	goto	l5223
  1620                           
  1621                           ;main.c: 158: gear = 1;
  1622  0005DA  0E00               	movlw	0
  1623  0005DC  6E3A               	movwf	main@gear+1,c
  1624  0005DE  0E01               	movlw	1
  1625  0005E0                     L1:
  1626  0005E0  6E39               	movwf	main@gear,c
  1627  0005E2                     l5223:
  1628                           
  1629                           ;main.c: 159: }
  1630                           ;main.c: 160: save_time();
  1631  0005E2  EC75  F009         	call	_save_time	;wreg free
  1632                           
  1633                           ;main.c: 162: ON_OFF_up_down_gear(gear);
  1634  0005E6  C039  F014         	movff	main@gear,ON_OFF_up_down_gear@gear
  1635  0005EA  C03A  F015         	movff	main@gear+1,ON_OFF_up_down_gear@gear+1
  1636  0005EE  EC3D  F007         	call	_ON_OFF_up_down_gear	;wreg free
  1637                           
  1638                           ;main.c: 163: count = 0;
  1639  0005F2  0E00               	movlw	0
  1640  0005F4  0100               	movlb	0	; () banked
  1641  0005F6  6F7B               	movwf	(main@count+1)& (0+255),b
  1642  0005F8  0E00               	movlw	0
  1643  0005FA  6F7A               	movwf	main@count& (0+255),b
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;main.c: 165: save_speed(adc_reg_val);
  1647  0005FC  C036  F016         	movff	main@adc_reg_val,save_speed@adc_reg_val
  1648  000600  C037  F017         	movff	main@adc_reg_val+1,save_speed@adc_reg_val+1
  1649  000604  EC11  F00A         	call	_save_speed	;wreg free
  1650                           
  1651                           ;main.c: 167: save_events();
  1652  000608  EC1D  F00B         	call	_save_events	;wreg free
  1653  00060C  D6C8               	goto	l5111
  1654  00060E                     __end_of_main:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           postdec1	equ	0xFE5
  1663                           fsr1l	equ	0xFE1
  1664                           status	equ	0xFD8
  1665                           
  1666 ;; *************** function _save_time *****************
  1667 ;; Defined at:
  1668 ;;		line 13 in file "clock.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  i               2   14[COMRAM] int 
  1673 ;;  i               2   16[COMRAM] int 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1683 ;;      Params:         0       0       0       0       0       0       0
  1684 ;;      Locals:         4       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0
  1686 ;;      Totals:         4       0       0       0       0       0       0
  1687 ;;Total ram usage:        4 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    1
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text1
  1698  0012EA                     __ptext1:
  1699                           	opt stack 0
  1700  0012EA                     _save_time:
  1701                           	opt stack 29
  1702                           
  1703                           ;clock.c: 16: for (int i = 0; i < 9; ++i)
  1704                           
  1705                           ;incstack = 0
  1706  0012EA  0E00               	movlw	0
  1707  0012EC  6E12               	movwf	save_time@i+1,c
  1708  0012EE  0E00               	movlw	0
  1709  0012F0  6E11               	movwf	save_time@i,c
  1710  0012F2                     l3725:
  1711  0012F2  BE12               	btfsc	save_time@i+1,7,c
  1712  0012F4  D006               	goto	l3729
  1713  0012F6  5012               	movf	save_time@i+1,w,c
  1714  0012F8  E115               	bnz	l3735
  1715  0012FA  0E09               	movlw	9
  1716  0012FC  5C11               	subwf	save_time@i,w,c
  1717  0012FE  B0D8               	btfsc	status,0,c
  1718  001300  D011               	goto	l3735
  1719  001302                     l3729:
  1720                           
  1721                           ;clock.c: 17: {
  1722                           ;clock.c: 18: save_array[i] = time[i];
  1723  001302  0E98               	movlw	low _time
  1724  001304  2411               	addwf	save_time@i,w,c
  1725  001306  6ED9               	movwf	fsr2l,c
  1726  001308  0E00               	movlw	high _time
  1727  00130A  2012               	addwfc	save_time@i+1,w,c
  1728  00130C  6EDA               	movwf	fsr2h,c
  1729  00130E  0E7C               	movlw	low _save_array
  1730  001310  2411               	addwf	save_time@i,w,c
  1731  001312  6EE1               	movwf	fsr1l,c
  1732  001314  0E00               	movlw	high _save_array
  1733  001316  2012               	addwfc	save_time@i+1,w,c
  1734  001318  6EE2               	movwf	fsr1h,c
  1735  00131A  CFDF FFE7          	movff	indf2,indf1
  1736  00131E  4A11               	infsnz	save_time@i,f,c
  1737  001320  2A12               	incf	save_time@i+1,f,c
  1738  001322  D7E7               	goto	l3725
  1739  001324                     l3735:
  1740                           
  1741                           ;clock.c: 19: }
  1742                           ;clock.c: 20: for (int i = 9; i < 17; ++i)
  1743  001324  0E00               	movlw	0
  1744  001326  6E10               	movwf	save_time@i_231+1,c
  1745  001328  0E09               	movlw	9
  1746  00132A  6E0F               	movwf	save_time@i_231,c
  1747  00132C                     l3737:
  1748  00132C  BE10               	btfsc	save_time@i_231+1,7,c
  1749  00132E  D006               	goto	l3741
  1750  001330  5010               	movf	save_time@i_231+1,w,c
  1751  001332  E10F               	bnz	l273
  1752  001334  0E11               	movlw	17
  1753  001336  5C0F               	subwf	save_time@i_231,w,c
  1754  001338  B0D8               	btfsc	status,0,c
  1755  00133A  0012               	return	
  1756  00133C                     l3741:
  1757                           
  1758                           ;clock.c: 21: {
  1759                           ;clock.c: 22: save_array[i] = 32;
  1760  00133C  0E7C               	movlw	low _save_array
  1761  00133E  240F               	addwf	save_time@i_231,w,c
  1762  001340  6ED9               	movwf	fsr2l,c
  1763  001342  0E00               	movlw	high _save_array
  1764  001344  2010               	addwfc	save_time@i_231+1,w,c
  1765  001346  6EDA               	movwf	fsr2h,c
  1766  001348  0E20               	movlw	32
  1767  00134A  6EDF               	movwf	indf2,c
  1768  00134C  4A0F               	infsnz	save_time@i_231,f,c
  1769  00134E  2A10               	incf	save_time@i_231+1,f,c
  1770  001350  D7ED               	goto	l3737
  1771  001352                     l273:
  1772  001352  0012               	return		;funcret
  1773  001354                     __end_of_save_time:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           indf1	equ	0xFE7
  1782                           postdec1	equ	0xFE5
  1783                           fsr1h	equ	0xFE2
  1784                           fsr1l	equ	0xFE1
  1785                           indf2	equ	0xFDF
  1786                           fsr2h	equ	0xFDA
  1787                           fsr2l	equ	0xFD9
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _save_speed *****************
  1791 ;; Defined at:
  1792 ;;		line 7 in file "adc.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  adc_reg_val     2   21[COMRAM] unsigned short 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  buff            5   23[COMRAM] unsigned char [5]
  1797 ;;  i               1   28[COMRAM] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1807 ;;      Params:         2       0       0       0       0       0       0
  1808 ;;      Locals:         6       0       0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0
  1810 ;;      Totals:         8       0       0       0       0       0       0
  1811 ;;Total ram usage:        8 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    2
  1814 ;; This function calls:
  1815 ;;		___lwdiv
  1816 ;;		___lwmod
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text2
  1823  001422                     __ptext2:
  1824                           	opt stack 0
  1825  001422                     _save_speed:
  1826                           	opt stack 28
  1827                           
  1828                           ;adc.c: 9: char buff[5];
  1829                           ;adc.c: 10: unsigned char i;
  1830                           ;adc.c: 12: i = 3;
  1831                           
  1832                           ;incstack = 0
  1833  001422  0E03               	movlw	3
  1834  001424  6E1D               	movwf	save_speed@i,c
  1835  001426                     l3797:
  1836                           
  1837                           ;adc.c: 14: {
  1838                           ;adc.c: 15: buff[i] = (adc_reg_val % 10) + '0';
  1839  001426  501D               	movf	save_speed@i,w,c
  1840  001428  0D01               	mullw	1
  1841  00142A  0E18               	movlw	low save_speed@buff
  1842  00142C  24F3               	addwf	prodl,w,c
  1843  00142E  6ED9               	movwf	fsr2l,c
  1844  001430  0E00               	movlw	high save_speed@buff
  1845  001432  20F4               	addwfc	prodh,w,c
  1846  001434  6EDA               	movwf	fsr2h,c
  1847  001436  C016  F00F         	movff	save_speed@adc_reg_val,___lwmod@dividend
  1848  00143A  C017  F010         	movff	save_speed@adc_reg_val+1,___lwmod@dividend+1
  1849  00143E  0E00               	movlw	0
  1850  001440  6E12               	movwf	___lwmod@divisor+1,c
  1851  001442  0E0A               	movlw	10
  1852  001444  6E11               	movwf	___lwmod@divisor,c
  1853  001446  EC66  F00B         	call	___lwmod	;wreg free
  1854  00144A  500F               	movf	?___lwmod,w,c
  1855  00144C  0F30               	addlw	48
  1856  00144E  6EDF               	movwf	indf2,c
  1857                           
  1858                           ;adc.c: 16: adc_reg_val = adc_reg_val / 10;
  1859  001450  C016  F00F         	movff	save_speed@adc_reg_val,___lwdiv@dividend
  1860  001454  C017  F010         	movff	save_speed@adc_reg_val+1,___lwdiv@dividend+1
  1861  001458  0E00               	movlw	0
  1862  00145A  6E12               	movwf	___lwdiv@divisor+1,c
  1863  00145C  0E0A               	movlw	10
  1864  00145E  6E11               	movwf	___lwdiv@divisor,c
  1865  001460  ECCB  F00A         	call	___lwdiv	;wreg free
  1866  001464  C00F  F016         	movff	?___lwdiv,save_speed@adc_reg_val
  1867  001468  C010  F017         	movff	?___lwdiv+1,save_speed@adc_reg_val+1
  1868                           
  1869                           ;adc.c: 17: } while (i--);
  1870  00146C  061D               	decf	save_speed@i,f,c
  1871  00146E  281D               	incf	save_speed@i,w,c
  1872  001470  A4D8               	btfss	status,2,c
  1873  001472  D7D9               	goto	l3797
  1874                           
  1875                           ;adc.c: 18: buff[4] = '\0';
  1876  001474  0E00               	movlw	0
  1877  001476  6E1C               	movwf	save_speed@buff+4,c
  1878                           
  1879                           ;adc.c: 21: save_array[13] = buff[0];
  1880  001478  C018  F089         	movff	save_speed@buff,_save_array+13
  1881                           
  1882                           ;adc.c: 22: save_array[14] = buff[1];
  1883  00147C  C019  F08A         	movff	save_speed@buff+1,_save_array+14
  1884                           
  1885                           ;adc.c: 23: save_array[15] = buff[2];
  1886  001480  C01A  F08B         	movff	save_speed@buff+2,_save_array+15
  1887  001484  0012               	return		;funcret
  1888  001486                     __end_of_save_speed:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           indf1	equ	0xFE7
  1899                           postdec1	equ	0xFE5
  1900                           fsr1h	equ	0xFE2
  1901                           fsr1l	equ	0xFE1
  1902                           indf2	equ	0xFDF
  1903                           fsr2h	equ	0xFDA
  1904                           fsr2l	equ	0xFD9
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function _save_events *****************
  1908 ;; Defined at:
  1909 ;;		line 9 in file "save_event.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  i               2   16[COMRAM] int 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1923 ;;      Params:         0       0       0       0       0       0       0
  1924 ;;      Locals:         2       0       0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0
  1926 ;;      Totals:         2       0       0       0       0       0       0
  1927 ;;Total ram usage:        2 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    2
  1930 ;; This function calls:
  1931 ;;		_write_internal_eeprom
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text3
  1938  00163A                     __ptext3:
  1939                           	opt stack 0
  1940  00163A                     _save_events:
  1941                           	opt stack 28
  1942                           
  1943                           ;save_event.c: 12: for (int i = 0; i < 16; ++i)
  1944                           
  1945                           ;incstack = 0
  1946  00163A  0E00               	movlw	0
  1947  00163C  6E12               	movwf	save_events@i+1,c
  1948  00163E  0E00               	movlw	0
  1949  001640  6E11               	movwf	save_events@i,c
  1950  001642                     l5081:
  1951  001642  BE12               	btfsc	save_events@i+1,7,c
  1952  001644  D006               	goto	l5085
  1953  001646  5012               	movf	save_events@i+1,w,c
  1954  001648  E114               	bnz	l5093
  1955  00164A  0E10               	movlw	16
  1956  00164C  5C11               	subwf	save_events@i,w,c
  1957  00164E  B0D8               	btfsc	status,0,c
  1958  001650  D010               	goto	l5093
  1959  001652                     l5085:
  1960                           
  1961                           ;save_event.c: 13: {
  1962                           ;save_event.c: 14: write_internal_eeprom(e_address, save_array[i]);
  1963  001652  0E7C               	movlw	low _save_array
  1964  001654  2411               	addwf	save_events@i,w,c
  1965  001656  6ED9               	movwf	fsr2l,c
  1966  001658  0E00               	movlw	high _save_array
  1967  00165A  2012               	addwfc	save_events@i+1,w,c
  1968  00165C  6EDA               	movwf	fsr2h,c
  1969  00165E  50DF               	movf	indf2,w,c
  1970  001660  6E0F               	movwf	write_internal_eeprom@data,c
  1971  001662  503C               	movf	_e_address,w,c
  1972  001664  EC34  F00C         	call	_write_internal_eeprom
  1973                           
  1974                           ;save_event.c: 15: e_address++;
  1975  001668  4A3C               	infsnz	_e_address,f,c
  1976  00166A  2A3D               	incf	_e_address+1,f,c
  1977  00166C  4A11               	infsnz	save_events@i,f,c
  1978  00166E  2A12               	incf	save_events@i+1,f,c
  1979  001670  D7E8               	goto	l5081
  1980  001672                     l5093:
  1981                           
  1982                           ;save_event.c: 17: }
  1983                           ;save_event.c: 19: if (e_address == 0xA5)
  1984  001672  0EA5               	movlw	165
  1985  001674  183C               	xorwf	_e_address,w,c
  1986  001676  103D               	iorwf	_e_address+1,w,c
  1987  001678  A4D8               	btfss	status,2,c
  1988  00167A  0012               	return	
  1989                           
  1990                           ;save_event.c: 20: {
  1991                           ;save_event.c: 21: e_address = 0x05;
  1992  00167C  0E00               	movlw	0
  1993  00167E  6E3D               	movwf	_e_address+1,c
  1994  001680  0E05               	movlw	5
  1995  001682  6E3C               	movwf	_e_address,c
  1996  001684  0012               	return	
  1997  001686                     __end_of_save_events:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           prodh	equ	0xFF4
  2004                           prodl	equ	0xFF3
  2005                           postinc0	equ	0xFEE
  2006                           wreg	equ	0xFE8
  2007                           indf1	equ	0xFE7
  2008                           postdec1	equ	0xFE5
  2009                           fsr1h	equ	0xFE2
  2010                           fsr1l	equ	0xFE1
  2011                           indf2	equ	0xFDF
  2012                           fsr2h	equ	0xFDA
  2013                           fsr2l	equ	0xFD9
  2014                           status	equ	0xFD8
  2015                           
  2016 ;; *************** function _read_adc *****************
  2017 ;; Defined at:
  2018 ;;		line 68 in file "adc.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  channel         1    wreg     unsigned char 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  channel         1    0[COMRAM] unsigned char 
  2023 ;;  reg_val         2   18[COMRAM] unsigned short 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  2   14[COMRAM] unsigned short 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2033 ;;      Params:         2       0       0       0       0       0       0
  2034 ;;      Locals:         2       0       0       0       0       0       0
  2035 ;;      Temps:          2       0       0       0       0       0       0
  2036 ;;      Totals:         6       0       0       0       0       0       0
  2037 ;;Total ram usage:        6 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    1
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text4
  2048  001842                     __ptext4:
  2049                           	opt stack 0
  2050  001842                     _read_adc:
  2051                           	opt stack 29
  2052                           
  2053                           ;adc.c: 70: unsigned short reg_val;
  2054                           ;adc.c: 73: GO = 1;
  2055                           
  2056                           ;incstack = 0
  2057  001842  82C2               	bsf	4034,1,c	;volatile
  2058  001844                     l732:
  2059  001844  B2C2               	btfsc	4034,1,c	;volatile
  2060  001846  D7FE               	goto	l732
  2061                           
  2062                           ;adc.c: 75: reg_val = (ADRESH << 8) | ADRESL;
  2063  001848  50C3               	movf	4035,w,c	;volatile
  2064  00184A  CFC4 F011          	movff	4036,??_read_adc	;volatile
  2065  00184E  6A12               	clrf	(??_read_adc+1)& (0+255),c
  2066  001850  C011  F012         	movff	??_read_adc,??_read_adc+1
  2067  001854  6A11               	clrf	??_read_adc,c
  2068  001856  1011               	iorwf	??_read_adc,w,c
  2069  001858  6E13               	movwf	read_adc@reg_val,c
  2070  00185A  5012               	movf	??_read_adc+1,w,c
  2071  00185C  6E14               	movwf	read_adc@reg_val+1,c
  2072                           
  2073                           ;adc.c: 77: return reg_val;
  2074  00185E  C013  F00F         	movff	read_adc@reg_val,?_read_adc
  2075  001862  C014  F010         	movff	read_adc@reg_val+1,?_read_adc+1
  2076  001866  0012               	return	
  2077  001868                     __end_of_read_adc:
  2078                           	opt stack 0
  2079                           tblptru	equ	0xFF8
  2080                           tblptrh	equ	0xFF7
  2081                           tblptrl	equ	0xFF6
  2082                           tablat	equ	0xFF5
  2083                           prodh	equ	0xFF4
  2084                           prodl	equ	0xFF3
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           indf1	equ	0xFE7
  2088                           postdec1	equ	0xFE5
  2089                           fsr1h	equ	0xFE2
  2090                           fsr1l	equ	0xFE1
  2091                           indf2	equ	0xFDF
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _password_compare *****************
  2097 ;; Defined at:
  2098 ;;		line 7 in file "password_compare.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  password        5   31[COMRAM] unsigned char [5]
  2103 ;;  enter_pass      5   22[COMRAM] unsigned char [5]
  2104 ;;  pos             2   45[COMRAM] short 
  2105 ;;  j               2   42[COMRAM] unsigned int 
  2106 ;;  count           2   40[COMRAM] short 
  2107 ;;  flag            2   38[COMRAM] short 
  2108 ;;  flag1           2   29[COMRAM] short 
  2109 ;;  i               2   27[COMRAM] unsigned int 
  2110 ;;  key             1   44[COMRAM] unsigned char 
  2111 ;;  address         1   37[COMRAM] unsigned char 
  2112 ;;  ch              1   36[COMRAM] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  2   20[COMRAM] int 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2122 ;;      Params:         2       0       0       0       0       0       0
  2123 ;;      Locals:        25       0       0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0
  2125 ;;      Totals:        27       0       0       0       0       0       0
  2126 ;;Total ram usage:       27 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    3
  2129 ;; This function calls:
  2130 ;;		_clcd_print
  2131 ;;		_clcd_putch
  2132 ;;		_clcd_write
  2133 ;;		_read_internal_eeprom
  2134 ;;		_read_switches
  2135 ;;		_strcmp
  2136 ;; This function is called by:
  2137 ;;		_main
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text5
  2142  00060E                     __ptext5:
  2143                           	opt stack 0
  2144  00060E                     _password_compare:
  2145                           	opt stack 27
  2146                           
  2147                           ;password_compare.c: 11: unsigned char key, address = 0xC0;
  2148                           
  2149                           ;incstack = 0
  2150  00060E  0EC0               	movlw	192
  2151  000610  6E26               	movwf	password_compare@address,c
  2152                           
  2153                           ;password_compare.c: 12: char ch;
  2154                           ;password_compare.c: 13: unsigned int j, i;
  2155                           ;password_compare.c: 14: int short count = 0, pos = 0, flag = 0, flag1 = 0;
  2156  000612  0E00               	movlw	0
  2157  000614  6E2A               	movwf	password_compare@count+1,c
  2158  000616  0E00               	movlw	0
  2159  000618  6E29               	movwf	password_compare@count,c
  2160  00061A  0E00               	movlw	0
  2161  00061C  6E2F               	movwf	password_compare@pos+1,c
  2162  00061E  0E00               	movlw	0
  2163  000620  6E2E               	movwf	password_compare@pos,c
  2164  000622  0E00               	movlw	0
  2165  000624  6E28               	movwf	password_compare@flag+1,c
  2166  000626  0E00               	movlw	0
  2167  000628  6E27               	movwf	password_compare@flag,c
  2168  00062A  0E00               	movlw	0
  2169  00062C  6E1F               	movwf	password_compare@flag1+1,c
  2170  00062E  0E00               	movlw	0
  2171  000630  6E1E               	movwf	password_compare@flag1,c
  2172                           
  2173                           ;password_compare.c: 16: unsigned char password[5]= {'\0'}, enter_pass[5] = {'\0'};
  2174  000632  EE20  F06A         	lfsr	2,password_compare@F16068
  2175  000636  EE10  F020         	lfsr	1,password_compare@password
  2176  00063A  0E04               	movlw	4
  2177  00063C                     u4281:
  2178  00063C  CFDB FFE3          	movff	plusw2,plusw1
  2179  000640  06E8               	decf	wreg,f,c
  2180  000642  E2FC               	bc	u4281
  2181  000644  EE20  F06F         	lfsr	2,password_compare@F16070
  2182  000648  EE10  F017         	lfsr	1,password_compare@enter_pass
  2183  00064C  0E04               	movlw	4
  2184  00064E                     u4291:
  2185  00064E  CFDB FFE3          	movff	plusw2,plusw1
  2186  000652  06E8               	decf	wreg,f,c
  2187  000654  E2FC               	bc	u4291
  2188                           
  2189                           ;password_compare.c: 19: password[0] = read_internal_eeprom(0x01);
  2190  000656  0E01               	movlw	1
  2191  000658  EC9D  F00C         	call	_read_internal_eeprom
  2192  00065C  6E20               	movwf	password_compare@password,c
  2193                           
  2194                           ;password_compare.c: 20: password[1] = read_internal_eeprom(0x02);
  2195  00065E  0E02               	movlw	2
  2196  000660  EC9D  F00C         	call	_read_internal_eeprom
  2197  000664  6E21               	movwf	password_compare@password+1,c
  2198                           
  2199                           ;password_compare.c: 21: password[2] = read_internal_eeprom(0x03);
  2200  000666  0E03               	movlw	3
  2201  000668  EC9D  F00C         	call	_read_internal_eeprom
  2202  00066C  6E22               	movwf	password_compare@password+2,c
  2203                           
  2204                           ;password_compare.c: 22: password[3] = read_internal_eeprom(0x04);
  2205  00066E  0E04               	movlw	4
  2206  000670  EC9D  F00C         	call	_read_internal_eeprom
  2207  000674  6E23               	movwf	password_compare@password+3,c
  2208                           
  2209                           ;password_compare.c: 24: clcd_write(0x01, 0);
  2210  000676  0E00               	movlw	0
  2211  000678  6E0F               	movwf	clcd_write@control_bit,c
  2212  00067A  0E01               	movlw	1
  2213  00067C  EC0D  F00C         	call	_clcd_write
  2214  000680                     l4863:
  2215                           
  2216                           ;password_compare.c: 27: {
  2217                           ;password_compare.c: 28: key = read_switches(1);
  2218  000680  0E01               	movlw	1
  2219  000682  EC87  F00B         	call	_read_switches
  2220  000686  6E2D               	movwf	password_compare@key,c
  2221                           
  2222                           ;password_compare.c: 30: clcd_print("Enter Password   ", (0x80 + (0)));
  2223  000688  0EFF               	movlw	low STR_25
  2224  00068A  6E11               	movwf	clcd_print@data,c
  2225  00068C  0E2E               	movlw	high STR_25
  2226  00068E  6E12               	movwf	clcd_print@data+1,c
  2227  000690  0E80               	movlw	128
  2228  000692  6E13               	movwf	clcd_print@addr,c
  2229  000694  EC43  F00A         	call	_clcd_print	;wreg free
  2230                           
  2231                           ;password_compare.c: 34: clcd_write(address, 0);
  2232  000698  0E00               	movlw	0
  2233  00069A  6E0F               	movwf	clcd_write@control_bit,c
  2234  00069C  5026               	movf	password_compare@address,w,c
  2235  00069E  EC0D  F00C         	call	_clcd_write
  2236                           
  2237                           ;password_compare.c: 35: clcd_write(0x0E, 0);
  2238  0006A2  0E00               	movlw	0
  2239  0006A4  6E0F               	movwf	clcd_write@control_bit,c
  2240  0006A6  0E0E               	movlw	14
  2241  0006A8  EC0D  F00C         	call	_clcd_write
  2242                           
  2243                           ;password_compare.c: 37: if ((key == 1 || key == 2))
  2244  0006AC  042D               	decf	password_compare@key,w,c
  2245  0006AE  B4D8               	btfsc	status,2,c
  2246  0006B0  D004               	goto	l4875
  2247  0006B2  0E02               	movlw	2
  2248  0006B4  182D               	xorwf	password_compare@key,w,c
  2249  0006B6  A4D8               	btfss	status,2,c
  2250  0006B8  D0C6               	goto	l4947
  2251  0006BA                     l4875:
  2252                           
  2253                           ;password_compare.c: 38: {
  2254                           ;password_compare.c: 39: if (key == 1)
  2255  0006BA  042D               	decf	password_compare@key,w,c
  2256  0006BC  A4D8               	btfss	status,2,c
  2257  0006BE  D008               	goto	l4879
  2258                           
  2259                           ;password_compare.c: 40: {
  2260                           ;password_compare.c: 41: enter_pass[pos] = '1';
  2261  0006C0  0E17               	movlw	low password_compare@enter_pass
  2262  0006C2  242E               	addwf	password_compare@pos,w,c
  2263  0006C4  6ED9               	movwf	fsr2l,c
  2264  0006C6  0E00               	movlw	high password_compare@enter_pass
  2265  0006C8  202F               	addwfc	password_compare@pos+1,w,c
  2266  0006CA  6EDA               	movwf	fsr2h,c
  2267  0006CC  0E31               	movlw	49
  2268  0006CE  D00B               	goto	L2
  2269  0006D0                     l4879:
  2270                           
  2271                           ;password_compare.c: 43: else if (key == 2)
  2272  0006D0  0E02               	movlw	2
  2273  0006D2  182D               	xorwf	password_compare@key,w,c
  2274  0006D4  A4D8               	btfss	status,2,c
  2275  0006D6  D008               	goto	l4883
  2276                           
  2277                           ;password_compare.c: 44: {
  2278                           ;password_compare.c: 45: enter_pass[pos] = '0';
  2279  0006D8  0E17               	movlw	low password_compare@enter_pass
  2280  0006DA  242E               	addwf	password_compare@pos,w,c
  2281  0006DC  6ED9               	movwf	fsr2l,c
  2282  0006DE  0E00               	movlw	high password_compare@enter_pass
  2283  0006E0  202F               	addwfc	password_compare@pos+1,w,c
  2284  0006E2  6EDA               	movwf	fsr2h,c
  2285  0006E4  0E30               	movlw	48
  2286  0006E6                     L2:
  2287  0006E6  6EDF               	movwf	indf2,c
  2288  0006E8                     l4883:
  2289                           
  2290                           ;password_compare.c: 46: }
  2291                           ;password_compare.c: 47: clcd_putch('*', (0xC0 + (pos)));
  2292  0006E8  502E               	movf	password_compare@pos,w,c
  2293  0006EA  0FC0               	addlw	192
  2294  0006EC  6E11               	movwf	clcd_putch@addr,c
  2295  0006EE  0E2A               	movlw	42
  2296  0006F0  EC74  F00C         	call	_clcd_putch
  2297                           
  2298                           ;password_compare.c: 48: count++;
  2299  0006F4  4A29               	infsnz	password_compare@count,f,c
  2300  0006F6  2A2A               	incf	password_compare@count+1,f,c
  2301                           
  2302                           ;password_compare.c: 49: pos++;
  2303  0006F8  4A2E               	infsnz	password_compare@pos,f,c
  2304  0006FA  2A2F               	incf	password_compare@pos+1,f,c
  2305                           
  2306                           ;password_compare.c: 50: address = (0xC0 + (pos));
  2307  0006FC  502E               	movf	password_compare@pos,w,c
  2308  0006FE  0FC0               	addlw	192
  2309  000700  6E26               	movwf	password_compare@address,c
  2310                           
  2311                           ;password_compare.c: 54: if (count == 4 && (strcmp(password, enter_pass) == 0))
  2312  000702  0E04               	movlw	4
  2313  000704  1829               	xorwf	password_compare@count,w,c
  2314  000706  102A               	iorwf	password_compare@count+1,w,c
  2315  000708  A4D8               	btfss	status,2,c
  2316  00070A  D013               	goto	l4899
  2317  00070C  0E20               	movlw	low password_compare@password
  2318  00070E  6E0F               	movwf	strcmp@s1,c
  2319  000710  0E00               	movlw	high password_compare@password
  2320  000712  6E10               	movwf	strcmp@s1+1,c
  2321  000714  0E17               	movlw	low password_compare@enter_pass
  2322  000716  6E11               	movwf	strcmp@s2,c
  2323  000718  0E00               	movlw	high password_compare@enter_pass
  2324  00071A  6E12               	movwf	strcmp@s2+1,c
  2325  00071C  EC43  F00B         	call	_strcmp	;wreg free
  2326  000720  500F               	movf	?_strcmp,w,c
  2327  000722  1010               	iorwf	?_strcmp+1,w,c
  2328  000724  A4D8               	btfss	status,2,c
  2329  000726  D005               	goto	l4899
  2330                           
  2331                           ;password_compare.c: 55: {
  2332                           ;password_compare.c: 58: return 1;
  2333  000728  0E00               	movlw	0
  2334  00072A  6E16               	movwf	?_password_compare+1,c
  2335  00072C  0E01               	movlw	1
  2336  00072E  6E15               	movwf	?_password_compare,c
  2337  000730  0012               	return	
  2338  000732                     l4899:
  2339                           
  2340                           ;password_compare.c: 59: }
  2341                           ;password_compare.c: 60: if (count == 4 && (strcmp(password, enter_pass) != 0))
  2342  000732  0E04               	movlw	4
  2343  000734  1829               	xorwf	password_compare@count,w,c
  2344  000736  102A               	iorwf	password_compare@count+1,w,c
  2345  000738  A4D8               	btfss	status,2,c
  2346  00073A  D085               	goto	l4947
  2347  00073C  0E20               	movlw	low password_compare@password
  2348  00073E  6E0F               	movwf	strcmp@s1,c
  2349  000740  0E00               	movlw	high password_compare@password
  2350  000742  6E10               	movwf	strcmp@s1+1,c
  2351  000744  0E17               	movlw	low password_compare@enter_pass
  2352  000746  6E11               	movwf	strcmp@s2,c
  2353  000748  0E00               	movlw	high password_compare@enter_pass
  2354  00074A  6E12               	movwf	strcmp@s2+1,c
  2355  00074C  EC43  F00B         	call	_strcmp	;wreg free
  2356  000750  500F               	movf	?_strcmp,w,c
  2357  000752  1010               	iorwf	?_strcmp+1,w,c
  2358  000754  B4D8               	btfsc	status,2,c
  2359  000756  D077               	goto	l4947
  2360                           
  2361                           ;password_compare.c: 61: {
  2362                           ;password_compare.c: 62: clcd_print("Password Not Match", (0x80 + (0)));
  2363  000758  0EEC               	movlw	low STR_26
  2364  00075A  6E11               	movwf	clcd_print@data,c
  2365  00075C  0E2E               	movlw	high STR_26
  2366  00075E  6E12               	movwf	clcd_print@data+1,c
  2367  000760  0E80               	movlw	128
  2368  000762  6E13               	movwf	clcd_print@addr,c
  2369  000764  EC43  F00A         	call	_clcd_print	;wreg free
  2370                           
  2371                           ;password_compare.c: 63: pos = 0;
  2372  000768  0E00               	movlw	0
  2373  00076A  6E2F               	movwf	password_compare@pos+1,c
  2374  00076C  0E00               	movlw	0
  2375  00076E  6E2E               	movwf	password_compare@pos,c
  2376                           
  2377                           ;password_compare.c: 64: count = 0;
  2378  000770  0E00               	movlw	0
  2379  000772  6E2A               	movwf	password_compare@count+1,c
  2380  000774  0E00               	movlw	0
  2381  000776  6E29               	movwf	password_compare@count,c
  2382                           
  2383                           ;password_compare.c: 66: if(flag1 != 1)
  2384  000778  041E               	decf	password_compare@flag1,w,c
  2385  00077A  101F               	iorwf	password_compare@flag1+1,w,c
  2386  00077C  B4D8               	btfsc	status,2,c
  2387  00077E  D00B               	goto	l4917
  2388                           
  2389                           ;password_compare.c: 67: {
  2390                           ;password_compare.c: 68: flag++;
  2391  000780  4A27               	infsnz	password_compare@flag,f,c
  2392  000782  2A28               	incf	password_compare@flag+1,f,c
  2393                           
  2394                           ;password_compare.c: 69: ch = 53 - flag;
  2395  000784  5027               	movf	password_compare@flag,w,c
  2396  000786  0800               	sublw	0
  2397  000788  0F35               	addlw	53
  2398  00078A  6E25               	movwf	password_compare@ch,c
  2399                           
  2400                           ;password_compare.c: 70: clcd_putch(ch, (0xC0 + (0)));
  2401  00078C  0EC0               	movlw	192
  2402  00078E  6E11               	movwf	clcd_putch@addr,c
  2403  000790  5025               	movf	password_compare@ch,w,c
  2404  000792  EC74  F00C         	call	_clcd_putch
  2405  000796                     l4917:
  2406                           
  2407                           ;password_compare.c: 71: }
  2408                           ;password_compare.c: 72: clcd_print(" Tries left...!", (0xC0 + (1)));
  2409  000796  0E35               	movlw	low STR_27
  2410  000798  6E11               	movwf	clcd_print@data,c
  2411  00079A  0E2F               	movlw	high STR_27
  2412  00079C  6E12               	movwf	clcd_print@data+1,c
  2413  00079E  0EC1               	movlw	193
  2414  0007A0  6E13               	movwf	clcd_print@addr,c
  2415  0007A2  EC43  F00A         	call	_clcd_print	;wreg free
  2416                           
  2417                           ;password_compare.c: 76: for (i = 10; i--; )
  2418  0007A6  0E00               	movlw	0
  2419  0007A8  6E1D               	movwf	password_compare@i+1,c
  2420  0007AA  0E0A               	movlw	10
  2421  0007AC  6E1C               	movwf	password_compare@i,c
  2422  0007AE  D018               	goto	l4929
  2423  0007B0                     l4921:
  2424                           
  2425                           ;password_compare.c: 77: {
  2426                           ;password_compare.c: 78: for (j = 50000; j--; );
  2427  0007B0  0EC3               	movlw	195
  2428  0007B2  6E2C               	movwf	password_compare@j+1,c
  2429  0007B4  0E50               	movlw	80
  2430  0007B6  6E2B               	movwf	password_compare@j,c
  2431  0007B8                     l4923:
  2432  0007B8  062B               	decf	password_compare@j,f,c
  2433  0007BA  A0D8               	btfss	status,0,c
  2434  0007BC  062C               	decf	password_compare@j+1,f,c
  2435  0007BE  282B               	incf	password_compare@j,w,c
  2436  0007C0  E1FB               	bnz	l4923
  2437  0007C2  282C               	incf	password_compare@j+1,w,c
  2438  0007C4  A4D8               	btfss	status,2,c
  2439  0007C6  D7F8               	goto	l4923
  2440                           
  2441                           ;password_compare.c: 79: for (j = 20000; j--; );
  2442  0007C8  0E4E               	movlw	78
  2443  0007CA  6E2C               	movwf	password_compare@j+1,c
  2444  0007CC  0E20               	movlw	32
  2445  0007CE  6E2B               	movwf	password_compare@j,c
  2446  0007D0                     l4927:
  2447  0007D0  062B               	decf	password_compare@j,f,c
  2448  0007D2  A0D8               	btfss	status,0,c
  2449  0007D4  062C               	decf	password_compare@j+1,f,c
  2450  0007D6  282B               	incf	password_compare@j,w,c
  2451  0007D8  E1FB               	bnz	l4927
  2452  0007DA  282C               	incf	password_compare@j+1,w,c
  2453  0007DC  A4D8               	btfss	status,2,c
  2454  0007DE  D7F8               	goto	l4927
  2455  0007E0                     l4929:
  2456  0007E0  061C               	decf	password_compare@i,f,c
  2457  0007E2  A0D8               	btfss	status,0,c
  2458  0007E4  061D               	decf	password_compare@i+1,f,c
  2459  0007E6  281C               	incf	password_compare@i,w,c
  2460  0007E8  E1E3               	bnz	l4921
  2461  0007EA  281D               	incf	password_compare@i+1,w,c
  2462  0007EC  A4D8               	btfss	status,2,c
  2463  0007EE  D7E0               	goto	l4921
  2464                           
  2465                           ;password_compare.c: 80: }
  2466                           ;password_compare.c: 82: address = 0xC0;
  2467  0007F0  0EC0               	movlw	192
  2468  0007F2  6E26               	movwf	password_compare@address,c
  2469                           
  2470                           ;password_compare.c: 83: clcd_write(0x01, 0);
  2471  0007F4  0E00               	movlw	0
  2472  0007F6  6E0F               	movwf	clcd_write@control_bit,c
  2473  0007F8  0E01               	movlw	1
  2474  0007FA  EC0D  F00C         	call	_clcd_write
  2475                           
  2476                           ;password_compare.c: 86: if (flag == 5)
  2477  0007FE  0E05               	movlw	5
  2478  000800  1827               	xorwf	password_compare@flag,w,c
  2479  000802  1028               	iorwf	password_compare@flag+1,w,c
  2480  000804  A4D8               	btfss	status,2,c
  2481  000806  D01F               	goto	l4947
  2482                           
  2483                           ;password_compare.c: 87: {
  2484                           ;password_compare.c: 88: clcd_write(0x01, 0);
  2485  000808  0E00               	movlw	0
  2486  00080A  6E0F               	movwf	clcd_write@control_bit,c
  2487  00080C  0E01               	movlw	1
  2488  00080E  EC0D  F00C         	call	_clcd_write
  2489                           
  2490                           ;password_compare.c: 89: clcd_write(0x0C, 0);
  2491  000812  0E00               	movlw	0
  2492  000814  6E0F               	movwf	clcd_write@control_bit,c
  2493  000816  0E0C               	movlw	12
  2494  000818  EC0D  F00C         	call	_clcd_write
  2495                           
  2496                           ;password_compare.c: 90: clcd_print("Password Not Match", (0x80 + (0)));
  2497  00081C  0EEC               	movlw	low STR_26
  2498  00081E  6E11               	movwf	clcd_print@data,c
  2499  000820  0E2E               	movlw	high STR_26
  2500  000822  6E12               	movwf	clcd_print@data+1,c
  2501  000824  0E80               	movlw	128
  2502  000826  6E13               	movwf	clcd_print@addr,c
  2503  000828  EC43  F00A         	call	_clcd_print	;wreg free
  2504                           
  2505                           ;password_compare.c: 91: clcd_print("Wait 15 minutes", (0xC0 + (0)));
  2506  00082C  0E45               	movlw	low STR_29
  2507  00082E  6E11               	movwf	clcd_print@data,c
  2508  000830  0E2F               	movlw	high STR_29
  2509  000832  6E12               	movwf	clcd_print@data+1,c
  2510  000834  0EC0               	movlw	192
  2511  000836  6E13               	movwf	clcd_print@addr,c
  2512  000838  EC43  F00A         	call	_clcd_print	;wreg free
  2513                           
  2514                           ;password_compare.c: 92: return 0;
  2515  00083C  0E00               	movlw	0
  2516  00083E  6E16               	movwf	?_password_compare+1,c
  2517  000840  0E00               	movlw	0
  2518  000842  6E15               	movwf	?_password_compare,c
  2519  000844  0012               	return	
  2520  000846                     l4947:
  2521                           
  2522                           ;password_compare.c: 93: }
  2523                           ;password_compare.c: 94: }
  2524                           ;password_compare.c: 96: }
  2525                           ;password_compare.c: 99: for (j = 10000; j--; );
  2526  000846  0E27               	movlw	39
  2527  000848  6E2C               	movwf	password_compare@j+1,c
  2528  00084A  0E10               	movlw	16
  2529  00084C  6E2B               	movwf	password_compare@j,c
  2530  00084E                     l4949:
  2531  00084E  062B               	decf	password_compare@j,f,c
  2532  000850  A0D8               	btfss	status,0,c
  2533  000852  062C               	decf	password_compare@j+1,f,c
  2534  000854  282B               	incf	password_compare@j,w,c
  2535  000856  E1FB               	bnz	l4949
  2536  000858  282C               	incf	password_compare@j+1,w,c
  2537  00085A  B4D8               	btfsc	status,2,c
  2538  00085C  D711               	goto	l4863
  2539  00085E  D7F7               	goto	l4949
  2540  000860                     __end_of_password_compare:
  2541                           	opt stack 0
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           prodh	equ	0xFF4
  2547                           prodl	equ	0xFF3
  2548                           postinc0	equ	0xFEE
  2549                           wreg	equ	0xFE8
  2550                           indf1	equ	0xFE7
  2551                           postdec1	equ	0xFE5
  2552                           plusw1	equ	0xFE3
  2553                           fsr1h	equ	0xFE2
  2554                           fsr1l	equ	0xFE1
  2555                           indf2	equ	0xFDF
  2556                           plusw2	equ	0xFDB
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _init_config *****************
  2562 ;; Defined at:
  2563 ;;		line 14 in file "main.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2577 ;;      Params:         0       0       0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    6
  2584 ;; This function calls:
  2585 ;;		_init_adc
  2586 ;;		_init_clcd
  2587 ;;		_init_ds1307
  2588 ;;		_init_i2c
  2589 ;;		_init_matrix_keypad
  2590 ;;		_init_timer0
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text6
  2597  0018CE                     __ptext6:
  2598                           	opt stack 0
  2599  0018CE                     _init_config:
  2600                           	opt stack 24
  2601                           
  2602                           ;main.c: 16: init_clcd();
  2603                           
  2604                           ;incstack = 0
  2605  0018CE  ECC7  F00B         	call	_init_clcd	;wreg free
  2606                           
  2607                           ;main.c: 17: init_i2c();
  2608  0018D2  EC80  F00C         	call	_init_i2c	;wreg free
  2609                           
  2610                           ;main.c: 18: init_ds1307();
  2611  0018D6  ECA0  F00A         	call	_init_ds1307	;wreg free
  2612                           
  2613                           ;main.c: 19: init_adc();
  2614  0018DA  EC47  F00C         	call	_init_adc	;wreg free
  2615                           
  2616                           ;main.c: 20: init_matrix_keypad();
  2617  0018DE  EC8B  F00C         	call	_init_matrix_keypad	;wreg free
  2618                           
  2619                           ;main.c: 21: init_timer0();
  2620  0018E2  ECA6  F00C         	call	_init_timer0	;wreg free
  2621  0018E6  0012               	return		;funcret
  2622  0018E8                     __end_of_init_config:
  2623                           	opt stack 0
  2624                           tblptru	equ	0xFF8
  2625                           tblptrh	equ	0xFF7
  2626                           tblptrl	equ	0xFF6
  2627                           tablat	equ	0xFF5
  2628                           prodh	equ	0xFF4
  2629                           prodl	equ	0xFF3
  2630                           postinc0	equ	0xFEE
  2631                           wreg	equ	0xFE8
  2632                           indf1	equ	0xFE7
  2633                           postdec1	equ	0xFE5
  2634                           plusw1	equ	0xFE3
  2635                           fsr1h	equ	0xFE2
  2636                           fsr1l	equ	0xFE1
  2637                           indf2	equ	0xFDF
  2638                           plusw2	equ	0xFDB
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function _init_timer0 *****************
  2644 ;; Defined at:
  2645 ;;		line 4 in file "timer0.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2659 ;;      Params:         0       0       0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0
  2662 ;;      Totals:         0       0       0       0       0       0       0
  2663 ;;Total ram usage:        0 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_init_config
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text7
  2674  00194C                     __ptext7:
  2675                           	opt stack 0
  2676  00194C                     _init_timer0:
  2677                           	opt stack 28
  2678                           
  2679                           ;timer0.c: 10: T0CS = 0;
  2680                           
  2681                           ;incstack = 0
  2682  00194C  9AD5               	bcf	4053,5,c	;volatile
  2683                           
  2684                           ;timer0.c: 12: TMR0 = 6;
  2685  00194E  0E00               	movlw	0
  2686  001950  6ED7               	movwf	4055,c	;volatile
  2687  001952  0E06               	movlw	6
  2688  001954  6ED6               	movwf	4054,c	;volatile
  2689                           
  2690                           ;timer0.c: 15: T0IF = 0;
  2691  001956  94F2               	bcf	intcon,2,c	;volatile
  2692                           
  2693                           ;timer0.c: 18: TMR0IE = 1;
  2694  001958  8AF2               	bsf	intcon,5,c	;volatile
  2695  00195A  0012               	return		;funcret
  2696  00195C                     __end_of_init_timer0:
  2697                           	opt stack 0
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodh	equ	0xFF4
  2703                           prodl	equ	0xFF3
  2704                           intcon	equ	0xFF2
  2705                           postinc0	equ	0xFEE
  2706                           wreg	equ	0xFE8
  2707                           indf1	equ	0xFE7
  2708                           postdec1	equ	0xFE5
  2709                           plusw1	equ	0xFE3
  2710                           fsr1h	equ	0xFE2
  2711                           fsr1l	equ	0xFE1
  2712                           indf2	equ	0xFDF
  2713                           plusw2	equ	0xFDB
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function _init_matrix_keypad *****************
  2719 ;; Defined at:
  2720 ;;		line 4 in file "matrix_keypad.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2734 ;;      Params:         0       0       0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0
  2737 ;;      Totals:         0       0       0       0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_init_config
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text8
  2749  001916                     __ptext8:
  2750                           	opt stack 0
  2751  001916                     _init_matrix_keypad:
  2752                           	opt stack 28
  2753                           
  2754                           ;matrix_keypad.c: 7: ADCON1 = 0x0F;
  2755                           
  2756                           ;incstack = 0
  2757  001916  0E0F               	movlw	15
  2758  001918  6EC1               	movwf	4033,c	;volatile
  2759                           
  2760                           ;matrix_keypad.c: 10: TRISB = 0x1E;
  2761  00191A  0E1E               	movlw	30
  2762  00191C  6E93               	movwf	3987,c	;volatile
  2763                           
  2764                           ;matrix_keypad.c: 13: RBPU = 0;
  2765  00191E  9EF1               	bcf	intcon2,7,c	;volatile
  2766                           
  2767                           ;matrix_keypad.c: 15: PORTB = PORTB | 0xE0;
  2768  001920  5081               	movf	3969,w,c	;volatile
  2769  001922  09E0               	iorlw	224
  2770  001924  6E81               	movwf	3969,c	;volatile
  2771  001926  0012               	return		;funcret
  2772  001928                     __end_of_init_matrix_keypad:
  2773                           	opt stack 0
  2774                           tblptru	equ	0xFF8
  2775                           tblptrh	equ	0xFF7
  2776                           tblptrl	equ	0xFF6
  2777                           tablat	equ	0xFF5
  2778                           prodh	equ	0xFF4
  2779                           prodl	equ	0xFF3
  2780                           intcon	equ	0xFF2
  2781                           intcon2	equ	0xFF1
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           indf1	equ	0xFE7
  2785                           postdec1	equ	0xFE5
  2786                           plusw1	equ	0xFE3
  2787                           fsr1h	equ	0xFE2
  2788                           fsr1l	equ	0xFE1
  2789                           indf2	equ	0xFDF
  2790                           plusw2	equ	0xFDB
  2791                           fsr2h	equ	0xFDA
  2792                           fsr2l	equ	0xFD9
  2793                           status	equ	0xFD8
  2794                           
  2795 ;; *************** function _init_i2c *****************
  2796 ;; Defined at:
  2797 ;;		line 3 in file "i2c.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2811 ;;      Params:         0       0       0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_init_config
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text9
  2826  001900                     __ptext9:
  2827                           	opt stack 0
  2828  001900                     _init_i2c:
  2829                           	opt stack 28
  2830                           
  2831                           ;i2c.c: 6: TRISC3 = 1;
  2832                           
  2833                           ;incstack = 0
  2834  001900  8694               	bsf	3988,3,c	;volatile
  2835                           
  2836                           ;i2c.c: 7: TRISC4 = 1;
  2837  001902  8894               	bsf	3988,4,c	;volatile
  2838                           
  2839                           ;i2c.c: 9: SSPCON1 = 0x28;
  2840  001904  0E28               	movlw	40
  2841  001906  6EC6               	movwf	4038,c	;volatile
  2842                           
  2843                           ;i2c.c: 12: SSPADD = 0x64;
  2844  001908  0E64               	movlw	100
  2845  00190A  6EC8               	movwf	4040,c	;volatile
  2846                           
  2847                           ;i2c.c: 14: CKE = 0;
  2848  00190C  9CC7               	bcf	4039,6,c	;volatile
  2849                           
  2850                           ;i2c.c: 16: SMP = 1;
  2851  00190E  8EC7               	bsf	4039,7,c	;volatile
  2852                           
  2853                           ;i2c.c: 18: SSPIF = 0;
  2854  001910  969E               	bcf	3998,3,c	;volatile
  2855                           
  2856                           ;i2c.c: 20: BCLIF = 0;
  2857  001912  96A1               	bcf	4001,3,c	;volatile
  2858  001914  0012               	return		;funcret
  2859  001916                     __end_of_init_i2c:
  2860                           	opt stack 0
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           prodh	equ	0xFF4
  2866                           prodl	equ	0xFF3
  2867                           intcon	equ	0xFF2
  2868                           intcon2	equ	0xFF1
  2869                           postinc0	equ	0xFEE
  2870                           wreg	equ	0xFE8
  2871                           indf1	equ	0xFE7
  2872                           postdec1	equ	0xFE5
  2873                           plusw1	equ	0xFE3
  2874                           fsr1h	equ	0xFE2
  2875                           fsr1l	equ	0xFE1
  2876                           indf2	equ	0xFDF
  2877                           plusw2	equ	0xFDB
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8
  2881                           
  2882 ;; *************** function _init_ds1307 *****************
  2883 ;; Defined at:
  2884 ;;		line 11 in file "ds1307.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  dummy           1   17[COMRAM] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2898 ;;      Params:         0       0       0       0       0       0       0
  2899 ;;      Locals:         1       0       0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0
  2901 ;;      Totals:         1       0       0       0       0       0       0
  2902 ;;Total ram usage:        1 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    5
  2905 ;; This function calls:
  2906 ;;		_read_ds1307
  2907 ;;		_write_ds1307
  2908 ;; This function is called by:
  2909 ;;		_init_config
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text10
  2914  001540                     __ptext10:
  2915                           	opt stack 0
  2916  001540                     _init_ds1307:
  2917                           	opt stack 24
  2918                           
  2919                           ;ds1307.c: 13: unsigned char dummy;
  2920                           ;ds1307.c: 16: dummy = read_ds1307(0x00);
  2921                           
  2922                           ;incstack = 0
  2923  001540  0E00               	movlw	0
  2924  001542  ECF8  F00B         	call	_read_ds1307
  2925  001546  6E12               	movwf	init_ds1307@dummy,c
  2926                           
  2927                           ;ds1307.c: 18: write_ds1307(0x00, 0x80);
  2928  001548  0E80               	movlw	128
  2929  00154A  6E10               	movwf	write_ds1307@data,c
  2930  00154C  0E00               	movlw	0
  2931  00154E  EC58  F00C         	call	_write_ds1307
  2932                           
  2933                           ;ds1307.c: 19: dummy = read_ds1307(0x01);
  2934  001552  0E01               	movlw	1
  2935  001554  ECF8  F00B         	call	_read_ds1307
  2936  001558  6E12               	movwf	init_ds1307@dummy,c
  2937                           
  2938                           ;ds1307.c: 20: write_ds1307(0x01, 0x35);
  2939  00155A  0E35               	movlw	53
  2940  00155C  6E10               	movwf	write_ds1307@data,c
  2941  00155E  0E01               	movlw	1
  2942  001560  EC58  F00C         	call	_write_ds1307
  2943                           
  2944                           ;ds1307.c: 23: dummy = read_ds1307(0x02);
  2945  001564  0E02               	movlw	2
  2946  001566  ECF8  F00B         	call	_read_ds1307
  2947  00156A  6E12               	movwf	init_ds1307@dummy,c
  2948                           
  2949                           ;ds1307.c: 25: write_ds1307(0x02, 0x51);
  2950  00156C  0E51               	movlw	81
  2951  00156E  6E10               	movwf	write_ds1307@data,c
  2952  001570  0E02               	movlw	2
  2953  001572  EC58  F00C         	call	_write_ds1307
  2954                           
  2955                           ;ds1307.c: 40: write_ds1307(0x07, 0x93);
  2956  001576  0E93               	movlw	147
  2957  001578  6E10               	movwf	write_ds1307@data,c
  2958  00157A  0E07               	movlw	7
  2959  00157C  EC58  F00C         	call	_write_ds1307
  2960                           
  2961                           ;ds1307.c: 43: dummy = read_ds1307(0x00);
  2962  001580  0E00               	movlw	0
  2963  001582  ECF8  F00B         	call	_read_ds1307
  2964  001586  6E12               	movwf	init_ds1307@dummy,c
  2965                           
  2966                           ;ds1307.c: 44: write_ds1307(0x00, dummy & 0x7F);
  2967  001588  5012               	movf	init_ds1307@dummy,w,c
  2968  00158A  0B7F               	andlw	127
  2969  00158C  6E10               	movwf	write_ds1307@data,c
  2970  00158E  0E00               	movlw	0
  2971  001590  EC58  F00C         	call	_write_ds1307
  2972  001594  0012               	return		;funcret
  2973  001596                     __end_of_init_ds1307:
  2974                           	opt stack 0
  2975                           tblptru	equ	0xFF8
  2976                           tblptrh	equ	0xFF7
  2977                           tblptrl	equ	0xFF6
  2978                           tablat	equ	0xFF5
  2979                           prodh	equ	0xFF4
  2980                           prodl	equ	0xFF3
  2981                           intcon	equ	0xFF2
  2982                           intcon2	equ	0xFF1
  2983                           postinc0	equ	0xFEE
  2984                           wreg	equ	0xFE8
  2985                           indf1	equ	0xFE7
  2986                           postdec1	equ	0xFE5
  2987                           plusw1	equ	0xFE3
  2988                           fsr1h	equ	0xFE2
  2989                           fsr1l	equ	0xFE1
  2990                           indf2	equ	0xFDF
  2991                           plusw2	equ	0xFDB
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _init_clcd *****************
  2997 ;; Defined at:
  2998 ;;		line 27 in file "clcd.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3012 ;;      Params:         0       0       0       0       0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0
  3015 ;;      Totals:         0       0       0       0       0       0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    2
  3019 ;; This function calls:
  3020 ;;		_clcd_write
  3021 ;; This function is called by:
  3022 ;;		_init_config
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text11
  3027  00178E                     __ptext11:
  3028                           	opt stack 0
  3029  00178E                     _init_clcd:
  3030                           	opt stack 27
  3031                           
  3032                           ;clcd.c: 30: TRISD = 0x00;
  3033                           
  3034                           ;incstack = 0
  3035  00178E  0E00               	movlw	0
  3036  001790  6E95               	movwf	3989,c	;volatile
  3037                           
  3038                           ;clcd.c: 32: TRISC = TRISC & 0xF8;
  3039  001792  5094               	movf	3988,w,c	;volatile
  3040  001794  0BF8               	andlw	248
  3041  001796  6E94               	movwf	3988,c	;volatile
  3042                           
  3043                           ;clcd.c: 34: RC0 = 0;
  3044  001798  9082               	bcf	3970,0,c	;volatile
  3045                           
  3046                           ;clcd.c: 36: clcd_write(0x02, 0);
  3047  00179A  0E00               	movlw	0
  3048  00179C  6E0F               	movwf	clcd_write@control_bit,c
  3049  00179E  0E02               	movlw	2
  3050  0017A0  EC0D  F00C         	call	_clcd_write
  3051                           
  3052                           ;clcd.c: 37: clcd_write(0x38, 0);
  3053  0017A4  0E00               	movlw	0
  3054  0017A6  6E0F               	movwf	clcd_write@control_bit,c
  3055  0017A8  0E38               	movlw	56
  3056  0017AA  EC0D  F00C         	call	_clcd_write
  3057                           
  3058                           ;clcd.c: 38: clcd_write(0x0C, 0);
  3059  0017AE  0E00               	movlw	0
  3060  0017B0  6E0F               	movwf	clcd_write@control_bit,c
  3061  0017B2  0E0C               	movlw	12
  3062  0017B4  EC0D  F00C         	call	_clcd_write
  3063                           
  3064                           ;clcd.c: 39: clcd_write(0x01, 0);
  3065  0017B8  0E00               	movlw	0
  3066  0017BA  6E0F               	movwf	clcd_write@control_bit,c
  3067  0017BC  0E01               	movlw	1
  3068  0017BE  EC0D  F00C         	call	_clcd_write
  3069  0017C2  0012               	return		;funcret
  3070  0017C4                     __end_of_init_clcd:
  3071                           	opt stack 0
  3072                           tblptru	equ	0xFF8
  3073                           tblptrh	equ	0xFF7
  3074                           tblptrl	equ	0xFF6
  3075                           tablat	equ	0xFF5
  3076                           prodh	equ	0xFF4
  3077                           prodl	equ	0xFF3
  3078                           intcon	equ	0xFF2
  3079                           intcon2	equ	0xFF1
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           indf1	equ	0xFE7
  3083                           postdec1	equ	0xFE5
  3084                           plusw1	equ	0xFE3
  3085                           fsr1h	equ	0xFE2
  3086                           fsr1l	equ	0xFE1
  3087                           indf2	equ	0xFDF
  3088                           plusw2	equ	0xFDB
  3089                           fsr2h	equ	0xFDA
  3090                           fsr2l	equ	0xFD9
  3091                           status	equ	0xFD8
  3092                           
  3093 ;; *************** function _init_adc *****************
  3094 ;; Defined at:
  3095 ;;		line 28 in file "adc.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3109 ;;      Params:         0       0       0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_init_config
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text12
  3124  00188E                     __ptext12:
  3125                           	opt stack 0
  3126  00188E                     _init_adc:
  3127                           	opt stack 28
  3128                           
  3129                           ;adc.c: 31: ADFM = 1;
  3130                           
  3131                           ;incstack = 0
  3132  00188E  8EC0               	bsf	4032,7,c	;volatile
  3133                           
  3134                           ;adc.c: 37: ACQT2 = 0;
  3135  001890  9AC0               	bcf	4032,5,c	;volatile
  3136                           
  3137                           ;adc.c: 38: ACQT1 = 1;
  3138  001892  88C0               	bsf	4032,4,c	;volatile
  3139                           
  3140                           ;adc.c: 39: ACQT0 = 0;
  3141  001894  96C0               	bcf	4032,3,c	;volatile
  3142                           
  3143                           ;adc.c: 45: ADCS0 = 0;
  3144  001896  90C0               	bcf	4032,0,c	;volatile
  3145                           
  3146                           ;adc.c: 46: ADCS1 = 1;
  3147  001898  82C0               	bsf	4032,1,c	;volatile
  3148                           
  3149                           ;adc.c: 47: ADCS2 = 0;
  3150  00189A  94C0               	bcf	4032,2,c	;volatile
  3151                           
  3152                           ;adc.c: 50: GODONE = 0;
  3153  00189C  92C2               	bcf	4034,1,c	;volatile
  3154                           
  3155                           ;adc.c: 53: CHS2 = 1;
  3156  00189E  88C2               	bsf	4034,4,c	;volatile
  3157                           
  3158                           ;adc.c: 56: VCFG1 = 0;
  3159  0018A0  9AC1               	bcf	4033,5,c	;volatile
  3160                           
  3161                           ;adc.c: 58: VCFG0 = 0;
  3162  0018A2  98C1               	bcf	4033,4,c	;volatile
  3163                           
  3164                           ;adc.c: 61: ADRESH = 0;
  3165  0018A4  0E00               	movlw	0
  3166  0018A6  6EC4               	movwf	4036,c	;volatile
  3167                           
  3168                           ;adc.c: 62: ADRESL = 0;
  3169  0018A8  0E00               	movlw	0
  3170  0018AA  6EC3               	movwf	4035,c	;volatile
  3171                           
  3172                           ;adc.c: 65: ADON = 1;
  3173  0018AC  80C2               	bsf	4034,0,c	;volatile
  3174  0018AE  0012               	return		;funcret
  3175  0018B0                     __end_of_init_adc:
  3176                           	opt stack 0
  3177                           tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           prodh	equ	0xFF4
  3182                           prodl	equ	0xFF3
  3183                           intcon	equ	0xFF2
  3184                           intcon2	equ	0xFF1
  3185                           postinc0	equ	0xFEE
  3186                           wreg	equ	0xFE8
  3187                           indf1	equ	0xFE7
  3188                           postdec1	equ	0xFE5
  3189                           plusw1	equ	0xFE3
  3190                           fsr1h	equ	0xFE2
  3191                           fsr1l	equ	0xFE1
  3192                           indf2	equ	0xFDF
  3193                           plusw2	equ	0xFDB
  3194                           fsr2h	equ	0xFDA
  3195                           fsr2l	equ	0xFD9
  3196                           status	equ	0xFD8
  3197                           
  3198 ;; *************** function _get_time *****************
  3199 ;; Defined at:
  3200 ;;		line 53 in file "clock.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3214 ;;      Params:         0       0       0       0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0
  3217 ;;      Totals:         0       0       0       0       0       0       0
  3218 ;;Total ram usage:        0 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    5
  3221 ;; This function calls:
  3222 ;;		_read_ds1307
  3223 ;; This function is called by:
  3224 ;;		_main
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text13
  3229  001188                     __ptext13:
  3230                           	opt stack 0
  3231  001188                     _get_time:
  3232                           	opt stack 25
  3233                           
  3234                           ;clock.c: 55: clock_reg[0] = read_ds1307(0x02);
  3235                           
  3236                           ;incstack = 0
  3237  001188  0E02               	movlw	2
  3238  00118A  ECF8  F00B         	call	_read_ds1307
  3239  00118E  6E4A               	movwf	_clock_reg,c
  3240                           
  3241                           ;clock.c: 56: clock_reg[1] = read_ds1307(0x01);
  3242  001190  0E01               	movlw	1
  3243  001192  ECF8  F00B         	call	_read_ds1307
  3244  001196  6E4B               	movwf	_clock_reg+1,c
  3245                           
  3246                           ;clock.c: 57: clock_reg[2] = read_ds1307(0x00);
  3247  001198  0E00               	movlw	0
  3248  00119A  ECF8  F00B         	call	_read_ds1307
  3249  00119E  6E4C               	movwf	_clock_reg+2,c
  3250                           
  3251                           ;clock.c: 59: if (clock_reg[0] & 0x40)
  3252  0011A0  AC4A               	btfss	_clock_reg,6,c
  3253  0011A2  D004               	goto	l4821
  3254                           
  3255                           ;clock.c: 60: {
  3256                           ;clock.c: 61: time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  3257  0011A4  384A               	swapf	_clock_reg,w,c
  3258  0011A6  0B0F               	andlw	15
  3259  0011A8  0B01               	andlw	1
  3260  0011AA  D003               	goto	L3
  3261  0011AC                     l4821:
  3262                           
  3263                           ;clock.c: 64: else
  3264                           ;clock.c: 65: {
  3265                           ;clock.c: 66: time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  3266  0011AC  384A               	swapf	_clock_reg,w,c
  3267  0011AE  0B0F               	andlw	15
  3268  0011B0  0B03               	andlw	3
  3269  0011B2                     L3:
  3270  0011B2  0F30               	addlw	48
  3271  0011B4  0100               	movlb	0	; () banked
  3272  0011B6  6F98               	movwf	_time& (0+255),b
  3273                           
  3274                           ;clock.c: 67: time[1] = '0' + (clock_reg[0] & 0x0F);
  3275  0011B8  504A               	movf	_clock_reg,w,c
  3276  0011BA  0B0F               	andlw	15
  3277  0011BC  0F30               	addlw	48
  3278  0011BE  0100               	movlb	0	; () banked
  3279  0011C0  6F99               	movwf	(_time+1)& (0+255),b
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;clock.c: 68: }
  3283                           ;clock.c: 69: time[2] = ':';
  3284                           
  3285                           ; BSR set to: 0
  3286  0011C2  0E3A               	movlw	58
  3287  0011C4  0100               	movlb	0	; () banked
  3288  0011C6  6F9A               	movwf	(_time+2)& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;clock.c: 70: time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  3292  0011C8  384B               	swapf	_clock_reg+1,w,c
  3293  0011CA  0B0F               	andlw	15
  3294  0011CC  0B0F               	andlw	15
  3295  0011CE  0F30               	addlw	48
  3296  0011D0  0100               	movlb	0	; () banked
  3297  0011D2  6F9B               	movwf	(_time+3)& (0+255),b
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;clock.c: 71: time[4] = '0' + (clock_reg[1] & 0x0F);
  3301  0011D4  504B               	movf	_clock_reg+1,w,c
  3302  0011D6  0B0F               	andlw	15
  3303  0011D8  0F30               	addlw	48
  3304  0011DA  0100               	movlb	0	; () banked
  3305  0011DC  6F9C               	movwf	(_time+4)& (0+255),b
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;clock.c: 72: time[5] = ':';
  3309  0011DE  0E3A               	movlw	58
  3310  0011E0  0100               	movlb	0	; () banked
  3311  0011E2  6F9D               	movwf	(_time+5)& (0+255),b
  3312                           
  3313                           ;clock.c: 73: time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  3314  0011E4  384C               	swapf	_clock_reg+2,w,c
  3315  0011E6  0B0F               	andlw	15
  3316  0011E8  0B0F               	andlw	15
  3317  0011EA  0F30               	addlw	48
  3318  0011EC  0100               	movlb	0	; () banked
  3319  0011EE  6F9E               	movwf	(_time+6)& (0+255),b
  3320                           
  3321                           ;clock.c: 74: time[7] = '0' + (clock_reg[2] & 0x0F);
  3322  0011F0  504C               	movf	_clock_reg+2,w,c
  3323  0011F2  0B0F               	andlw	15
  3324  0011F4  0F30               	addlw	48
  3325  0011F6  0100               	movlb	0	; () banked
  3326  0011F8  6F9F               	movwf	(_time+7)& (0+255),b
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;clock.c: 75: time[8] = '\0';
  3330  0011FA  0E00               	movlw	0
  3331  0011FC  0100               	movlb	0	; () banked
  3332  0011FE  6FA0               	movwf	(_time+8)& (0+255),b
  3333                           
  3334                           ; BSR set to: 0
  3335  001200  0012               	return		;funcret
  3336  001202                     __end_of_get_time:
  3337                           	opt stack 0
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           intcon	equ	0xFF2
  3345                           intcon2	equ	0xFF1
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           indf1	equ	0xFE7
  3349                           postdec1	equ	0xFE5
  3350                           plusw1	equ	0xFE3
  3351                           fsr1h	equ	0xFE2
  3352                           fsr1l	equ	0xFE1
  3353                           indf2	equ	0xFDF
  3354                           plusw2	equ	0xFDB
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _read_ds1307 *****************
  3360 ;; Defined at:
  3361 ;;		line 57 in file "ds1307.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  address         1    wreg     unsigned char 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  address         1   15[COMRAM] unsigned char 
  3366 ;;  data            1   16[COMRAM] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      unsigned char 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3376 ;;      Params:         0       0       0       0       0       0       0
  3377 ;;      Locals:         2       0       0       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0
  3379 ;;      Totals:         2       0       0       0       0       0       0
  3380 ;;Total ram usage:        2 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    4
  3383 ;; This function calls:
  3384 ;;		_i2c_read
  3385 ;;		_i2c_rep_start
  3386 ;;		_i2c_start
  3387 ;;		_i2c_stop
  3388 ;;		_i2c_write
  3389 ;; This function is called by:
  3390 ;;		_get_time
  3391 ;;		_init_ds1307
  3392 ;;		_get_date
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text14
  3397  0017F0                     __ptext14:
  3398                           	opt stack 0
  3399  0017F0                     _read_ds1307:
  3400                           	opt stack 24
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;incstack = 0
  3404                           ;read_ds1307@address stored from wreg
  3405  0017F0  6E10               	movwf	read_ds1307@address,c
  3406                           
  3407                           ;ds1307.c: 59: unsigned char data;
  3408                           ;ds1307.c: 61: i2c_start();
  3409  0017F2  ECD8  F00C         	call	_i2c_start	;wreg free
  3410                           
  3411                           ;ds1307.c: 62: i2c_write(0xD0);
  3412  0017F6  0ED0               	movlw	208
  3413  0017F8  ECBB  F00C         	call	_i2c_write
  3414                           
  3415                           ;ds1307.c: 63: i2c_write(address);
  3416  0017FC  5010               	movf	read_ds1307@address,w,c
  3417  0017FE  ECBB  F00C         	call	_i2c_write
  3418                           
  3419                           ;ds1307.c: 64: i2c_rep_start();
  3420  001802  ECCC  F00C         	call	_i2c_rep_start	;wreg free
  3421                           
  3422                           ;ds1307.c: 65: i2c_write(0xD1);
  3423  001806  0ED1               	movlw	209
  3424  001808  ECBB  F00C         	call	_i2c_write
  3425                           
  3426                           ;ds1307.c: 66: data = i2c_read();
  3427  00180C  ECB5  F00C         	call	_i2c_read	;wreg free
  3428  001810  6E11               	movwf	read_ds1307@data,c
  3429                           
  3430                           ;ds1307.c: 67: i2c_stop();
  3431  001812  ECD4  F00C         	call	_i2c_stop	;wreg free
  3432                           
  3433                           ;ds1307.c: 69: return data;
  3434  001816  5011               	movf	read_ds1307@data,w,c
  3435  001818  0012               	return	
  3436  00181A                     __end_of_read_ds1307:
  3437                           	opt stack 0
  3438                           tblptru	equ	0xFF8
  3439                           tblptrh	equ	0xFF7
  3440                           tblptrl	equ	0xFF6
  3441                           tablat	equ	0xFF5
  3442                           prodh	equ	0xFF4
  3443                           prodl	equ	0xFF3
  3444                           intcon	equ	0xFF2
  3445                           intcon2	equ	0xFF1
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           indf1	equ	0xFE7
  3449                           postdec1	equ	0xFE5
  3450                           plusw1	equ	0xFE3
  3451                           fsr1h	equ	0xFE2
  3452                           fsr1l	equ	0xFE1
  3453                           indf2	equ	0xFDF
  3454                           plusw2	equ	0xFDB
  3455                           fsr2h	equ	0xFDA
  3456                           fsr2l	equ	0xFD9
  3457                           status	equ	0xFD8
  3458                           
  3459 ;; *************** function _i2c_rep_start *****************
  3460 ;; Defined at:
  3461 ;;		line 49 in file "i2c.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3475 ;;      Params:         0       0       0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    2
  3482 ;; This function calls:
  3483 ;;		_i2c_idle
  3484 ;; This function is called by:
  3485 ;;		_read_ds1307
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text15
  3490  001998                     __ptext15:
  3491                           	opt stack 0
  3492  001998                     _i2c_rep_start:
  3493                           	opt stack 25
  3494                           
  3495                           ;i2c.c: 51: RSEN = 1;
  3496                           
  3497                           ;incstack = 0
  3498  001998  82C5               	bsf	4037,1,c	;volatile
  3499                           
  3500                           ;i2c.c: 52: i2c_idle();
  3501  00199A  ECDC  F00C         	call	_i2c_idle	;wreg free
  3502  00199E  0012               	return		;funcret
  3503  0019A0                     __end_of_i2c_rep_start:
  3504                           	opt stack 0
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           intcon2	equ	0xFF1
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           indf1	equ	0xFE7
  3516                           postdec1	equ	0xFE5
  3517                           plusw1	equ	0xFE3
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           plusw2	equ	0xFDB
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526 ;; *************** function _i2c_read *****************
  3527 ;; Defined at:
  3528 ;;		line 73 in file "i2c.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      unsigned char 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3542 ;;      Params:         0       0       0       0       0       0       0
  3543 ;;      Locals:         0       0       0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0       0       0
  3545 ;;      Totals:         0       0       0       0       0       0       0
  3546 ;;Total ram usage:        0 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    3
  3549 ;; This function calls:
  3550 ;;		_i2c_no_ack
  3551 ;;		_i2c_rx_mode
  3552 ;; This function is called by:
  3553 ;;		_read_ds1307
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text16
  3558  00196A                     __ptext16:
  3559                           	opt stack 0
  3560  00196A                     _i2c_read:
  3561                           	opt stack 24
  3562                           
  3563                           ;i2c.c: 75: i2c_rx_mode();
  3564                           
  3565                           ;incstack = 0
  3566  00196A  ECD0  F00C         	call	_i2c_rx_mode	;wreg free
  3567                           
  3568                           ;i2c.c: 76: i2c_no_ack();
  3569  00196E  ECE0  F00C         	call	_i2c_no_ack	;wreg free
  3570                           
  3571                           ;i2c.c: 78: return SSPBUF;
  3572  001972  50C9               	movf	4041,w,c	;volatile
  3573  001974  0012               	return	
  3574  001976                     __end_of_i2c_read:
  3575                           	opt stack 0
  3576                           tblptru	equ	0xFF8
  3577                           tblptrh	equ	0xFF7
  3578                           tblptrl	equ	0xFF6
  3579                           tablat	equ	0xFF5
  3580                           prodh	equ	0xFF4
  3581                           prodl	equ	0xFF3
  3582                           intcon	equ	0xFF2
  3583                           intcon2	equ	0xFF1
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           indf1	equ	0xFE7
  3587                           postdec1	equ	0xFE5
  3588                           plusw1	equ	0xFE3
  3589                           fsr1h	equ	0xFE2
  3590                           fsr1l	equ	0xFE1
  3591                           indf2	equ	0xFDF
  3592                           plusw2	equ	0xFDB
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function _i2c_rx_mode *****************
  3598 ;; Defined at:
  3599 ;;		line 61 in file "i2c.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3613 ;;      Params:         0       0       0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0
  3616 ;;      Totals:         0       0       0       0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    2
  3620 ;; This function calls:
  3621 ;;		_i2c_idle
  3622 ;; This function is called by:
  3623 ;;		_i2c_read
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text17
  3628  0019A0                     __ptext17:
  3629                           	opt stack 0
  3630  0019A0                     _i2c_rx_mode:
  3631                           	opt stack 24
  3632                           
  3633                           ;i2c.c: 63: RCEN = 1;
  3634                           
  3635                           ;incstack = 0
  3636  0019A0  86C5               	bsf	4037,3,c	;volatile
  3637                           
  3638                           ;i2c.c: 64: i2c_idle();
  3639  0019A2  ECDC  F00C         	call	_i2c_idle	;wreg free
  3640  0019A6  0012               	return		;funcret
  3641  0019A8                     __end_of_i2c_rx_mode:
  3642                           	opt stack 0
  3643                           tblptru	equ	0xFF8
  3644                           tblptrh	equ	0xFF7
  3645                           tblptrl	equ	0xFF6
  3646                           tablat	equ	0xFF5
  3647                           prodh	equ	0xFF4
  3648                           prodl	equ	0xFF3
  3649                           intcon	equ	0xFF2
  3650                           intcon2	equ	0xFF1
  3651                           postinc0	equ	0xFEE
  3652                           wreg	equ	0xFE8
  3653                           indf1	equ	0xFE7
  3654                           postdec1	equ	0xFE5
  3655                           plusw1	equ	0xFE3
  3656                           fsr1h	equ	0xFE2
  3657                           fsr1l	equ	0xFE1
  3658                           indf2	equ	0xFDF
  3659                           plusw2	equ	0xFDB
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8
  3663                           
  3664 ;; *************** function _i2c_no_ack *****************
  3665 ;; Defined at:
  3666 ;;		line 67 in file "i2c.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		None
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3680 ;;      Params:         0       0       0       0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0
  3683 ;;      Totals:         0       0       0       0       0       0       0
  3684 ;;Total ram usage:        0 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_i2c_read
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text18
  3695  0019C0                     __ptext18:
  3696                           	opt stack 0
  3697  0019C0                     _i2c_no_ack:
  3698                           	opt stack 25
  3699                           
  3700                           ;i2c.c: 69: ACKDT = 1;
  3701                           
  3702                           ;incstack = 0
  3703  0019C0  8AC5               	bsf	4037,5,c	;volatile
  3704                           
  3705                           ;i2c.c: 70: ACKEN = 1;
  3706  0019C2  88C5               	bsf	4037,4,c	;volatile
  3707  0019C4  0012               	return		;funcret
  3708  0019C6                     __end_of_i2c_no_ack:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           intcon2	equ	0xFF1
  3718                           postinc0	equ	0xFEE
  3719                           wreg	equ	0xFE8
  3720                           indf1	equ	0xFE7
  3721                           postdec1	equ	0xFE5
  3722                           plusw1	equ	0xFE3
  3723                           fsr1h	equ	0xFE2
  3724                           fsr1l	equ	0xFE1
  3725                           indf2	equ	0xFDF
  3726                           plusw2	equ	0xFDB
  3727                           fsr2h	equ	0xFDA
  3728                           fsr2l	equ	0xFD9
  3729                           status	equ	0xFD8
  3730                           
  3731 ;; *************** function _display_time *****************
  3732 ;; Defined at:
  3733 ;;		line 32 in file "clock.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3747 ;;      Params:         0       0       0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    3
  3754 ;; This function calls:
  3755 ;;		_clcd_print
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text19
  3762  001928                     __ptext19:
  3763                           	opt stack 0
  3764  001928                     _display_time:
  3765                           	opt stack 27
  3766                           
  3767                           ;clock.c: 34: clcd_print(time, (0xC0 + (0)));
  3768                           
  3769                           ;incstack = 0
  3770  001928  0E98               	movlw	low _time
  3771  00192A  6E11               	movwf	clcd_print@data,c
  3772  00192C  0E00               	movlw	high _time
  3773  00192E  6E12               	movwf	clcd_print@data+1,c
  3774  001930  0EC0               	movlw	192
  3775  001932  6E13               	movwf	clcd_print@addr,c
  3776  001934  EC43  F00A         	call	_clcd_print	;wreg free
  3777  001938  0012               	return		;funcret
  3778  00193A                     __end_of_display_time:
  3779                           	opt stack 0
  3780                           tblptru	equ	0xFF8
  3781                           tblptrh	equ	0xFF7
  3782                           tblptrl	equ	0xFF6
  3783                           tablat	equ	0xFF5
  3784                           prodh	equ	0xFF4
  3785                           prodl	equ	0xFF3
  3786                           intcon	equ	0xFF2
  3787                           intcon2	equ	0xFF1
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           indf1	equ	0xFE7
  3791                           postdec1	equ	0xFE5
  3792                           plusw1	equ	0xFE3
  3793                           fsr1h	equ	0xFE2
  3794                           fsr1l	equ	0xFE1
  3795                           indf2	equ	0xFDF
  3796                           plusw2	equ	0xFDB
  3797                           fsr2h	equ	0xFDA
  3798                           fsr2l	equ	0xFD9
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function _display_speed *****************
  3802 ;; Defined at:
  3803 ;;		line 80 in file "adc.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  adc_reg_val     2   21[COMRAM] unsigned short 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  buff            5   23[COMRAM] unsigned char [5]
  3808 ;;  i               1   28[COMRAM] unsigned char 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      void 
  3811 ;; Registers used:
  3812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3818 ;;      Params:         2       0       0       0       0       0       0
  3819 ;;      Locals:         6       0       0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0
  3821 ;;      Totals:         8       0       0       0       0       0       0
  3822 ;;Total ram usage:        8 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:    3
  3825 ;; This function calls:
  3826 ;;		___lwdiv
  3827 ;;		___lwmod
  3828 ;;		_clcd_print
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text20
  3835  001354                     __ptext20:
  3836                           	opt stack 0
  3837  001354                     _display_speed:
  3838                           	opt stack 27
  3839                           
  3840                           ;adc.c: 82: char buff[5];
  3841                           ;adc.c: 83: unsigned char i;
  3842                           ;adc.c: 85: i = 3;
  3843                           
  3844                           ;incstack = 0
  3845  001354  0E03               	movlw	3
  3846  001356  6E1D               	movwf	display_speed@i,c
  3847  001358                     l4837:
  3848                           
  3849                           ;adc.c: 87: {
  3850                           ;adc.c: 88: buff[i] = (adc_reg_val % 10) + '0';
  3851  001358  501D               	movf	display_speed@i,w,c
  3852  00135A  0D01               	mullw	1
  3853  00135C  0E18               	movlw	low display_speed@buff
  3854  00135E  24F3               	addwf	prodl,w,c
  3855  001360  6ED9               	movwf	fsr2l,c
  3856  001362  0E00               	movlw	high display_speed@buff
  3857  001364  20F4               	addwfc	prodh,w,c
  3858  001366  6EDA               	movwf	fsr2h,c
  3859  001368  C016  F00F         	movff	display_speed@adc_reg_val,___lwmod@dividend
  3860  00136C  C017  F010         	movff	display_speed@adc_reg_val+1,___lwmod@dividend+1
  3861  001370  0E00               	movlw	0
  3862  001372  6E12               	movwf	___lwmod@divisor+1,c
  3863  001374  0E0A               	movlw	10
  3864  001376  6E11               	movwf	___lwmod@divisor,c
  3865  001378  EC66  F00B         	call	___lwmod	;wreg free
  3866  00137C  500F               	movf	?___lwmod,w,c
  3867  00137E  0F30               	addlw	48
  3868  001380  6EDF               	movwf	indf2,c
  3869                           
  3870                           ;adc.c: 89: adc_reg_val = adc_reg_val / 10;
  3871  001382  C016  F00F         	movff	display_speed@adc_reg_val,___lwdiv@dividend
  3872  001386  C017  F010         	movff	display_speed@adc_reg_val+1,___lwdiv@dividend+1
  3873  00138A  0E00               	movlw	0
  3874  00138C  6E12               	movwf	___lwdiv@divisor+1,c
  3875  00138E  0E0A               	movlw	10
  3876  001390  6E11               	movwf	___lwdiv@divisor,c
  3877  001392  ECCB  F00A         	call	___lwdiv	;wreg free
  3878  001396  C00F  F016         	movff	?___lwdiv,display_speed@adc_reg_val
  3879  00139A  C010  F017         	movff	?___lwdiv+1,display_speed@adc_reg_val+1
  3880                           
  3881                           ;adc.c: 90: } while (i--);
  3882  00139E  061D               	decf	display_speed@i,f,c
  3883  0013A0  281D               	incf	display_speed@i,w,c
  3884  0013A2  A4D8               	btfss	status,2,c
  3885  0013A4  D7D9               	goto	l4837
  3886                           
  3887                           ;adc.c: 91: buff[4] = '\0';
  3888  0013A6  0E00               	movlw	0
  3889  0013A8  6E1C               	movwf	display_speed@buff+4,c
  3890                           
  3891                           ;adc.c: 97: clcd_print(buff, (0xC0 + (13)));
  3892  0013AA  0E18               	movlw	low display_speed@buff
  3893  0013AC  6E11               	movwf	clcd_print@data,c
  3894  0013AE  0E00               	movlw	high display_speed@buff
  3895  0013B0  6E12               	movwf	clcd_print@data+1,c
  3896  0013B2  0ECD               	movlw	205
  3897  0013B4  6E13               	movwf	clcd_print@addr,c
  3898  0013B6  EC43  F00A         	call	_clcd_print	;wreg free
  3899  0013BA  0012               	return		;funcret
  3900  0013BC                     __end_of_display_speed:
  3901                           	opt stack 0
  3902                           tblptru	equ	0xFF8
  3903                           tblptrh	equ	0xFF7
  3904                           tblptrl	equ	0xFF6
  3905                           tablat	equ	0xFF5
  3906                           prodh	equ	0xFF4
  3907                           prodl	equ	0xFF3
  3908                           intcon	equ	0xFF2
  3909                           intcon2	equ	0xFF1
  3910                           postinc0	equ	0xFEE
  3911                           wreg	equ	0xFE8
  3912                           indf1	equ	0xFE7
  3913                           postdec1	equ	0xFE5
  3914                           plusw1	equ	0xFE3
  3915                           fsr1h	equ	0xFE2
  3916                           fsr1l	equ	0xFE1
  3917                           indf2	equ	0xFDF
  3918                           plusw2	equ	0xFDB
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923 ;; *************** function ___lwmod *****************
  3924 ;; Defined at:
  3925 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  dividend        2   14[COMRAM] unsigned int 
  3928 ;;  divisor         2   16[COMRAM] unsigned int 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  counter         1   18[COMRAM] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  2   14[COMRAM] unsigned int 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3940 ;;      Params:         4       0       0       0       0       0       0
  3941 ;;      Locals:         1       0       0       0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0       0       0
  3943 ;;      Totals:         5       0       0       0       0       0       0
  3944 ;;Total ram usage:        5 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_save_speed
  3951 ;;		_display_speed
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text21
  3956  0016CC                     __ptext21:
  3957                           	opt stack 0
  3958  0016CC                     ___lwmod:
  3959                           	opt stack 28
  3960                           
  3961                           ;incstack = 0
  3962  0016CC  5011               	movf	___lwmod@divisor,w,c
  3963  0016CE  1012               	iorwf	___lwmod@divisor+1,w,c
  3964  0016D0  B4D8               	btfsc	status,2,c
  3965  0016D2  D018               	goto	l1166
  3966  0016D4  0E01               	movlw	1
  3967  0016D6  6E13               	movwf	___lwmod@counter,c
  3968  0016D8  D004               	goto	l3479
  3969  0016DA                     l3477:
  3970  0016DA  90D8               	bcf	status,0,c
  3971  0016DC  3611               	rlcf	___lwmod@divisor,f,c
  3972  0016DE  3612               	rlcf	___lwmod@divisor+1,f,c
  3973  0016E0  2A13               	incf	___lwmod@counter,f,c
  3974  0016E2                     l3479:
  3975  0016E2  AE12               	btfss	___lwmod@divisor+1,7,c
  3976  0016E4  D7FA               	goto	l3477
  3977  0016E6                     l3481:
  3978  0016E6  5011               	movf	___lwmod@divisor,w,c
  3979  0016E8  5C0F               	subwf	___lwmod@dividend,w,c
  3980  0016EA  5012               	movf	___lwmod@divisor+1,w,c
  3981  0016EC  5810               	subwfb	___lwmod@dividend+1,w,c
  3982  0016EE  A0D8               	btfss	status,0,c
  3983  0016F0  D004               	goto	l3485
  3984  0016F2  5011               	movf	___lwmod@divisor,w,c
  3985  0016F4  5E0F               	subwf	___lwmod@dividend,f,c
  3986  0016F6  5012               	movf	___lwmod@divisor+1,w,c
  3987  0016F8  5A10               	subwfb	___lwmod@dividend+1,f,c
  3988  0016FA                     l3485:
  3989  0016FA  90D8               	bcf	status,0,c
  3990  0016FC  3212               	rrcf	___lwmod@divisor+1,f,c
  3991  0016FE  3211               	rrcf	___lwmod@divisor,f,c
  3992  001700  2E13               	decfsz	___lwmod@counter,f,c
  3993  001702  D7F1               	goto	l3481
  3994  001704                     l1166:
  3995  001704  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  3996  001708  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  3997  00170C  0012               	return		;funcret
  3998  00170E                     __end_of___lwmod:
  3999                           	opt stack 0
  4000                           tblptru	equ	0xFF8
  4001                           tblptrh	equ	0xFF7
  4002                           tblptrl	equ	0xFF6
  4003                           tablat	equ	0xFF5
  4004                           prodh	equ	0xFF4
  4005                           prodl	equ	0xFF3
  4006                           intcon	equ	0xFF2
  4007                           intcon2	equ	0xFF1
  4008                           postinc0	equ	0xFEE
  4009                           wreg	equ	0xFE8
  4010                           indf1	equ	0xFE7
  4011                           postdec1	equ	0xFE5
  4012                           plusw1	equ	0xFE3
  4013                           fsr1h	equ	0xFE2
  4014                           fsr1l	equ	0xFE1
  4015                           indf2	equ	0xFDF
  4016                           plusw2	equ	0xFDB
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function ___lwdiv *****************
  4022 ;; Defined at:
  4023 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  dividend        2   14[COMRAM] unsigned int 
  4026 ;;  divisor         2   16[COMRAM] unsigned int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  quotient        2   18[COMRAM] unsigned int 
  4029 ;;  counter         1   20[COMRAM] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  2   14[COMRAM] unsigned int 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4039 ;;      Params:         4       0       0       0       0       0       0
  4040 ;;      Locals:         3       0       0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0
  4042 ;;      Totals:         7       0       0       0       0       0       0
  4043 ;;Total ram usage:        7 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    1
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_save_speed
  4050 ;;		_display_speed
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text22
  4055  001596                     __ptext22:
  4056                           	opt stack 0
  4057  001596                     ___lwdiv:
  4058                           	opt stack 28
  4059                           
  4060                           ;incstack = 0
  4061  001596  0E00               	movlw	0
  4062  001598  6E14               	movwf	___lwdiv@quotient+1,c
  4063  00159A  0E00               	movlw	0
  4064  00159C  6E13               	movwf	___lwdiv@quotient,c
  4065  00159E  5011               	movf	___lwdiv@divisor,w,c
  4066  0015A0  1012               	iorwf	___lwdiv@divisor+1,w,c
  4067  0015A2  B4D8               	btfsc	status,2,c
  4068  0015A4  D01C               	goto	l1156
  4069  0015A6  0E01               	movlw	1
  4070  0015A8  6E15               	movwf	___lwdiv@counter,c
  4071  0015AA  D004               	goto	l3459
  4072  0015AC                     l3457:
  4073  0015AC  90D8               	bcf	status,0,c
  4074  0015AE  3611               	rlcf	___lwdiv@divisor,f,c
  4075  0015B0  3612               	rlcf	___lwdiv@divisor+1,f,c
  4076  0015B2  2A15               	incf	___lwdiv@counter,f,c
  4077  0015B4                     l3459:
  4078  0015B4  AE12               	btfss	___lwdiv@divisor+1,7,c
  4079  0015B6  D7FA               	goto	l3457
  4080  0015B8                     l3461:
  4081  0015B8  90D8               	bcf	status,0,c
  4082  0015BA  3613               	rlcf	___lwdiv@quotient,f,c
  4083  0015BC  3614               	rlcf	___lwdiv@quotient+1,f,c
  4084  0015BE  5011               	movf	___lwdiv@divisor,w,c
  4085  0015C0  5C0F               	subwf	___lwdiv@dividend,w,c
  4086  0015C2  5012               	movf	___lwdiv@divisor+1,w,c
  4087  0015C4  5810               	subwfb	___lwdiv@dividend+1,w,c
  4088  0015C6  A0D8               	btfss	status,0,c
  4089  0015C8  D005               	goto	l3469
  4090  0015CA  5011               	movf	___lwdiv@divisor,w,c
  4091  0015CC  5E0F               	subwf	___lwdiv@dividend,f,c
  4092  0015CE  5012               	movf	___lwdiv@divisor+1,w,c
  4093  0015D0  5A10               	subwfb	___lwdiv@dividend+1,f,c
  4094  0015D2  8013               	bsf	___lwdiv@quotient,0,c
  4095  0015D4                     l3469:
  4096  0015D4  90D8               	bcf	status,0,c
  4097  0015D6  3212               	rrcf	___lwdiv@divisor+1,f,c
  4098  0015D8  3211               	rrcf	___lwdiv@divisor,f,c
  4099  0015DA  2E15               	decfsz	___lwdiv@counter,f,c
  4100  0015DC  D7ED               	goto	l3461
  4101  0015DE                     l1156:
  4102  0015DE  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  4103  0015E2  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4104  0015E6  0012               	return		;funcret
  4105  0015E8                     __end_of___lwdiv:
  4106                           	opt stack 0
  4107                           tblptru	equ	0xFF8
  4108                           tblptrh	equ	0xFF7
  4109                           tblptrl	equ	0xFF6
  4110                           tablat	equ	0xFF5
  4111                           prodh	equ	0xFF4
  4112                           prodl	equ	0xFF3
  4113                           intcon	equ	0xFF2
  4114                           intcon2	equ	0xFF1
  4115                           postinc0	equ	0xFEE
  4116                           wreg	equ	0xFE8
  4117                           indf1	equ	0xFE7
  4118                           postdec1	equ	0xFE5
  4119                           plusw1	equ	0xFE3
  4120                           fsr1h	equ	0xFE2
  4121                           fsr1l	equ	0xFE1
  4122                           indf2	equ	0xFDF
  4123                           plusw2	equ	0xFDB
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _display_menu *****************
  4129 ;; Defined at:
  4130 ;;		line 6 in file "display_menu.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  menu_list      10    2[BANK0 ] PTR unsigned char [5]
  4135 ;;		 -> STR_13(6), STR_12(9), STR_11(9), STR_10(16), 
  4136 ;;		 -> STR_9(9), 
  4137 ;;  count           2   16[BANK0 ] unsigned short 
  4138 ;;  temp            2   13[BANK0 ] unsigned short 
  4139 ;;  star            2    0[BANK0 ] unsigned short 
  4140 ;;  key             1   15[BANK0 ] unsigned char 
  4141 ;;  key1            1   12[BANK0 ] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2   90[None  ] int 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         0       0       0       0       0       0       0
  4152 ;;      Locals:         0      18       0       0       0       0       0
  4153 ;;      Temps:          2       0       0       0       0       0       0
  4154 ;;      Totals:         2      18       0       0       0       0       0
  4155 ;;Total ram usage:       20 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    5
  4158 ;; This function calls:
  4159 ;;		_clcd_print
  4160 ;;		_clcd_putch
  4161 ;;		_clcd_write
  4162 ;;		_clear_log
  4163 ;;		_download_log
  4164 ;;		_password_change
  4165 ;;		_read_switches
  4166 ;;		_set_time
  4167 ;;		_view_log
  4168 ;; This function is called by:
  4169 ;;		_main
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text23
  4174  000AA6                     __ptext23:
  4175                           	opt stack 0
  4176  000AA6                     _display_menu:
  4177                           	opt stack 25
  4178                           
  4179                           ;display_menu.c: 8: clcd_write(0x01, 0);
  4180                           
  4181                           ;incstack = 0
  4182  000AA6  0E00               	movlw	0
  4183  000AA8  6E0F               	movwf	clcd_write@control_bit,c
  4184  000AAA  0E01               	movlw	1
  4185  000AAC  EC0D  F00C         	call	_clcd_write
  4186                           
  4187                           ;display_menu.c: 9: clcd_print("MENU", (0x80 + (1)));
  4188  000AB0  0ECB               	movlw	low STR_8
  4189  000AB2  6E11               	movwf	clcd_print@data,c
  4190  000AB4  0E2F               	movlw	high STR_8
  4191  000AB6  6E12               	movwf	clcd_print@data+1,c
  4192  000AB8  0E81               	movlw	129
  4193  000ABA  6E13               	movwf	clcd_print@addr,c
  4194  000ABC  EC43  F00A         	call	_clcd_print	;wreg free
  4195                           
  4196                           ;display_menu.c: 11: char *menu_list[] = {"View Log", "Change Password", "Set Time", "Do
      +                          wnload", "Clear"};
  4197  000AC0  EE20  F0B3         	lfsr	2,display_menu@F16059
  4198  000AC4  EE10  F0A3         	lfsr	1,display_menu@menu_list
  4199  000AC8  0E09               	movlw	9
  4200  000ACA                     u4441:
  4201  000ACA  CFDB FFE3          	movff	plusw2,plusw1
  4202  000ACE  06E8               	decf	wreg,f,c
  4203  000AD0  E2FC               	bc	u4441
  4204                           
  4205                           ;display_menu.c: 13: unsigned char key, key1;
  4206                           ;display_menu.c: 14: unsigned short count = 0, star = 0, temp = 0;
  4207  000AD2  0E00               	movlw	0
  4208  000AD4  0100               	movlb	0	; () banked
  4209  000AD6  6FB2               	movwf	(display_menu@count+1)& (0+255),b
  4210  000AD8  0E00               	movlw	0
  4211  000ADA  6FB1               	movwf	display_menu@count& (0+255),b
  4212                           
  4213                           ; BSR set to: 0
  4214  000ADC  0E00               	movlw	0
  4215  000ADE  0100               	movlb	0	; () banked
  4216  000AE0  6FA2               	movwf	(display_menu@star+1)& (0+255),b
  4217  000AE2  0E00               	movlw	0
  4218  000AE4  6FA1               	movwf	display_menu@star& (0+255),b
  4219                           
  4220                           ; BSR set to: 0
  4221  000AE6  0E00               	movlw	0
  4222  000AE8  0100               	movlb	0	; () banked
  4223  000AEA  6FAF               	movwf	(display_menu@temp+1)& (0+255),b
  4224  000AEC  0E00               	movlw	0
  4225  000AEE  6FAE               	movwf	display_menu@temp& (0+255),b
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;display_menu.c: 15: clcd_print(menu_list[count], (0xC0 + (2)));
  4229  000AF0  90D8               	bcf	status,0,c
  4230  000AF2  0100               	movlb	0	; () banked
  4231  000AF4  35B1               	rlcf	display_menu@count& (0+255),w,b
  4232  000AF6  6ED9               	movwf	fsr2l,c
  4233  000AF8  0100               	movlb	0	; () banked
  4234  000AFA  35B2               	rlcf	(display_menu@count+1)& (0+255),w,b
  4235  000AFC  6EDA               	movwf	fsr2h,c
  4236  000AFE  0EA3               	movlw	low display_menu@menu_list
  4237  000B00  26D9               	addwf	fsr2l,f,c
  4238  000B02  0E00               	movlw	high display_menu@menu_list
  4239  000B04  22DA               	addwfc	fsr2h,f,c
  4240  000B06  CFDE F011          	movff	postinc2,clcd_print@data
  4241  000B0A  CFDD F012          	movff	postdec2,clcd_print@data+1
  4242  000B0E  0EC2               	movlw	194
  4243  000B10  6E13               	movwf	clcd_print@addr,c
  4244  000B12  EC43  F00A         	call	_clcd_print	;wreg free
  4245                           
  4246                           ;display_menu.c: 16: clcd_putch('*', (0xC0 + (0)));
  4247  000B16  0EC0               	movlw	192
  4248  000B18  6E11               	movwf	clcd_putch@addr,c
  4249  000B1A  0E2A               	movlw	42
  4250  000B1C  EC74  F00C         	call	_clcd_putch
  4251  000B20                     l4967:
  4252                           
  4253                           ;display_menu.c: 19: {
  4254                           ;display_menu.c: 20: key = read_switches(1);
  4255  000B20  0E01               	movlw	1
  4256  000B22  EC87  F00B         	call	_read_switches
  4257  000B26  0100               	movlb	0	; () banked
  4258  000B28  6FB0               	movwf	display_menu@key& (0+255),b
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;display_menu.c: 21: key1 = read_switches(0);
  4262  000B2A  0E00               	movlw	0
  4263  000B2C  EC87  F00B         	call	_read_switches
  4264  000B30  0100               	movlb	0	; () banked
  4265  000B32  6FAD               	movwf	display_menu@key1& (0+255),b
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;display_menu.c: 23: if (key1 == 10)
  4269  000B34  0E0A               	movlw	10
  4270  000B36  0100               	movlb	0	; () banked
  4271  000B38  19AD               	xorwf	display_menu@key1& (0+255),w,b
  4272  000B3A  A4D8               	btfss	status,2,c
  4273  000B3C  D047               	goto	l4997
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;display_menu.c: 24: {
  4277                           ;display_menu.c: 25: if (temp++ >= 100)
  4278  000B3E  0100               	movlb	0	; () banked
  4279  000B40  51AE               	movf	display_menu@temp& (0+255),w,b
  4280  000B42  6E2A               	movwf	??_display_menu& (0+255),c
  4281  000B44  0100               	movlb	0	; () banked
  4282  000B46  51AF               	movf	(display_menu@temp+1)& (0+255),w,b
  4283  000B48  6E2B               	movwf	(??_display_menu+1)& (0+255),c
  4284  000B4A  0100               	movlb	0	; () banked
  4285  000B4C  4BAE               	infsnz	display_menu@temp& (0+255),f,b
  4286  000B4E  2BAF               	incf	(display_menu@temp+1)& (0+255),f,b
  4287  000B50  502B               	movf	??_display_menu+1,w,c
  4288  000B52  E104               	bnz	u4460
  4289  000B54  0E64               	movlw	100
  4290  000B56  5C2A               	subwf	??_display_menu,w,c
  4291  000B58  A0D8               	btfss	status,0,c
  4292  000B5A  D038               	goto	l4997
  4293  000B5C                     u4460:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;display_menu.c: 26: {
  4297                           ;display_menu.c: 27: temp = 0;
  4298  000B5C  0E00               	movlw	0
  4299  000B5E  0100               	movlb	0	; () banked
  4300  000B60  6FAF               	movwf	(display_menu@temp+1)& (0+255),b
  4301  000B62  0E00               	movlw	0
  4302  000B64  6FAE               	movwf	display_menu@temp& (0+255),b
  4303                           
  4304                           ;display_menu.c: 28: switch (count)
  4305  000B66  D014               	goto	l4991
  4306  000B68                     l4977:
  4307                           
  4308                           ;display_menu.c: 31: clcd_write(0x01, 0);
  4309  000B68  0E00               	movlw	0
  4310  000B6A  6E0F               	movwf	clcd_write@control_bit,c
  4311  000B6C  0E01               	movlw	1
  4312  000B6E  EC0D  F00C         	call	_clcd_write
  4313                           
  4314                           ;display_menu.c: 32: view_log();
  4315  000B72  EC58  F006         	call	_view_log	;wreg free
  4316                           
  4317                           ;display_menu.c: 34: break;
  4318  000B76  D024               	goto	l4993
  4319  000B78                     l4981:
  4320                           
  4321                           ;display_menu.c: 36: password_change();
  4322  000B78  EC30  F004         	call	_password_change	;wreg free
  4323                           
  4324                           ;display_menu.c: 37: break;
  4325  000B7C  D021               	goto	l4993
  4326  000B7E                     l4983:
  4327                           
  4328                           ;display_menu.c: 40: set_time();
  4329  000B7E  EC0D  F000         	call	_set_time	;wreg free
  4330                           
  4331                           ;display_menu.c: 41: break;
  4332  000B82  D01E               	goto	l4993
  4333  000B84                     l4985:
  4334                           
  4335                           ;display_menu.c: 43: download_log();
  4336  000B84  EC34  F008         	call	_download_log	;wreg free
  4337                           
  4338                           ;display_menu.c: 44: break;
  4339  000B88  D01B               	goto	l4993
  4340  000B8A                     l4987:
  4341                           
  4342                           ;display_menu.c: 46: clear_log();
  4343  000B8A  ECE2  F00B         	call	_clear_log	;wreg free
  4344                           
  4345                           ;display_menu.c: 49: }
  4346                           
  4347                           ;display_menu.c: 47: break;
  4348  000B8E  D018               	goto	l4993
  4349  000B90                     l4991:
  4350  000B90  C0B1  F02A         	movff	display_menu@count,??_display_menu
  4351  000B94  C0B2  F02B         	movff	display_menu@count+1,??_display_menu+1
  4352                           
  4353                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4354                           ; Switch size 1, requested type "space"
  4355                           ; Number of cases is 1, Range of values is 0 to 0
  4356                           ; switch strategies available:
  4357                           ; Name         Instructions Cycles
  4358                           ; simple_byte            4     3 (average)
  4359                           ;	Chosen strategy is simple_byte
  4360  000B98  502B               	movf	??_display_menu+1,w,c
  4361  000B9A  0A00               	xorlw	0	; case 0
  4362  000B9C  A4D8               	btfss	status,2,c
  4363  000B9E  D010               	goto	l4993
  4364                           
  4365                           ; Switch size 1, requested type "space"
  4366                           ; Number of cases is 5, Range of values is 0 to 4
  4367                           ; switch strategies available:
  4368                           ; Name         Instructions Cycles
  4369                           ; simple_byte           16     9 (average)
  4370                           ;	Chosen strategy is simple_byte
  4371  000BA0  502A               	movf	??_display_menu,w,c
  4372  000BA2  0A00               	xorlw	0	; case 0
  4373  000BA4  B4D8               	btfsc	status,2,c
  4374  000BA6  D7E0               	goto	l4977
  4375  000BA8  0A01               	xorlw	1	; case 1
  4376  000BAA  B4D8               	btfsc	status,2,c
  4377  000BAC  D7E5               	goto	l4981
  4378  000BAE  0A03               	xorlw	3	; case 2
  4379  000BB0  B4D8               	btfsc	status,2,c
  4380  000BB2  D7E5               	goto	l4983
  4381  000BB4  0A01               	xorlw	1	; case 3
  4382  000BB6  B4D8               	btfsc	status,2,c
  4383  000BB8  D7E5               	goto	l4985
  4384  000BBA  0A07               	xorlw	7	; case 4
  4385  000BBC  B4D8               	btfsc	status,2,c
  4386  000BBE  D7E5               	goto	l4987
  4387  000BC0                     l4993:
  4388                           
  4389                           ;display_menu.c: 50: clcd_write(0x01, 0);
  4390  000BC0  0E00               	movlw	0
  4391  000BC2  6E0F               	movwf	clcd_write@control_bit,c
  4392  000BC4  0E01               	movlw	1
  4393  000BC6  EC0D  F00C         	call	_clcd_write
  4394                           
  4395                           ;display_menu.c: 52: return 1;
  4396                           ;	Return value of _display_menu is never used
  4397  000BCA  0012               	return	
  4398  000BCC                     l4997:
  4399                           
  4400                           ;display_menu.c: 54: }
  4401                           ;display_menu.c: 55: }
  4402                           ;display_menu.c: 57: if (key == 11 || key == 12)
  4403  000BCC  0E0B               	movlw	11
  4404  000BCE  0100               	movlb	0	; () banked
  4405  000BD0  19B0               	xorwf	display_menu@key& (0+255),w,b
  4406  000BD2  B4D8               	btfsc	status,2,c
  4407  000BD4  D005               	goto	l5001
  4408                           
  4409                           ; BSR set to: 0
  4410  000BD6  0E0C               	movlw	12
  4411  000BD8  0100               	movlb	0	; () banked
  4412  000BDA  19B0               	xorwf	display_menu@key& (0+255),w,b
  4413  000BDC  A4D8               	btfss	status,2,c
  4414  000BDE  D7A0               	goto	l4967
  4415  000BE0                     l5001:
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;display_menu.c: 58: {
  4419                           ;display_menu.c: 59: clcd_write(0x01, 0);
  4420  000BE0  0E00               	movlw	0
  4421  000BE2  6E0F               	movwf	clcd_write@control_bit,c
  4422  000BE4  0E01               	movlw	1
  4423  000BE6  EC0D  F00C         	call	_clcd_write
  4424                           
  4425                           ;display_menu.c: 60: temp = 0;
  4426  000BEA  0E00               	movlw	0
  4427  000BEC  0100               	movlb	0	; () banked
  4428  000BEE  6FAF               	movwf	(display_menu@temp+1)& (0+255),b
  4429  000BF0  0E00               	movlw	0
  4430  000BF2  6FAE               	movwf	display_menu@temp& (0+255),b
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;display_menu.c: 63: if (key == 11)
  4434  000BF4  0E0B               	movlw	11
  4435  000BF6  0100               	movlb	0	; () banked
  4436  000BF8  19B0               	xorwf	display_menu@key& (0+255),w,b
  4437  000BFA  A4D8               	btfss	status,2,c
  4438  000BFC  D00F               	goto	l5013
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;display_menu.c: 64: {
  4442                           ;display_menu.c: 65: count++;
  4443  000BFE  0100               	movlb	0	; () banked
  4444  000C00  4BB1               	infsnz	display_menu@count& (0+255),f,b
  4445  000C02  2BB2               	incf	(display_menu@count+1)& (0+255),f,b
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;display_menu.c: 66: if (count == 5)
  4449  000C04  0E05               	movlw	5
  4450  000C06  0100               	movlb	0	; () banked
  4451  000C08  19B1               	xorwf	display_menu@count& (0+255),w,b
  4452  000C0A  0100               	movlb	0	; () banked
  4453  000C0C  11B2               	iorwf	(display_menu@count+1)& (0+255),w,b
  4454  000C0E  A4D8               	btfss	status,2,c
  4455  000C10  D015               	goto	l5019
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;display_menu.c: 67: {
  4459                           ;display_menu.c: 68: count = 4;
  4460  000C12  0E00               	movlw	0
  4461  000C14  0100               	movlb	0	; () banked
  4462  000C16  6FB2               	movwf	(display_menu@count+1)& (0+255),b
  4463  000C18  0E04               	movlw	4
  4464  000C1A  D00F               	goto	L4
  4465  000C1C                     l5013:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;display_menu.c: 72: else
  4469                           ;display_menu.c: 73: {
  4470                           ;display_menu.c: 74: count--;
  4471  000C1C  0100               	movlb	0	; () banked
  4472  000C1E  07B1               	decf	display_menu@count& (0+255),f,b
  4473  000C20  A0D8               	btfss	status,0,c
  4474  000C22  07B2               	decf	(display_menu@count+1)& (0+255),f,b
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;display_menu.c: 75: if (count == -1)
  4478  000C24  0100               	movlb	0	; () banked
  4479  000C26  29B1               	incf	display_menu@count& (0+255),w,b
  4480  000C28  E109               	bnz	l5019
  4481  000C2A  0100               	movlb	0	; () banked
  4482  000C2C  29B2               	incf	(display_menu@count+1)& (0+255),w,b
  4483  000C2E  A4D8               	btfss	status,2,c
  4484  000C30  D005               	goto	l5019
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;display_menu.c: 76: count = 0;
  4488  000C32  0E00               	movlw	0
  4489  000C34  0100               	movlb	0	; () banked
  4490  000C36  6FB2               	movwf	(display_menu@count+1)& (0+255),b
  4491  000C38  0E00               	movlw	0
  4492  000C3A                     L4:
  4493  000C3A  6FB1               	movwf	display_menu@count& (0+255),b
  4494  000C3C                     l5019:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;display_menu.c: 78: }
  4498                           ;display_menu.c: 81: clcd_print(menu_list[count], (0x80 + (2)));
  4499  000C3C  90D8               	bcf	status,0,c
  4500  000C3E  0100               	movlb	0	; () banked
  4501  000C40  35B1               	rlcf	display_menu@count& (0+255),w,b
  4502  000C42  6ED9               	movwf	fsr2l,c
  4503  000C44  0100               	movlb	0	; () banked
  4504  000C46  35B2               	rlcf	(display_menu@count+1)& (0+255),w,b
  4505  000C48  6EDA               	movwf	fsr2h,c
  4506  000C4A  0EA3               	movlw	low display_menu@menu_list
  4507  000C4C  26D9               	addwf	fsr2l,f,c
  4508  000C4E  0E00               	movlw	high display_menu@menu_list
  4509  000C50  22DA               	addwfc	fsr2h,f,c
  4510  000C52  CFDE F011          	movff	postinc2,clcd_print@data
  4511  000C56  CFDD F012          	movff	postdec2,clcd_print@data+1
  4512  000C5A  0E82               	movlw	130
  4513  000C5C  6E13               	movwf	clcd_print@addr,c
  4514  000C5E  EC43  F00A         	call	_clcd_print	;wreg free
  4515                           
  4516                           ;display_menu.c: 82: if (count < 4)
  4517  000C62  0100               	movlb	0	; () banked
  4518  000C64  51B2               	movf	(display_menu@count+1)& (0+255),w,b
  4519  000C66  E11E               	bnz	l5025
  4520  000C68  0E04               	movlw	4
  4521  000C6A  0100               	movlb	0	; () banked
  4522  000C6C  5DB1               	subwf	display_menu@count& (0+255),w,b
  4523  000C6E  B0D8               	btfsc	status,0,c
  4524  000C70  D019               	goto	l5025
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;display_menu.c: 83: clcd_print(menu_list[count + 1], (0xC0 + (2)));
  4528  000C72  C0B1  F02A         	movff	display_menu@count,??_display_menu
  4529  000C76  C0B2  F02B         	movff	display_menu@count+1,??_display_menu+1
  4530  000C7A  90D8               	bcf	status,0,c
  4531  000C7C  362A               	rlcf	??_display_menu,f,c
  4532  000C7E  362B               	rlcf	??_display_menu+1,f,c
  4533  000C80  0E02               	movlw	2
  4534  000C82  262A               	addwf	??_display_menu,f,c
  4535  000C84  0E00               	movlw	0
  4536  000C86  222B               	addwfc	??_display_menu+1,f,c
  4537  000C88  0EA3               	movlw	low display_menu@menu_list
  4538  000C8A  242A               	addwf	??_display_menu,w,c
  4539  000C8C  6ED9               	movwf	fsr2l,c
  4540  000C8E  0E00               	movlw	high display_menu@menu_list
  4541  000C90  202B               	addwfc	??_display_menu+1,w,c
  4542  000C92  6EDA               	movwf	fsr2h,c
  4543  000C94  CFDE F011          	movff	postinc2,clcd_print@data
  4544  000C98  CFDD F012          	movff	postdec2,clcd_print@data+1
  4545  000C9C  0EC2               	movlw	194
  4546  000C9E  6E13               	movwf	clcd_print@addr,c
  4547  000CA0  EC43  F00A         	call	_clcd_print	;wreg free
  4548  000CA4                     l5025:
  4549                           
  4550                           ;display_menu.c: 87: {
  4551                           ;display_menu.c: 88: clcd_putch('*', (0x80 + (0)));
  4552  000CA4  0E80               	movlw	128
  4553  000CA6  6E11               	movwf	clcd_putch@addr,c
  4554  000CA8  0E2A               	movlw	42
  4555  000CAA  EC74  F00C         	call	_clcd_putch
  4556  000CAE  D738               	goto	l4967
  4557  000CB0                     __end_of_display_menu:
  4558                           	opt stack 0
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           intcon	equ	0xFF2
  4566                           intcon2	equ	0xFF1
  4567                           postinc0	equ	0xFEE
  4568                           wreg	equ	0xFE8
  4569                           indf1	equ	0xFE7
  4570                           postdec1	equ	0xFE5
  4571                           plusw1	equ	0xFE3
  4572                           fsr1h	equ	0xFE2
  4573                           fsr1l	equ	0xFE1
  4574                           indf2	equ	0xFDF
  4575                           postinc2	equ	0xFDE
  4576                           postdec2	equ	0xFDD
  4577                           plusw2	equ	0xFDB
  4578                           fsr2h	equ	0xFDA
  4579                           fsr2l	equ	0xFD9
  4580                           status	equ	0xFD8
  4581                           
  4582 ;; *************** function _view_log *****************
  4583 ;; Defined at:
  4584 ;;		line 105 in file "password_time_change.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  add             2   27[COMRAM] short 
  4589 ;;  inc_dec         2   24[COMRAM] short 
  4590 ;;  count           2   22[COMRAM] short 
  4591 ;;  key             1   26[COMRAM] unsigned char 
  4592 ;;  key1            1   21[COMRAM] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4602 ;;      Params:         0       0       0       0       0       0       0
  4603 ;;      Locals:         8       0       0       0       0       0       0
  4604 ;;      Temps:          2       0       0       0       0       0       0
  4605 ;;      Totals:        10       0       0       0       0       0       0
  4606 ;;Total ram usage:       10 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    3
  4609 ;; This function calls:
  4610 ;;		_clcd_print
  4611 ;;		_clcd_putch
  4612 ;;		_clcd_write
  4613 ;;		_read_internal_eeprom
  4614 ;;		_read_switches
  4615 ;; This function is called by:
  4616 ;;		_display_menu
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text24
  4621  000CB0                     __ptext24:
  4622                           	opt stack 0
  4623  000CB0                     _view_log:
  4624                           	opt stack 26
  4625                           
  4626                           ;password_time_change.c: 107: unsigned char key, key1;
  4627                           ;password_time_change.c: 108: int short add = 0x05, inc_dec = 0, count = 0;
  4628                           
  4629                           ;incstack = 0
  4630  000CB0  0E00               	movlw	0
  4631  000CB2  6E1D               	movwf	view_log@add+1,c
  4632  000CB4  0E05               	movlw	5
  4633  000CB6  6E1C               	movwf	view_log@add,c
  4634  000CB8  0E00               	movlw	0
  4635  000CBA  6E1A               	movwf	view_log@inc_dec+1,c
  4636  000CBC  0E00               	movlw	0
  4637  000CBE  6E19               	movwf	view_log@inc_dec,c
  4638  000CC0  0E00               	movlw	0
  4639  000CC2  6E18               	movwf	view_log@count+1,c
  4640  000CC4  0E00               	movlw	0
  4641  000CC6  6E17               	movwf	view_log@count,c
  4642                           
  4643                           ;password_time_change.c: 110: clcd_print("TIME  EVT  SPD", (0x80 + (3)));
  4644  000CC8  0E85               	movlw	low STR_23
  4645  000CCA  6E11               	movwf	clcd_print@data,c
  4646  000CCC  0E2F               	movlw	high STR_23
  4647  000CCE  6E12               	movwf	clcd_print@data+1,c
  4648  000CD0  0E83               	movlw	131
  4649  000CD2  6E13               	movwf	clcd_print@addr,c
  4650  000CD4  EC43  F00A         	call	_clcd_print	;wreg free
  4651  000CD8                     l4433:
  4652                           
  4653                           ;password_time_change.c: 114: {
  4654                           ;password_time_change.c: 115: key = read_switches(1);
  4655  000CD8  0E01               	movlw	1
  4656  000CDA  EC87  F00B         	call	_read_switches
  4657  000CDE  6E1B               	movwf	view_log@key,c
  4658                           
  4659                           ;password_time_change.c: 116: key1 = read_switches(0);
  4660  000CE0  0E00               	movlw	0
  4661  000CE2  EC87  F00B         	call	_read_switches
  4662  000CE6  6E16               	movwf	view_log@key1,c
  4663                           
  4664                           ;password_time_change.c: 118: if (key1 == 7)
  4665  000CE8  0E07               	movlw	7
  4666  000CEA  1816               	xorwf	view_log@key1,w,c
  4667  000CEC  A4D8               	btfss	status,2,c
  4668  000CEE  D014               	goto	l4445
  4669                           
  4670                           ;password_time_change.c: 119: {
  4671                           ;password_time_change.c: 120: if (count++ >= 1000)
  4672  000CF0  5017               	movf	view_log@count,w,c
  4673  000CF2  6E14               	movwf	??_view_log& (0+255),c
  4674  000CF4  5018               	movf	view_log@count+1,w,c
  4675  000CF6  6E15               	movwf	(??_view_log+1)& (0+255),c
  4676  000CF8  4A17               	infsnz	view_log@count,f,c
  4677  000CFA  2A18               	incf	view_log@count+1,f,c
  4678  000CFC  BE15               	btfsc	??_view_log+1,7,c
  4679  000CFE  D00C               	goto	l4445
  4680  000D00  0EE8               	movlw	232
  4681  000D02  5C14               	subwf	??_view_log,w,c
  4682  000D04  0E03               	movlw	3
  4683  000D06  5815               	subwfb	??_view_log+1,w,c
  4684  000D08  A0D8               	btfss	status,0,c
  4685  000D0A  D006               	goto	l4445
  4686                           
  4687                           ;password_time_change.c: 121: {
  4688                           ;password_time_change.c: 122: clcd_write(0x01, 0);
  4689  000D0C  0E00               	movlw	0
  4690  000D0E  6E0F               	movwf	clcd_write@control_bit,c
  4691  000D10  0E01               	movlw	1
  4692  000D12  EC0D  F00C         	call	_clcd_write
  4693                           
  4694                           ;password_time_change.c: 123: return;
  4695  000D16  0012               	return	
  4696  000D18                     l4445:
  4697                           
  4698                           ;password_time_change.c: 124: }
  4699                           ;password_time_change.c: 126: }
  4700                           ;password_time_change.c: 128: if (key == 11 || key == 12)
  4701  000D18  0E0B               	movlw	11
  4702  000D1A  181B               	xorwf	view_log@key,w,c
  4703  000D1C  B4D8               	btfsc	status,2,c
  4704  000D1E  D004               	goto	l4449
  4705  000D20  0E0C               	movlw	12
  4706  000D22  181B               	xorwf	view_log@key,w,c
  4707  000D24  A4D8               	btfss	status,2,c
  4708  000D26  D7D8               	goto	l4433
  4709  000D28                     l4449:
  4710                           
  4711                           ;password_time_change.c: 129: {
  4712                           ;password_time_change.c: 130: if (key == 11)
  4713  000D28  0E0B               	movlw	11
  4714  000D2A  181B               	xorwf	view_log@key,w,c
  4715  000D2C  A4D8               	btfss	status,2,c
  4716  000D2E  D014               	goto	l4457
  4717                           
  4718                           ;password_time_change.c: 131: {
  4719                           ;password_time_change.c: 132: if((add + 0x10) != 0xA5)
  4720  000D30  0E10               	movlw	16
  4721  000D32  241C               	addwf	view_log@add,w,c
  4722  000D34  6E14               	movwf	??_view_log& (0+255),c
  4723  000D36  0E00               	movlw	0
  4724  000D38  201D               	addwfc	view_log@add+1,w,c
  4725  000D3A  6E15               	movwf	(??_view_log+1)& (0+255),c
  4726  000D3C  0EA5               	movlw	165
  4727  000D3E  1814               	xorwf	??_view_log,w,c
  4728  000D40  1015               	iorwf	??_view_log+1,w,c
  4729  000D42  B4D8               	btfsc	status,2,c
  4730  000D44  D01C               	goto	l4465
  4731                           
  4732                           ;password_time_change.c: 133: {
  4733                           ;password_time_change.c: 134: add = add + 0x10;
  4734  000D46  0E10               	movlw	16
  4735  000D48  241C               	addwf	view_log@add,w,c
  4736  000D4A  6E1C               	movwf	view_log@add,c
  4737  000D4C  0E00               	movlw	0
  4738  000D4E  201D               	addwfc	view_log@add+1,w,c
  4739  000D50  6E1D               	movwf	view_log@add+1,c
  4740                           
  4741                           ;password_time_change.c: 135: inc_dec++;
  4742  000D52  4A19               	infsnz	view_log@inc_dec,f,c
  4743  000D54  2A1A               	incf	view_log@inc_dec+1,f,c
  4744                           
  4745                           ;password_time_change.c: 136: }
  4746                           ;password_time_change.c: 137: }
  4747  000D56  D013               	goto	l4465
  4748  000D58                     l4457:
  4749                           
  4750                           ;password_time_change.c: 138: else
  4751                           ;password_time_change.c: 139: {
  4752                           ;password_time_change.c: 140: if((add) != 0x05)
  4753  000D58  0E05               	movlw	5
  4754  000D5A  181C               	xorwf	view_log@add,w,c
  4755  000D5C  101D               	iorwf	view_log@add+1,w,c
  4756  000D5E  B4D8               	btfsc	status,2,c
  4757  000D60  D009               	goto	l4463
  4758                           
  4759                           ;password_time_change.c: 141: {
  4760                           ;password_time_change.c: 142: add = add - 0x10;
  4761  000D62  0EF0               	movlw	240
  4762  000D64  241C               	addwf	view_log@add,w,c
  4763  000D66  6E1C               	movwf	view_log@add,c
  4764  000D68  0EFF               	movlw	255
  4765  000D6A  201D               	addwfc	view_log@add+1,w,c
  4766  000D6C  6E1D               	movwf	view_log@add+1,c
  4767                           
  4768                           ;password_time_change.c: 143: inc_dec--;
  4769  000D6E  0619               	decf	view_log@inc_dec,f,c
  4770  000D70  A0D8               	btfss	status,0,c
  4771  000D72  061A               	decf	view_log@inc_dec+1,f,c
  4772  000D74                     l4463:
  4773                           
  4774                           ;password_time_change.c: 144: }
  4775                           ;password_time_change.c: 145: clcd_write(0x01, 0);
  4776  000D74  0E00               	movlw	0
  4777  000D76  6E0F               	movwf	clcd_write@control_bit,c
  4778  000D78  0E01               	movlw	1
  4779  000D7A  EC0D  F00C         	call	_clcd_write
  4780  000D7E                     l4465:
  4781                           
  4782                           ;password_time_change.c: 147: }
  4783                           ;password_time_change.c: 148: count = 0;
  4784  000D7E  0E00               	movlw	0
  4785  000D80  6E18               	movwf	view_log@count+1,c
  4786  000D82  0E00               	movlw	0
  4787  000D84  6E17               	movwf	view_log@count,c
  4788                           
  4789                           ;password_time_change.c: 149: save_array[0] = read_internal_eeprom(add);
  4790  000D86  501C               	movf	view_log@add,w,c
  4791  000D88  EC9D  F00C         	call	_read_internal_eeprom
  4792  000D8C  0100               	movlb	0	; () banked
  4793  000D8E  6F7C               	movwf	_save_array& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;password_time_change.c: 150: save_array[1] = read_internal_eeprom(add + 1);
  4797  000D90  281C               	incf	view_log@add,w,c
  4798  000D92  EC9D  F00C         	call	_read_internal_eeprom
  4799  000D96  0100               	movlb	0	; () banked
  4800  000D98  6F7D               	movwf	(_save_array+1)& (0+255),b
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;password_time_change.c: 151: save_array[2] = read_internal_eeprom(add + 2);
  4804  000D9A  501C               	movf	view_log@add,w,c
  4805  000D9C  0F02               	addlw	2
  4806  000D9E  EC9D  F00C         	call	_read_internal_eeprom
  4807  000DA2  0100               	movlb	0	; () banked
  4808  000DA4  6F7E               	movwf	(_save_array+2)& (0+255),b
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;password_time_change.c: 152: save_array[3] = read_internal_eeprom(add + 3);
  4812  000DA6  501C               	movf	view_log@add,w,c
  4813  000DA8  0F03               	addlw	3
  4814  000DAA  EC9D  F00C         	call	_read_internal_eeprom
  4815  000DAE  0100               	movlb	0	; () banked
  4816  000DB0  6F7F               	movwf	(_save_array+3)& (0+255),b
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;password_time_change.c: 153: save_array[4] = read_internal_eeprom(add + 4);
  4820  000DB2  501C               	movf	view_log@add,w,c
  4821  000DB4  0F04               	addlw	4
  4822  000DB6  EC9D  F00C         	call	_read_internal_eeprom
  4823  000DBA  0100               	movlb	0	; () banked
  4824  000DBC  6F80               	movwf	(_save_array+4)& (0+255),b
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;password_time_change.c: 154: save_array[5] = read_internal_eeprom(add + 5);
  4828  000DBE  501C               	movf	view_log@add,w,c
  4829  000DC0  0F05               	addlw	5
  4830  000DC2  EC9D  F00C         	call	_read_internal_eeprom
  4831  000DC6  0100               	movlb	0	; () banked
  4832  000DC8  6F81               	movwf	(_save_array+5)& (0+255),b
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;password_time_change.c: 155: save_array[6] = read_internal_eeprom(add + 6);
  4836  000DCA  501C               	movf	view_log@add,w,c
  4837  000DCC  0F06               	addlw	6
  4838  000DCE  EC9D  F00C         	call	_read_internal_eeprom
  4839  000DD2  0100               	movlb	0	; () banked
  4840  000DD4  6F82               	movwf	(_save_array+6)& (0+255),b
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;password_time_change.c: 156: save_array[7] = read_internal_eeprom(add + 7);
  4844  000DD6  501C               	movf	view_log@add,w,c
  4845  000DD8  0F07               	addlw	7
  4846  000DDA  EC9D  F00C         	call	_read_internal_eeprom
  4847  000DDE  0100               	movlb	0	; () banked
  4848  000DE0  6F83               	movwf	(_save_array+7)& (0+255),b
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;password_time_change.c: 157: save_array[8] = read_internal_eeprom(add + 8);
  4852  000DE2  501C               	movf	view_log@add,w,c
  4853  000DE4  0F08               	addlw	8
  4854  000DE6  EC9D  F00C         	call	_read_internal_eeprom
  4855  000DEA  0100               	movlb	0	; () banked
  4856  000DEC  6F84               	movwf	(_save_array+8)& (0+255),b
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;password_time_change.c: 158: save_array[9] = read_internal_eeprom(add + 9);
  4860  000DEE  501C               	movf	view_log@add,w,c
  4861  000DF0  0F09               	addlw	9
  4862  000DF2  EC9D  F00C         	call	_read_internal_eeprom
  4863  000DF6  0100               	movlb	0	; () banked
  4864  000DF8  6F85               	movwf	(_save_array+9)& (0+255),b
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;password_time_change.c: 159: save_array[10] = read_internal_eeprom(add + 10);
  4868  000DFA  501C               	movf	view_log@add,w,c
  4869  000DFC  0F0A               	addlw	10
  4870  000DFE  EC9D  F00C         	call	_read_internal_eeprom
  4871  000E02  0100               	movlb	0	; () banked
  4872  000E04  6F86               	movwf	(_save_array+10)& (0+255),b
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;password_time_change.c: 160: save_array[11] = read_internal_eeprom(add + 11);
  4876  000E06  501C               	movf	view_log@add,w,c
  4877  000E08  0F0B               	addlw	11
  4878  000E0A  EC9D  F00C         	call	_read_internal_eeprom
  4879  000E0E  0100               	movlb	0	; () banked
  4880  000E10  6F87               	movwf	(_save_array+11)& (0+255),b
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;password_time_change.c: 161: save_array[12] = read_internal_eeprom(add + 12);
  4884  000E12  501C               	movf	view_log@add,w,c
  4885  000E14  0F0C               	addlw	12
  4886  000E16  EC9D  F00C         	call	_read_internal_eeprom
  4887  000E1A  0100               	movlb	0	; () banked
  4888  000E1C  6F88               	movwf	(_save_array+12)& (0+255),b
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;password_time_change.c: 162: save_array[13] = read_internal_eeprom(add + 13);
  4892  000E1E  501C               	movf	view_log@add,w,c
  4893  000E20  0F0D               	addlw	13
  4894  000E22  EC9D  F00C         	call	_read_internal_eeprom
  4895  000E26  0100               	movlb	0	; () banked
  4896  000E28  6F89               	movwf	(_save_array+13)& (0+255),b
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;password_time_change.c: 163: save_array[14] = read_internal_eeprom(add + 14);
  4900  000E2A  501C               	movf	view_log@add,w,c
  4901  000E2C  0F0E               	addlw	14
  4902  000E2E  EC9D  F00C         	call	_read_internal_eeprom
  4903  000E32  0100               	movlb	0	; () banked
  4904  000E34  6F8A               	movwf	(_save_array+14)& (0+255),b
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;password_time_change.c: 164: save_array[15] = read_internal_eeprom(add + 15);
  4908  000E36  501C               	movf	view_log@add,w,c
  4909  000E38  0F0F               	addlw	15
  4910  000E3A  EC9D  F00C         	call	_read_internal_eeprom
  4911  000E3E  0100               	movlb	0	; () banked
  4912  000E40  6F8B               	movwf	(_save_array+15)& (0+255),b
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;password_time_change.c: 166: clcd_putch('#', (0x80 + (0)));
  4916  000E42  0E80               	movlw	128
  4917  000E44  6E11               	movwf	clcd_putch@addr,c
  4918  000E46  0E23               	movlw	35
  4919  000E48  EC74  F00C         	call	_clcd_putch
  4920                           
  4921                           ;password_time_change.c: 167: clcd_putch(inc_dec + 48, (0x80 + (1)));
  4922  000E4C  0E81               	movlw	129
  4923  000E4E  6E11               	movwf	clcd_putch@addr,c
  4924  000E50  5019               	movf	view_log@inc_dec,w,c
  4925  000E52  0F30               	addlw	48
  4926  000E54  EC74  F00C         	call	_clcd_putch
  4927                           
  4928                           ;password_time_change.c: 168: clcd_print("TIME  EVT  SPD", (0x80 + (3)));
  4929  000E58  0E85               	movlw	low STR_23
  4930  000E5A  6E11               	movwf	clcd_print@data,c
  4931  000E5C  0E2F               	movlw	high STR_23
  4932  000E5E  6E12               	movwf	clcd_print@data+1,c
  4933  000E60  0E83               	movlw	131
  4934  000E62  6E13               	movwf	clcd_print@addr,c
  4935  000E64  EC43  F00A         	call	_clcd_print	;wreg free
  4936                           
  4937                           ;password_time_change.c: 170: clcd_print(save_array, (0xC0 + (0)));
  4938  000E68  0E7C               	movlw	low _save_array
  4939  000E6A  6E11               	movwf	clcd_print@data,c
  4940  000E6C  0E00               	movlw	high _save_array
  4941  000E6E  6E12               	movwf	clcd_print@data+1,c
  4942  000E70  0EC0               	movlw	192
  4943  000E72  6E13               	movwf	clcd_print@addr,c
  4944  000E74  EC43  F00A         	call	_clcd_print	;wreg free
  4945  000E78  D72F               	goto	l4433
  4946  000E7A                     __end_of_view_log:
  4947                           	opt stack 0
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           prodh	equ	0xFF4
  4953                           prodl	equ	0xFF3
  4954                           intcon	equ	0xFF2
  4955                           intcon2	equ	0xFF1
  4956                           postinc0	equ	0xFEE
  4957                           wreg	equ	0xFE8
  4958                           indf1	equ	0xFE7
  4959                           postdec1	equ	0xFE5
  4960                           plusw1	equ	0xFE3
  4961                           fsr1h	equ	0xFE2
  4962                           fsr1l	equ	0xFE1
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           plusw2	equ	0xFDB
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function _set_time *****************
  4972 ;; Defined at:
  4973 ;;		line 15 in file "set_time.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  i               4   30[COMRAM] unsigned long 
  4978 ;;  i               4   26[COMRAM] unsigned long 
  4979 ;;  i               4   22[COMRAM] unsigned long 
  4980 ;;  i               4   34[COMRAM] unsigned long 
  4981 ;;  new3           16    0        unsigned char [16]
  4982 ;;  j               2    0        int 
  4983 ;;  i               2    0        int 
  4984 ;;  count           1   40[COMRAM] unsigned char 
  4985 ;;  just            1   39[COMRAM] unsigned char 
  4986 ;;  key             1   38[COMRAM] unsigned char 
  4987 ;;  sh_flag         1   21[COMRAM] unsigned char 
  4988 ;;  t_flag          1   20[COMRAM] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4998 ;;      Params:         0       0       0       0       0       0       0
  4999 ;;      Locals:        21       0       0       0       0       0       0
  5000 ;;      Temps:          1       0       0       0       0       0       0
  5001 ;;      Totals:        22       0       0       0       0       0       0
  5002 ;;Total ram usage:       22 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    4
  5005 ;; This function calls:
  5006 ;;		_clcd_print
  5007 ;;		_clcd_write
  5008 ;;		_read_switches
  5009 ;;		_write_ds1307
  5010 ;; This function is called by:
  5011 ;;		_display_menu
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text25
  5016  00001A                     __ptext25:
  5017                           	opt stack 0
  5018  00001A                     _set_time:
  5019                           	opt stack 25
  5020                           
  5021                           ;set_time.c: 18: int i,j;
  5022                           ;set_time.c: 19: unsigned char new3[16];
  5023                           ;set_time.c: 20: char key,t_flag = 1,sh_flag = 1,count = 0;
  5024                           
  5025                           ;incstack = 0
  5026  00001A  0E01               	movlw	1
  5027  00001C  6E15               	movwf	set_time@t_flag,c
  5028  00001E  0E01               	movlw	1
  5029  000020  6E16               	movwf	set_time@sh_flag,c
  5030  000022  0E00               	movlw	0
  5031  000024  6E29               	movwf	set_time@count,c
  5032                           
  5033                           ;set_time.c: 22: clcd_write(0x01, 0);
  5034  000026  0E00               	movlw	0
  5035  000028  6E0F               	movwf	clcd_write@control_bit,c
  5036  00002A  0E01               	movlw	1
  5037  00002C  EC0D  F00C         	call	_clcd_write
  5038                           
  5039                           ;set_time.c: 24: key = read_switches(1);
  5040  000030  0E01               	movlw	1
  5041  000032  EC87  F00B         	call	_read_switches
  5042  000036  6E27               	movwf	set_time@key,c
  5043                           
  5044                           ;set_time.c: 27: while(key != 10)
  5045  000038  D135               	goto	l4731
  5046  00003A                     l4619:
  5047                           
  5048                           ;set_time.c: 28: {
  5049                           ;set_time.c: 30: clcd_print("HH:MM:SS",(0x80 + (4)));
  5050  00003A  0EA1               	movlw	low STR_30
  5051  00003C  6E11               	movwf	clcd_print@data,c
  5052  00003E  0E2F               	movlw	high STR_30
  5053  000040  6E12               	movwf	clcd_print@data+1,c
  5054  000042  0E84               	movlw	132
  5055  000044  6E13               	movwf	clcd_print@addr,c
  5056  000046  EC43  F00A         	call	_clcd_print	;wreg free
  5057                           
  5058                           ;set_time.c: 31: clcd_print(n_time,(0xC0 + (4)));
  5059  00004A  0E41               	movlw	low _n_time
  5060  00004C  6E11               	movwf	clcd_print@data,c
  5061  00004E  0E00               	movlw	high _n_time
  5062  000050  6E12               	movwf	clcd_print@data+1,c
  5063  000052  0EC4               	movlw	196
  5064  000054  6E13               	movwf	clcd_print@addr,c
  5065  000056  EC43  F00A         	call	_clcd_print	;wreg free
  5066                           
  5067                           ;set_time.c: 32: clcd_write(0xC0,0);
  5068  00005A  0E00               	movlw	0
  5069  00005C  6E0F               	movwf	clcd_write@control_bit,c
  5070  00005E  0EC0               	movlw	192
  5071  000060  EC0D  F00C         	call	_clcd_write
  5072                           
  5073                           ;set_time.c: 33: key = read_switches(1);
  5074  000064  0E01               	movlw	1
  5075  000066  EC87  F00B         	call	_read_switches
  5076  00006A  6E27               	movwf	set_time@key,c
  5077                           
  5078                           ;set_time.c: 34: sh_flag = 1;
  5079  00006C  0E01               	movlw	1
  5080  00006E  6E16               	movwf	set_time@sh_flag,c
  5081                           
  5082                           ;set_time.c: 37: if(key == 11)
  5083  000070  0E0B               	movlw	11
  5084  000072  1827               	xorwf	set_time@key,w,c
  5085  000074  A4D8               	btfss	status,2,c
  5086  000076  D070               	goto	l4691
  5087                           
  5088                           ;set_time.c: 38: {
  5089                           ;set_time.c: 40: if(count == 1)
  5090  000078  0429               	decf	set_time@count,w,c
  5091  00007A  A4D8               	btfss	status,2,c
  5092  00007C  D029               	goto	l4655
  5093                           
  5094                           ;set_time.c: 41: {
  5095                           ;set_time.c: 42: if(n_time[0] < '2' && n_time[1] < '9')
  5096  00007E  0E32               	movlw	50
  5097  000080  6041               	cpfslt	_n_time,c
  5098  000082  D004               	goto	l4637
  5099  000084  0E39               	movlw	57
  5100  000086  6042               	cpfslt	_n_time+1,c
  5101  000088  D001               	goto	l4637
  5102  00008A  D007               	goto	l4641
  5103  00008C                     l4637:
  5104                           
  5105                           ;set_time.c: 47: else if(n_time[0] == '2' && n_time[1] < '3')
  5106  00008C  0E32               	movlw	50
  5107  00008E  1841               	xorwf	_n_time,w,c
  5108  000090  A4D8               	btfss	status,2,c
  5109  000092  D005               	goto	l4643
  5110  000094  0E33               	movlw	51
  5111  000096  6042               	cpfslt	_n_time+1,c
  5112  000098  D002               	goto	l4643
  5113  00009A                     l4641:
  5114                           
  5115                           ;set_time.c: 48: {
  5116                           ;set_time.c: 49: n_time[1]++;
  5117  00009A  2A42               	incf	_n_time+1,f,c
  5118                           
  5119                           ;set_time.c: 50: }
  5120  00009C  D010               	goto	l4653
  5121  00009E                     l4643:
  5122                           
  5123                           ;set_time.c: 51: else if(n_time[0] == '2' && n_time[1] == '3')
  5124  00009E  0E32               	movlw	50
  5125  0000A0  1841               	xorwf	_n_time,w,c
  5126  0000A2  A4D8               	btfss	status,2,c
  5127  0000A4  D009               	goto	l4649
  5128  0000A6  0E33               	movlw	51
  5129  0000A8  1842               	xorwf	_n_time+1,w,c
  5130  0000AA  A4D8               	btfss	status,2,c
  5131  0000AC  D005               	goto	l4649
  5132                           
  5133                           ;set_time.c: 52: {
  5134                           ;set_time.c: 53: n_time[0] = '0';
  5135  0000AE  0E30               	movlw	48
  5136  0000B0  6E41               	movwf	_n_time,c
  5137                           
  5138                           ;set_time.c: 54: n_time[1] = '0';
  5139  0000B2  0E30               	movlw	48
  5140  0000B4  6E42               	movwf	_n_time+1,c
  5141                           
  5142                           ;set_time.c: 55: }
  5143  0000B6  D003               	goto	l4653
  5144  0000B8                     l4649:
  5145                           
  5146                           ;set_time.c: 56: else
  5147                           ;set_time.c: 57: {
  5148                           ;set_time.c: 58: n_time[1] = '0';
  5149  0000B8  0E30               	movlw	48
  5150  0000BA  6E42               	movwf	_n_time+1,c
  5151                           
  5152                           ;set_time.c: 59: n_time[0]++;
  5153  0000BC  2A41               	incf	_n_time,f,c
  5154  0000BE                     l4653:
  5155                           
  5156                           ;set_time.c: 60: }
  5157                           ;set_time.c: 62: clcd_print(n_time,(0xC0 + (4)));
  5158  0000BE  0E41               	movlw	low _n_time
  5159  0000C0  6E11               	movwf	clcd_print@data,c
  5160  0000C2  0E00               	movlw	high _n_time
  5161  0000C4  6E12               	movwf	clcd_print@data+1,c
  5162  0000C6  0EC4               	movlw	196
  5163  0000C8  6E13               	movwf	clcd_print@addr,c
  5164  0000CA  EC43  F00A         	call	_clcd_print	;wreg free
  5165                           
  5166                           ;set_time.c: 63: }
  5167  0000CE  D0EA               	goto	l4731
  5168  0000D0                     l4655:
  5169                           
  5170                           ;set_time.c: 65: else if(count == 2)
  5171  0000D0  0E02               	movlw	2
  5172  0000D2  1829               	xorwf	set_time@count,w,c
  5173  0000D4  A4D8               	btfss	status,2,c
  5174  0000D6  D01E               	goto	l4673
  5175                           
  5176                           ;set_time.c: 66: {
  5177                           ;set_time.c: 68: if(n_time[4] < '9')
  5178  0000D8  0E39               	movlw	57
  5179  0000DA  6045               	cpfslt	_n_time+4,c
  5180  0000DC  D002               	goto	l4661
  5181                           
  5182                           ;set_time.c: 69: {
  5183                           ;set_time.c: 70: n_time[4]++;
  5184  0000DE  2A45               	incf	_n_time+4,f,c
  5185                           
  5186                           ;set_time.c: 71: }
  5187  0000E0  D010               	goto	l4671
  5188  0000E2                     l4661:
  5189                           
  5190                           ;set_time.c: 73: else if(n_time[3] == '5' && n_time[4] == '9')
  5191  0000E2  0E35               	movlw	53
  5192  0000E4  1844               	xorwf	_n_time+3,w,c
  5193  0000E6  A4D8               	btfss	status,2,c
  5194  0000E8  D009               	goto	l4667
  5195  0000EA  0E39               	movlw	57
  5196  0000EC  1845               	xorwf	_n_time+4,w,c
  5197  0000EE  A4D8               	btfss	status,2,c
  5198  0000F0  D005               	goto	l4667
  5199                           
  5200                           ;set_time.c: 74: {
  5201                           ;set_time.c: 75: n_time[3] = '0';
  5202  0000F2  0E30               	movlw	48
  5203  0000F4  6E44               	movwf	_n_time+3,c
  5204                           
  5205                           ;set_time.c: 76: n_time[4] = '0';
  5206  0000F6  0E30               	movlw	48
  5207  0000F8  6E45               	movwf	_n_time+4,c
  5208                           
  5209                           ;set_time.c: 77: }
  5210  0000FA  D003               	goto	l4671
  5211  0000FC                     l4667:
  5212                           
  5213                           ;set_time.c: 78: else
  5214                           ;set_time.c: 79: {
  5215                           ;set_time.c: 80: n_time[4] = '0';
  5216  0000FC  0E30               	movlw	48
  5217  0000FE  6E45               	movwf	_n_time+4,c
  5218                           
  5219                           ;set_time.c: 81: n_time[3]++;
  5220  000100  2A44               	incf	_n_time+3,f,c
  5221  000102                     l4671:
  5222                           
  5223                           ;set_time.c: 82: }
  5224                           ;set_time.c: 84: clcd_print(n_time,(0xC0 + (4)));
  5225  000102  0E41               	movlw	low _n_time
  5226  000104  6E11               	movwf	clcd_print@data,c
  5227  000106  0E00               	movlw	high _n_time
  5228  000108  6E12               	movwf	clcd_print@data+1,c
  5229  00010A  0EC4               	movlw	196
  5230  00010C  6E13               	movwf	clcd_print@addr,c
  5231  00010E  EC43  F00A         	call	_clcd_print	;wreg free
  5232                           
  5233                           ;set_time.c: 85: }
  5234  000112  D0C8               	goto	l4731
  5235  000114                     l4673:
  5236                           
  5237                           ;set_time.c: 87: else if(count == 3)
  5238  000114  0E03               	movlw	3
  5239  000116  1829               	xorwf	set_time@count,w,c
  5240  000118  A4D8               	btfss	status,2,c
  5241  00011A  D0C4               	goto	l4731
  5242                           
  5243                           ;set_time.c: 88: {
  5244                           ;set_time.c: 89: if(n_time[7] < '9')
  5245  00011C  0E39               	movlw	57
  5246  00011E  6048               	cpfslt	_n_time+7,c
  5247  000120  D002               	goto	l4679
  5248                           
  5249                           ;set_time.c: 90: {
  5250                           ;set_time.c: 91: n_time[7]++;
  5251  000122  2A48               	incf	_n_time+7,f,c
  5252                           
  5253                           ;set_time.c: 92: }
  5254  000124  D010               	goto	l4689
  5255  000126                     l4679:
  5256                           
  5257                           ;set_time.c: 94: else if(n_time[6] == '5' && n_time[7] == '9')
  5258  000126  0E35               	movlw	53
  5259  000128  1847               	xorwf	_n_time+6,w,c
  5260  00012A  A4D8               	btfss	status,2,c
  5261  00012C  D009               	goto	l4685
  5262  00012E  0E39               	movlw	57
  5263  000130  1848               	xorwf	_n_time+7,w,c
  5264  000132  A4D8               	btfss	status,2,c
  5265  000134  D005               	goto	l4685
  5266                           
  5267                           ;set_time.c: 95: {
  5268                           ;set_time.c: 96: n_time[6] = '0';
  5269  000136  0E30               	movlw	48
  5270  000138  6E47               	movwf	_n_time+6,c
  5271                           
  5272                           ;set_time.c: 97: n_time[7] = '0';
  5273  00013A  0E30               	movlw	48
  5274  00013C  6E48               	movwf	_n_time+7,c
  5275                           
  5276                           ;set_time.c: 98: }
  5277  00013E  D003               	goto	l4689
  5278  000140                     l4685:
  5279                           
  5280                           ;set_time.c: 99: else
  5281                           ;set_time.c: 100: {
  5282                           ;set_time.c: 101: n_time[7] = '0';
  5283  000140  0E30               	movlw	48
  5284  000142  6E48               	movwf	_n_time+7,c
  5285                           
  5286                           ;set_time.c: 102: n_time[6]++;
  5287  000144  2A47               	incf	_n_time+6,f,c
  5288  000146                     l4689:
  5289                           
  5290                           ;set_time.c: 103: }
  5291                           ;set_time.c: 105: clcd_print(n_time,(0xC0 + (4)));
  5292  000146  0E41               	movlw	low _n_time
  5293  000148  6E11               	movwf	clcd_print@data,c
  5294  00014A  0E00               	movlw	high _n_time
  5295  00014C  6E12               	movwf	clcd_print@data+1,c
  5296  00014E  0EC4               	movlw	196
  5297  000150  6E13               	movwf	clcd_print@addr,c
  5298  000152  EC43  F00A         	call	_clcd_print	;wreg free
  5299                           
  5300                           ;set_time.c: 106: }
  5301                           ;set_time.c: 108: }
  5302  000156  D0A6               	goto	l4731
  5303  000158                     l4691:
  5304                           
  5305                           ;set_time.c: 110: else if(key == 12)
  5306  000158  0E0C               	movlw	12
  5307  00015A  1827               	xorwf	set_time@key,w,c
  5308  00015C  A4D8               	btfss	status,2,c
  5309  00015E  D0A2               	goto	l4731
  5310                           
  5311                           ;set_time.c: 111: {
  5312                           ;set_time.c: 112: count++;
  5313  000160  2A29               	incf	set_time@count,f,c
  5314                           
  5315                           ;set_time.c: 113: clcd_write(0x14,0);
  5316  000162  0E00               	movlw	0
  5317  000164  6E0F               	movwf	clcd_write@control_bit,c
  5318  000166  0E14               	movlw	20
  5319  000168  EC0D  F00C         	call	_clcd_write
  5320                           
  5321                           ;set_time.c: 114: clcd_write(0x14,0);
  5322  00016C  0E00               	movlw	0
  5323  00016E  6E0F               	movwf	clcd_write@control_bit,c
  5324  000170  0E14               	movlw	20
  5325  000172  EC0D  F00C         	call	_clcd_write
  5326                           
  5327                           ;set_time.c: 115: clcd_write(0x14,0);
  5328  000176  0E00               	movlw	0
  5329  000178  6E0F               	movwf	clcd_write@control_bit,c
  5330  00017A  0E14               	movlw	20
  5331  00017C  EC0D  F00C         	call	_clcd_write
  5332                           
  5333                           ;set_time.c: 116: clcd_write(0x14,0);
  5334  000180  0E00               	movlw	0
  5335  000182  6E0F               	movwf	clcd_write@control_bit,c
  5336  000184  0E14               	movlw	20
  5337  000186  EC0D  F00C         	call	_clcd_write
  5338                           
  5339                           ;set_time.c: 117: if(count == 1);
  5340  00018A  0429               	decf	set_time@count,w,c
  5341  00018C  B4D8               	btfsc	status,2,c
  5342  00018E  D039               	goto	l582
  5343                           
  5344                           ;set_time.c: 118: else if(count == 2)
  5345  000190  0E02               	movlw	2
  5346  000192  1829               	xorwf	set_time@count,w,c
  5347  000194  A4D8               	btfss	status,2,c
  5348  000196  D010               	goto	l4711
  5349                           
  5350                           ;set_time.c: 119: {
  5351                           ;set_time.c: 120: clcd_write(0x14,0);
  5352  000198  0E00               	movlw	0
  5353  00019A  6E0F               	movwf	clcd_write@control_bit,c
  5354  00019C  0E14               	movlw	20
  5355  00019E  EC0D  F00C         	call	_clcd_write
  5356                           
  5357                           ;set_time.c: 121: clcd_write(0x14,0);
  5358  0001A2  0E00               	movlw	0
  5359  0001A4  6E0F               	movwf	clcd_write@control_bit,c
  5360  0001A6  0E14               	movlw	20
  5361  0001A8  EC0D  F00C         	call	_clcd_write
  5362                           
  5363                           ;set_time.c: 122: clcd_write(0x14,0);
  5364  0001AC  0E00               	movlw	0
  5365  0001AE  6E0F               	movwf	clcd_write@control_bit,c
  5366  0001B0  0E14               	movlw	20
  5367  0001B2  EC0D  F00C         	call	_clcd_write
  5368                           
  5369                           ;set_time.c: 123: }
  5370  0001B6  D025               	goto	l582
  5371  0001B8                     l4711:
  5372                           
  5373                           ;set_time.c: 124: else if(count == 3)
  5374  0001B8  0E03               	movlw	3
  5375  0001BA  1829               	xorwf	set_time@count,w,c
  5376  0001BC  A4D8               	btfss	status,2,c
  5377  0001BE  D01F               	goto	l4715
  5378                           
  5379                           ;set_time.c: 125: {
  5380                           ;set_time.c: 126: clcd_write(0x14,0);
  5381  0001C0  0E00               	movlw	0
  5382  0001C2  6E0F               	movwf	clcd_write@control_bit,c
  5383  0001C4  0E14               	movlw	20
  5384  0001C6  EC0D  F00C         	call	_clcd_write
  5385                           
  5386                           ;set_time.c: 127: clcd_write(0x14,0);
  5387  0001CA  0E00               	movlw	0
  5388  0001CC  6E0F               	movwf	clcd_write@control_bit,c
  5389  0001CE  0E14               	movlw	20
  5390  0001D0  EC0D  F00C         	call	_clcd_write
  5391                           
  5392                           ;set_time.c: 128: clcd_write(0x14,0);
  5393  0001D4  0E00               	movlw	0
  5394  0001D6  6E0F               	movwf	clcd_write@control_bit,c
  5395  0001D8  0E14               	movlw	20
  5396  0001DA  EC0D  F00C         	call	_clcd_write
  5397                           
  5398                           ;set_time.c: 129: clcd_write(0x14,0);
  5399  0001DE  0E00               	movlw	0
  5400  0001E0  6E0F               	movwf	clcd_write@control_bit,c
  5401  0001E2  0E14               	movlw	20
  5402  0001E4  EC0D  F00C         	call	_clcd_write
  5403                           
  5404                           ;set_time.c: 130: clcd_write(0x14,0);
  5405  0001E8  0E00               	movlw	0
  5406  0001EA  6E0F               	movwf	clcd_write@control_bit,c
  5407  0001EC  0E14               	movlw	20
  5408  0001EE  EC0D  F00C         	call	_clcd_write
  5409                           
  5410                           ;set_time.c: 131: clcd_write(0x14,0);
  5411  0001F2  0E00               	movlw	0
  5412  0001F4  6E0F               	movwf	clcd_write@control_bit,c
  5413  0001F6  0E14               	movlw	20
  5414  0001F8  EC0D  F00C         	call	_clcd_write
  5415                           
  5416                           ;set_time.c: 132: }
  5417  0001FC  D002               	goto	l582
  5418  0001FE                     l4715:
  5419                           
  5420                           ;set_time.c: 133: else
  5421                           ;set_time.c: 134: count = 0;
  5422  0001FE  0E00               	movlw	0
  5423  000200  6E29               	movwf	set_time@count,c
  5424  000202                     l582:
  5425                           
  5426                           ;set_time.c: 135: for(unsigned long i = 500000; i--;);
  5427  000202  0E20               	movlw	32
  5428  000204  6E17               	movwf	set_time@i_417,c
  5429  000206  0EA1               	movlw	161
  5430  000208  6E18               	movwf	set_time@i_417+1,c
  5431  00020A  0E07               	movlw	7
  5432  00020C  6E19               	movwf	set_time@i_417+2,c
  5433  00020E  0E00               	movlw	0
  5434  000210  6E1A               	movwf	set_time@i_417+3,c
  5435  000212                     l4717:
  5436  000212  0617               	decf	set_time@i_417,f,c
  5437  000214  0E00               	movlw	0
  5438  000216  5A18               	subwfb	set_time@i_417+1,f,c
  5439  000218  5A19               	subwfb	set_time@i_417+2,f,c
  5440  00021A  5A1A               	subwfb	set_time@i_417+3,f,c
  5441  00021C  2817               	incf	set_time@i_417,w,c
  5442  00021E  E1F9               	bnz	l4717
  5443  000220  2818               	incf	set_time@i_417+1,w,c
  5444  000222  E1F7               	bnz	l4717
  5445  000224  2819               	incf	set_time@i_417+2,w,c
  5446  000226  E1F5               	bnz	l4717
  5447  000228  281A               	incf	set_time@i_417+3,w,c
  5448  00022A  A4D8               	btfss	status,2,c
  5449  00022C  D7F2               	goto	l4717
  5450                           
  5451                           ;set_time.c: 136: clcd_write(0x0F,0);
  5452  00022E  0E00               	movlw	0
  5453  000230  6E0F               	movwf	clcd_write@control_bit,c
  5454  000232  0E0F               	movlw	15
  5455  000234  EC0D  F00C         	call	_clcd_write
  5456                           
  5457                           ;set_time.c: 137: clcd_write(0x14,0);
  5458  000238  0E00               	movlw	0
  5459  00023A  6E0F               	movwf	clcd_write@control_bit,c
  5460  00023C  0E14               	movlw	20
  5461  00023E  EC0D  F00C         	call	_clcd_write
  5462                           
  5463                           ;set_time.c: 138: for(unsigned long i = 500000; i--;);
  5464  000242  0E20               	movlw	32
  5465  000244  6E1B               	movwf	set_time@i_418,c
  5466  000246  0EA1               	movlw	161
  5467  000248  6E1C               	movwf	set_time@i_418+1,c
  5468  00024A  0E07               	movlw	7
  5469  00024C  6E1D               	movwf	set_time@i_418+2,c
  5470  00024E  0E00               	movlw	0
  5471  000250  6E1E               	movwf	set_time@i_418+3,c
  5472  000252                     l4723:
  5473  000252  061B               	decf	set_time@i_418,f,c
  5474  000254  0E00               	movlw	0
  5475  000256  5A1C               	subwfb	set_time@i_418+1,f,c
  5476  000258  5A1D               	subwfb	set_time@i_418+2,f,c
  5477  00025A  5A1E               	subwfb	set_time@i_418+3,f,c
  5478  00025C  281B               	incf	set_time@i_418,w,c
  5479  00025E  E1F9               	bnz	l4723
  5480  000260  281C               	incf	set_time@i_418+1,w,c
  5481  000262  E1F7               	bnz	l4723
  5482  000264  281D               	incf	set_time@i_418+2,w,c
  5483  000266  E1F5               	bnz	l4723
  5484  000268  281E               	incf	set_time@i_418+3,w,c
  5485  00026A  A4D8               	btfss	status,2,c
  5486  00026C  D7F2               	goto	l4723
  5487                           
  5488                           ;set_time.c: 139: clcd_write(0x0F,0);
  5489  00026E  0E00               	movlw	0
  5490  000270  6E0F               	movwf	clcd_write@control_bit,c
  5491  000272  0E0F               	movlw	15
  5492  000274  EC0D  F00C         	call	_clcd_write
  5493                           
  5494                           ;set_time.c: 140: for(unsigned long i = 500000; i--;);
  5495  000278  0E20               	movlw	32
  5496  00027A  6E1F               	movwf	set_time@i_419,c
  5497  00027C  0EA1               	movlw	161
  5498  00027E  6E20               	movwf	set_time@i_419+1,c
  5499  000280  0E07               	movlw	7
  5500  000282  6E21               	movwf	set_time@i_419+2,c
  5501  000284  0E00               	movlw	0
  5502  000286  6E22               	movwf	set_time@i_419+3,c
  5503  000288                     l4729:
  5504  000288  061F               	decf	set_time@i_419,f,c
  5505  00028A  0E00               	movlw	0
  5506  00028C  5A20               	subwfb	set_time@i_419+1,f,c
  5507  00028E  5A21               	subwfb	set_time@i_419+2,f,c
  5508  000290  5A22               	subwfb	set_time@i_419+3,f,c
  5509  000292  281F               	incf	set_time@i_419,w,c
  5510  000294  E1F9               	bnz	l4729
  5511  000296  2820               	incf	set_time@i_419+1,w,c
  5512  000298  E1F7               	bnz	l4729
  5513  00029A  2821               	incf	set_time@i_419+2,w,c
  5514  00029C  E1F5               	bnz	l4729
  5515  00029E  2822               	incf	set_time@i_419+3,w,c
  5516  0002A0  A4D8               	btfss	status,2,c
  5517  0002A2  D7F2               	goto	l4729
  5518  0002A4                     l4731:
  5519  0002A4  0E0A               	movlw	10
  5520  0002A6  1827               	xorwf	set_time@key,w,c
  5521  0002A8  A4D8               	btfss	status,2,c
  5522  0002AA  D6C7               	goto	l4619
  5523                           
  5524                           ;set_time.c: 141: }
  5525                           ;set_time.c: 142: }
  5526                           ;set_time.c: 143: clcd_write(0x01, 0);
  5527  0002AC  0E00               	movlw	0
  5528  0002AE  6E0F               	movwf	clcd_write@control_bit,c
  5529  0002B0  0E01               	movlw	1
  5530  0002B2  EC0D  F00C         	call	_clcd_write
  5531                           
  5532                           ;set_time.c: 145: clcd_print(n_time, (0x80 + (0)));
  5533  0002B6  0E41               	movlw	low _n_time
  5534  0002B8  6E11               	movwf	clcd_print@data,c
  5535  0002BA  0E00               	movlw	high _n_time
  5536  0002BC  6E12               	movwf	clcd_print@data+1,c
  5537  0002BE  0E80               	movlw	128
  5538  0002C0  6E13               	movwf	clcd_print@addr,c
  5539  0002C2  EC43  F00A         	call	_clcd_print	;wreg free
  5540                           
  5541                           ;set_time.c: 147: for(unsigned long i = 500000; i--;);
  5542  0002C6  0E20               	movlw	32
  5543  0002C8  6E23               	movwf	set_time@i_420,c
  5544  0002CA  0EA1               	movlw	161
  5545  0002CC  6E24               	movwf	set_time@i_420+1,c
  5546  0002CE  0E07               	movlw	7
  5547  0002D0  6E25               	movwf	set_time@i_420+2,c
  5548  0002D2  0E00               	movlw	0
  5549  0002D4  6E26               	movwf	set_time@i_420+3,c
  5550  0002D6                     l4739:
  5551  0002D6  0623               	decf	set_time@i_420,f,c
  5552  0002D8  0E00               	movlw	0
  5553  0002DA  5A24               	subwfb	set_time@i_420+1,f,c
  5554  0002DC  5A25               	subwfb	set_time@i_420+2,f,c
  5555  0002DE  5A26               	subwfb	set_time@i_420+3,f,c
  5556  0002E0  2823               	incf	set_time@i_420,w,c
  5557  0002E2  E1F9               	bnz	l4739
  5558  0002E4  2824               	incf	set_time@i_420+1,w,c
  5559  0002E6  E1F7               	bnz	l4739
  5560  0002E8  2825               	incf	set_time@i_420+2,w,c
  5561  0002EA  E1F5               	bnz	l4739
  5562  0002EC  2826               	incf	set_time@i_420+3,w,c
  5563  0002EE  A4D8               	btfss	status,2,c
  5564  0002F0  D7F2               	goto	l4739
  5565                           
  5566                           ;set_time.c: 149: clcd_write(0x0C, 0);
  5567  0002F2  0E00               	movlw	0
  5568  0002F4  6E0F               	movwf	clcd_write@control_bit,c
  5569  0002F6  0E0C               	movlw	12
  5570  0002F8  EC0D  F00C         	call	_clcd_write
  5571                           
  5572                           ;set_time.c: 152: unsigned char just = 0x00;
  5573  0002FC  0E00               	movlw	0
  5574  0002FE  6E28               	movwf	set_time@just,c
  5575                           
  5576                           ;set_time.c: 153: just = (n_time[1] & 0x0F) | ((n_time[0] << 4) & 0xF0);
  5577  000300  C041  F014         	movff	_n_time,??_set_time
  5578  000304  3A14               	swapf	??_set_time,f,c
  5579  000306  0EF0               	movlw	240
  5580  000308  1614               	andwf	??_set_time,f,c
  5581  00030A  0EF0               	movlw	240
  5582  00030C  1614               	andwf	??_set_time,f,c
  5583  00030E  5042               	movf	_n_time+1,w,c
  5584  000310  0B0F               	andlw	15
  5585  000312  1014               	iorwf	??_set_time,w,c
  5586  000314  6E28               	movwf	set_time@just,c
  5587                           
  5588                           ;set_time.c: 154: write_ds1307(0x02, just);
  5589  000316  C028  F010         	movff	set_time@just,write_ds1307@data
  5590  00031A  0E02               	movlw	2
  5591  00031C  EC58  F00C         	call	_write_ds1307
  5592                           
  5593                           ;set_time.c: 156: just = (n_time[4] & 0x0F) | ((n_time[3] << 4) & 0xF0);
  5594  000320  C044  F014         	movff	_n_time+3,??_set_time
  5595  000324  3A14               	swapf	??_set_time,f,c
  5596  000326  0EF0               	movlw	240
  5597  000328  1614               	andwf	??_set_time,f,c
  5598  00032A  0EF0               	movlw	240
  5599  00032C  1614               	andwf	??_set_time,f,c
  5600  00032E  5045               	movf	_n_time+4,w,c
  5601  000330  0B0F               	andlw	15
  5602  000332  1014               	iorwf	??_set_time,w,c
  5603  000334  6E28               	movwf	set_time@just,c
  5604                           
  5605                           ;set_time.c: 158: write_ds1307(0x01, just);
  5606  000336  C028  F010         	movff	set_time@just,write_ds1307@data
  5607  00033A  0E01               	movlw	1
  5608  00033C  EC58  F00C         	call	_write_ds1307
  5609                           
  5610                           ;set_time.c: 159: just = (n_time[7] & 0x0F) | ((n_time[6] << 4) & 0xF0);
  5611  000340  C047  F014         	movff	_n_time+6,??_set_time
  5612  000344  3A14               	swapf	??_set_time,f,c
  5613  000346  0EF0               	movlw	240
  5614  000348  1614               	andwf	??_set_time,f,c
  5615  00034A  0EF0               	movlw	240
  5616  00034C  1614               	andwf	??_set_time,f,c
  5617  00034E  5048               	movf	_n_time+7,w,c
  5618  000350  0B0F               	andlw	15
  5619  000352  1014               	iorwf	??_set_time,w,c
  5620  000354  6E28               	movwf	set_time@just,c
  5621                           
  5622                           ;set_time.c: 160: write_ds1307(0x00, just);
  5623  000356  C028  F010         	movff	set_time@just,write_ds1307@data
  5624  00035A  0E00               	movlw	0
  5625  00035C  EC58  F00C         	call	_write_ds1307
  5626                           
  5627                           ;set_time.c: 162: new_time_flag = 1;
  5628  000360  0E01               	movlw	1
  5629  000362  6E4F               	movwf	_new_time_flag,c
  5630  000364  0012               	return		;funcret
  5631  000366                     __end_of_set_time:
  5632                           	opt stack 0
  5633                           tblptru	equ	0xFF8
  5634                           tblptrh	equ	0xFF7
  5635                           tblptrl	equ	0xFF6
  5636                           tablat	equ	0xFF5
  5637                           prodh	equ	0xFF4
  5638                           prodl	equ	0xFF3
  5639                           intcon	equ	0xFF2
  5640                           intcon2	equ	0xFF1
  5641                           postinc0	equ	0xFEE
  5642                           wreg	equ	0xFE8
  5643                           indf1	equ	0xFE7
  5644                           postdec1	equ	0xFE5
  5645                           plusw1	equ	0xFE3
  5646                           fsr1h	equ	0xFE2
  5647                           fsr1l	equ	0xFE1
  5648                           indf2	equ	0xFDF
  5649                           postinc2	equ	0xFDE
  5650                           postdec2	equ	0xFDD
  5651                           plusw2	equ	0xFDB
  5652                           fsr2h	equ	0xFDA
  5653                           fsr2l	equ	0xFD9
  5654                           status	equ	0xFD8
  5655                           
  5656 ;; *************** function _write_ds1307 *****************
  5657 ;; Defined at:
  5658 ;;		line 48 in file "ds1307.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  address         1    wreg     unsigned char 
  5661 ;;  data            1   15[COMRAM] unsigned char 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  address         1   16[COMRAM] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      void 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5673 ;;      Params:         1       0       0       0       0       0       0
  5674 ;;      Locals:         1       0       0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0
  5676 ;;      Totals:         2       0       0       0       0       0       0
  5677 ;;Total ram usage:        2 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    3
  5680 ;; This function calls:
  5681 ;;		_i2c_start
  5682 ;;		_i2c_stop
  5683 ;;		_i2c_write
  5684 ;; This function is called by:
  5685 ;;		_init_ds1307
  5686 ;;		_set_time
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text26
  5691  0018B0                     __ptext26:
  5692                           	opt stack 0
  5693  0018B0                     _write_ds1307:
  5694                           	opt stack 25
  5695                           
  5696                           ;incstack = 0
  5697                           ;write_ds1307@address stored from wreg
  5698  0018B0  6E11               	movwf	write_ds1307@address,c
  5699                           
  5700                           ;ds1307.c: 50: i2c_start();
  5701  0018B2  ECD8  F00C         	call	_i2c_start	;wreg free
  5702                           
  5703                           ;ds1307.c: 51: i2c_write(0xD0);
  5704  0018B6  0ED0               	movlw	208
  5705  0018B8  ECBB  F00C         	call	_i2c_write
  5706                           
  5707                           ;ds1307.c: 52: i2c_write(address);
  5708  0018BC  5011               	movf	write_ds1307@address,w,c
  5709  0018BE  ECBB  F00C         	call	_i2c_write
  5710                           
  5711                           ;ds1307.c: 53: i2c_write(data);
  5712  0018C2  5010               	movf	write_ds1307@data,w,c
  5713  0018C4  ECBB  F00C         	call	_i2c_write
  5714                           
  5715                           ;ds1307.c: 54: i2c_stop();
  5716  0018C8  ECD4  F00C         	call	_i2c_stop	;wreg free
  5717  0018CC  0012               	return		;funcret
  5718  0018CE                     __end_of_write_ds1307:
  5719                           	opt stack 0
  5720                           tblptru	equ	0xFF8
  5721                           tblptrh	equ	0xFF7
  5722                           tblptrl	equ	0xFF6
  5723                           tablat	equ	0xFF5
  5724                           prodh	equ	0xFF4
  5725                           prodl	equ	0xFF3
  5726                           intcon	equ	0xFF2
  5727                           intcon2	equ	0xFF1
  5728                           postinc0	equ	0xFEE
  5729                           wreg	equ	0xFE8
  5730                           indf1	equ	0xFE7
  5731                           postdec1	equ	0xFE5
  5732                           plusw1	equ	0xFE3
  5733                           fsr1h	equ	0xFE2
  5734                           fsr1l	equ	0xFE1
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           postdec2	equ	0xFDD
  5738                           plusw2	equ	0xFDB
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _i2c_write *****************
  5744 ;; Defined at:
  5745 ;;		line 55 in file "i2c.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  data            1    wreg     unsigned char 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  data            1   14[COMRAM] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5759 ;;      Params:         0       0       0       0       0       0       0
  5760 ;;      Locals:         1       0       0       0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0
  5762 ;;      Totals:         1       0       0       0       0       0       0
  5763 ;;Total ram usage:        1 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    2
  5766 ;; This function calls:
  5767 ;;		_i2c_idle
  5768 ;; This function is called by:
  5769 ;;		_write_ds1307
  5770 ;;		_read_ds1307
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text27
  5775  001976                     __ptext27:
  5776                           	opt stack 0
  5777  001976                     _i2c_write:
  5778                           	opt stack 25
  5779                           
  5780                           ;incstack = 0
  5781                           ;i2c_write@data stored from wreg
  5782  001976  6E0F               	movwf	i2c_write@data,c
  5783                           
  5784                           ;i2c.c: 57: SSPBUF = data;
  5785  001978  C00F  FFC9         	movff	i2c_write@data,4041	;volatile
  5786                           
  5787                           ;i2c.c: 58: i2c_idle();
  5788  00197C  ECDC  F00C         	call	_i2c_idle	;wreg free
  5789  001980  0012               	return		;funcret
  5790  001982                     __end_of_i2c_write:
  5791                           	opt stack 0
  5792                           tblptru	equ	0xFF8
  5793                           tblptrh	equ	0xFF7
  5794                           tblptrl	equ	0xFF6
  5795                           tablat	equ	0xFF5
  5796                           prodh	equ	0xFF4
  5797                           prodl	equ	0xFF3
  5798                           intcon	equ	0xFF2
  5799                           intcon2	equ	0xFF1
  5800                           postinc0	equ	0xFEE
  5801                           wreg	equ	0xFE8
  5802                           indf1	equ	0xFE7
  5803                           postdec1	equ	0xFE5
  5804                           plusw1	equ	0xFE3
  5805                           fsr1h	equ	0xFE2
  5806                           fsr1l	equ	0xFE1
  5807                           indf2	equ	0xFDF
  5808                           postinc2	equ	0xFDE
  5809                           postdec2	equ	0xFDD
  5810                           plusw2	equ	0xFDB
  5811                           fsr2h	equ	0xFDA
  5812                           fsr2l	equ	0xFD9
  5813                           status	equ	0xFD8
  5814                           
  5815 ;; *************** function _i2c_stop *****************
  5816 ;; Defined at:
  5817 ;;		line 43 in file "i2c.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5831 ;;      Params:         0       0       0       0       0       0       0
  5832 ;;      Locals:         0       0       0       0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0       0
  5834 ;;      Totals:         0       0       0       0       0       0       0
  5835 ;;Total ram usage:        0 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    2
  5838 ;; This function calls:
  5839 ;;		_i2c_idle
  5840 ;; This function is called by:
  5841 ;;		_write_ds1307
  5842 ;;		_read_ds1307
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text28
  5847  0019A8                     __ptext28:
  5848                           	opt stack 0
  5849  0019A8                     _i2c_stop:
  5850                           	opt stack 25
  5851                           
  5852                           ;i2c.c: 45: PEN = 1;
  5853                           
  5854                           ;incstack = 0
  5855  0019A8  84C5               	bsf	4037,2,c	;volatile
  5856                           
  5857                           ;i2c.c: 46: i2c_idle();
  5858  0019AA  ECDC  F00C         	call	_i2c_idle	;wreg free
  5859  0019AE  0012               	return		;funcret
  5860  0019B0                     __end_of_i2c_stop:
  5861                           	opt stack 0
  5862                           tblptru	equ	0xFF8
  5863                           tblptrh	equ	0xFF7
  5864                           tblptrl	equ	0xFF6
  5865                           tablat	equ	0xFF5
  5866                           prodh	equ	0xFF4
  5867                           prodl	equ	0xFF3
  5868                           intcon	equ	0xFF2
  5869                           intcon2	equ	0xFF1
  5870                           postinc0	equ	0xFEE
  5871                           wreg	equ	0xFE8
  5872                           indf1	equ	0xFE7
  5873                           postdec1	equ	0xFE5
  5874                           plusw1	equ	0xFE3
  5875                           fsr1h	equ	0xFE2
  5876                           fsr1l	equ	0xFE1
  5877                           indf2	equ	0xFDF
  5878                           postinc2	equ	0xFDE
  5879                           postdec2	equ	0xFDD
  5880                           plusw2	equ	0xFDB
  5881                           fsr2h	equ	0xFDA
  5882                           fsr2l	equ	0xFD9
  5883                           status	equ	0xFD8
  5884                           
  5885 ;; *************** function _i2c_start *****************
  5886 ;; Defined at:
  5887 ;;		line 37 in file "i2c.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      void 
  5894 ;; Registers used:
  5895 ;;		cstack
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5901 ;;      Params:         0       0       0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0
  5904 ;;      Totals:         0       0       0       0       0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:    2
  5908 ;; This function calls:
  5909 ;;		_i2c_idle
  5910 ;; This function is called by:
  5911 ;;		_write_ds1307
  5912 ;;		_read_ds1307
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text29
  5917  0019B0                     __ptext29:
  5918                           	opt stack 0
  5919  0019B0                     _i2c_start:
  5920                           	opt stack 25
  5921                           
  5922                           ;i2c.c: 39: SEN = 1;
  5923                           
  5924                           ;incstack = 0
  5925  0019B0  80C5               	bsf	4037,0,c	;volatile
  5926                           
  5927                           ;i2c.c: 40: i2c_idle();
  5928  0019B2  ECDC  F00C         	call	_i2c_idle	;wreg free
  5929  0019B6  0012               	return		;funcret
  5930  0019B8                     __end_of_i2c_start:
  5931                           	opt stack 0
  5932                           tblptru	equ	0xFF8
  5933                           tblptrh	equ	0xFF7
  5934                           tblptrl	equ	0xFF6
  5935                           tablat	equ	0xFF5
  5936                           prodh	equ	0xFF4
  5937                           prodl	equ	0xFF3
  5938                           intcon	equ	0xFF2
  5939                           intcon2	equ	0xFF1
  5940                           postinc0	equ	0xFEE
  5941                           wreg	equ	0xFE8
  5942                           indf1	equ	0xFE7
  5943                           postdec1	equ	0xFE5
  5944                           plusw1	equ	0xFE3
  5945                           fsr1h	equ	0xFE2
  5946                           fsr1l	equ	0xFE1
  5947                           indf2	equ	0xFDF
  5948                           postinc2	equ	0xFDE
  5949                           postdec2	equ	0xFDD
  5950                           plusw2	equ	0xFDB
  5951                           fsr2h	equ	0xFDA
  5952                           fsr2l	equ	0xFD9
  5953                           status	equ	0xFD8
  5954                           
  5955 ;; *************** function _i2c_idle *****************
  5956 ;; Defined at:
  5957 ;;		line 23 in file "i2c.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		None
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5971 ;;      Params:         0       0       0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0
  5974 ;;      Totals:         0       0       0       0       0       0       0
  5975 ;;Total ram usage:        0 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    1
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_i2c_start
  5982 ;;		_i2c_stop
  5983 ;;		_i2c_rep_start
  5984 ;;		_i2c_write
  5985 ;;		_i2c_rx_mode
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text30
  5990  0019B8                     __ptext30:
  5991                           	opt stack 0
  5992  0019B8                     _i2c_idle:
  5993                           	opt stack 25
  5994  0019B8                     l659:
  5995  0019B8  A69E               	btfss	3998,3,c	;volatile
  5996  0019BA  D7FE               	goto	l659
  5997                           
  5998                           ;i2c.c: 26: SSPIF = 0;
  5999  0019BC  969E               	bcf	3998,3,c	;volatile
  6000  0019BE  0012               	return		;funcret
  6001  0019C0                     __end_of_i2c_idle:
  6002                           	opt stack 0
  6003                           tblptru	equ	0xFF8
  6004                           tblptrh	equ	0xFF7
  6005                           tblptrl	equ	0xFF6
  6006                           tablat	equ	0xFF5
  6007                           prodh	equ	0xFF4
  6008                           prodl	equ	0xFF3
  6009                           intcon	equ	0xFF2
  6010                           intcon2	equ	0xFF1
  6011                           postinc0	equ	0xFEE
  6012                           wreg	equ	0xFE8
  6013                           indf1	equ	0xFE7
  6014                           postdec1	equ	0xFE5
  6015                           plusw1	equ	0xFE3
  6016                           fsr1h	equ	0xFE2
  6017                           fsr1l	equ	0xFE1
  6018                           indf2	equ	0xFDF
  6019                           postinc2	equ	0xFDE
  6020                           postdec2	equ	0xFDD
  6021                           plusw2	equ	0xFDB
  6022                           fsr2h	equ	0xFDA
  6023                           fsr2l	equ	0xFD9
  6024                           status	equ	0xFD8
  6025                           
  6026 ;; *************** function _password_change *****************
  6027 ;; Defined at:
  6028 ;;		line 8 in file "password_time_change.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  c_password      5   27[COMRAM] unsigned char [5]
  6033 ;;  r_password      5   22[COMRAM] unsigned char [5]
  6034 ;;  pos             2   36[COMRAM] int 
  6035 ;;  count           2   33[COMRAM] int 
  6036 ;;  star            2   20[COMRAM] int 
  6037 ;;  key             1   35[COMRAM] unsigned char 
  6038 ;;  address         1   32[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  2  160[None  ] int 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6048 ;;      Params:         0       0       0       0       0       0       0
  6049 ;;      Locals:        18       0       0       0       0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0
  6051 ;;      Totals:        18       0       0       0       0       0       0
  6052 ;;Total ram usage:       18 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    3
  6055 ;; This function calls:
  6056 ;;		_clcd_print
  6057 ;;		_clcd_putch
  6058 ;;		_clcd_write
  6059 ;;		_delay_fun
  6060 ;;		_read_switches
  6061 ;;		_strcmp
  6062 ;;		_write_internal_eeprom
  6063 ;; This function is called by:
  6064 ;;		_display_menu
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text31
  6069  000860                     __ptext31:
  6070                           	opt stack 0
  6071  000860                     _password_change:
  6072                           	opt stack 26
  6073                           
  6074                           ;password_time_change.c: 10: unsigned char c_password[5]={'\0'}, r_password[5]={'\0'};
  6075                           
  6076                           ;incstack = 0
  6077  000860  EE20  F060         	lfsr	2,password_change@F16060
  6078  000864  EE10  F01C         	lfsr	1,password_change@c_password
  6079  000868  0E04               	movlw	4
  6080  00086A                     u3801:
  6081  00086A  CFDB FFE3          	movff	plusw2,plusw1
  6082  00086E  06E8               	decf	wreg,f,c
  6083  000870  E2FC               	bc	u3801
  6084  000872  EE20  F065         	lfsr	2,password_change@F16062
  6085  000876  EE10  F017         	lfsr	1,password_change@r_password
  6086  00087A  0E04               	movlw	4
  6087  00087C                     u3811:
  6088  00087C  CFDB FFE3          	movff	plusw2,plusw1
  6089  000880  06E8               	decf	wreg,f,c
  6090  000882  E2FC               	bc	u3811
  6091                           
  6092                           ;password_time_change.c: 11: unsigned char key,address = 0xC0;
  6093  000884  0EC0               	movlw	192
  6094  000886  6E21               	movwf	password_change@address,c
  6095                           
  6096                           ;password_time_change.c: 12: int count = 0, pos = 0, star = 0;
  6097  000888  0E00               	movlw	0
  6098  00088A  6E23               	movwf	password_change@count+1,c
  6099  00088C  0E00               	movlw	0
  6100  00088E  6E22               	movwf	password_change@count,c
  6101  000890  0E00               	movlw	0
  6102  000892  6E26               	movwf	password_change@pos+1,c
  6103  000894  0E00               	movlw	0
  6104  000896  6E25               	movwf	password_change@pos,c
  6105  000898  0E00               	movlw	0
  6106  00089A  6E16               	movwf	password_change@star+1,c
  6107  00089C  0E00               	movlw	0
  6108  00089E  6E15               	movwf	password_change@star,c
  6109                           
  6110                           ;password_time_change.c: 13: clcd_write(0x01, 0);
  6111  0008A0  0E00               	movlw	0
  6112  0008A2  6E0F               	movwf	clcd_write@control_bit,c
  6113  0008A4  0E01               	movlw	1
  6114  0008A6  EC0D  F00C         	call	_clcd_write
  6115                           
  6116                           ;password_time_change.c: 15: clcd_print("Enter new password", (0x80 + (0)));
  6117  0008AA  0ED9               	movlw	low (STR_18+4)
  6118  0008AC  6E11               	movwf	clcd_print@data,c
  6119  0008AE  0E2E               	movlw	high (STR_18+4)
  6120  0008B0  6E12               	movwf	clcd_print@data+1,c
  6121  0008B2  0E80               	movlw	128
  6122  0008B4  6E13               	movwf	clcd_print@addr,c
  6123  0008B6  EC43  F00A         	call	_clcd_print	;wreg free
  6124  0008BA                     l4521:
  6125                           
  6126                           ;password_time_change.c: 18: {
  6127                           ;password_time_change.c: 19: clcd_write(address, 0);
  6128  0008BA  0E00               	movlw	0
  6129  0008BC  6E0F               	movwf	clcd_write@control_bit,c
  6130  0008BE  5021               	movf	password_change@address,w,c
  6131  0008C0  EC0D  F00C         	call	_clcd_write
  6132                           
  6133                           ;password_time_change.c: 20: clcd_write(0x0E, 0);
  6134  0008C4  0E00               	movlw	0
  6135  0008C6  6E0F               	movwf	clcd_write@control_bit,c
  6136  0008C8  0E0E               	movlw	14
  6137  0008CA  EC0D  F00C         	call	_clcd_write
  6138                           
  6139                           ;password_time_change.c: 22: key = read_switches(1);
  6140  0008CE  0E01               	movlw	1
  6141  0008D0  EC87  F00B         	call	_read_switches
  6142  0008D4  6E24               	movwf	password_change@key,c
  6143                           
  6144                           ;password_time_change.c: 25: if (count < 4 && (key == 1 || key == 2))
  6145  0008D6  BE23               	btfsc	password_change@count+1,7,c
  6146  0008D8  D006               	goto	l4529
  6147  0008DA  5023               	movf	password_change@count+1,w,c
  6148  0008DC  E143               	bnz	l4557
  6149  0008DE  0E04               	movlw	4
  6150  0008E0  5C22               	subwf	password_change@count,w,c
  6151  0008E2  B0D8               	btfsc	status,0,c
  6152  0008E4  D03F               	goto	l4557
  6153  0008E6                     l4529:
  6154  0008E6  0424               	decf	password_change@key,w,c
  6155  0008E8  B4D8               	btfsc	status,2,c
  6156  0008EA  D004               	goto	l4533
  6157  0008EC  0E02               	movlw	2
  6158  0008EE  1824               	xorwf	password_change@key,w,c
  6159  0008F0  A4D8               	btfss	status,2,c
  6160  0008F2  D038               	goto	l4557
  6161  0008F4                     l4533:
  6162                           
  6163                           ;password_time_change.c: 26: {
  6164                           ;password_time_change.c: 27: if (key == 1)
  6165  0008F4  0424               	decf	password_change@key,w,c
  6166  0008F6  A4D8               	btfss	status,2,c
  6167  0008F8  D008               	goto	l4537
  6168                           
  6169                           ;password_time_change.c: 28: {
  6170                           ;password_time_change.c: 29: c_password[pos] = '1';
  6171  0008FA  0E1C               	movlw	low password_change@c_password
  6172  0008FC  2425               	addwf	password_change@pos,w,c
  6173  0008FE  6ED9               	movwf	fsr2l,c
  6174  000900  0E00               	movlw	high password_change@c_password
  6175  000902  2026               	addwfc	password_change@pos+1,w,c
  6176  000904  6EDA               	movwf	fsr2h,c
  6177  000906  0E31               	movlw	49
  6178  000908  D00B               	goto	L5
  6179  00090A                     l4537:
  6180                           
  6181                           ;password_time_change.c: 31: else if (key == 2)
  6182  00090A  0E02               	movlw	2
  6183  00090C  1824               	xorwf	password_change@key,w,c
  6184  00090E  A4D8               	btfss	status,2,c
  6185  000910  D008               	goto	l4541
  6186                           
  6187                           ;password_time_change.c: 32: {
  6188                           ;password_time_change.c: 33: c_password[pos] = '0';
  6189  000912  0E1C               	movlw	low password_change@c_password
  6190  000914  2425               	addwf	password_change@pos,w,c
  6191  000916  6ED9               	movwf	fsr2l,c
  6192  000918  0E00               	movlw	high password_change@c_password
  6193  00091A  2026               	addwfc	password_change@pos+1,w,c
  6194  00091C  6EDA               	movwf	fsr2h,c
  6195  00091E  0E30               	movlw	48
  6196  000920                     L5:
  6197  000920  6EDF               	movwf	indf2,c
  6198  000922                     l4541:
  6199                           
  6200                           ;password_time_change.c: 34: }
  6201                           ;password_time_change.c: 35: clcd_putch('*', (0xC0 + (pos)));
  6202  000922  5025               	movf	password_change@pos,w,c
  6203  000924  0FC0               	addlw	192
  6204  000926  6E11               	movwf	clcd_putch@addr,c
  6205  000928  0E2A               	movlw	42
  6206  00092A  EC74  F00C         	call	_clcd_putch
  6207                           
  6208                           ;password_time_change.c: 37: count++;
  6209  00092E  4A22               	infsnz	password_change@count,f,c
  6210  000930  2A23               	incf	password_change@count+1,f,c
  6211                           
  6212                           ;password_time_change.c: 38: pos++;
  6213  000932  4A25               	infsnz	password_change@pos,f,c
  6214  000934  2A26               	incf	password_change@pos+1,f,c
  6215                           
  6216                           ;password_time_change.c: 39: if (count == 4)
  6217  000936  0E04               	movlw	4
  6218  000938  1822               	xorwf	password_change@count,w,c
  6219  00093A  1023               	iorwf	password_change@count+1,w,c
  6220  00093C  A4D8               	btfss	status,2,c
  6221  00093E  D03A               	goto	l4575
  6222                           
  6223                           ;password_time_change.c: 40: {
  6224                           ;password_time_change.c: 41: clcd_write(0x01, 0);
  6225  000940  0E00               	movlw	0
  6226  000942  6E0F               	movwf	clcd_write@control_bit,c
  6227  000944  0E01               	movlw	1
  6228  000946  EC0D  F00C         	call	_clcd_write
  6229                           
  6230                           ;password_time_change.c: 42: pos = 0;
  6231  00094A  0E00               	movlw	0
  6232  00094C  6E26               	movwf	password_change@pos+1,c
  6233  00094E  0E00               	movlw	0
  6234  000950  6E25               	movwf	password_change@pos,c
  6235                           
  6236                           ;password_time_change.c: 44: clcd_print(" Re Enter new password", (0x80 + (0)));
  6237  000952  0ED5               	movlw	low STR_18
  6238  000954  6E11               	movwf	clcd_print@data,c
  6239  000956  0E2E               	movlw	high STR_18
  6240  000958  6E12               	movwf	clcd_print@data+1,c
  6241  00095A  0E80               	movlw	128
  6242  00095C  6E13               	movwf	clcd_print@addr,c
  6243  00095E  EC43  F00A         	call	_clcd_print	;wreg free
  6244  000962  D028               	goto	l4575
  6245  000964                     l4557:
  6246                           
  6247                           ;password_time_change.c: 50: else if ((key == 1 || key == 2))
  6248  000964  0424               	decf	password_change@key,w,c
  6249  000966  B4D8               	btfsc	status,2,c
  6250  000968  D004               	goto	l4561
  6251  00096A  0E02               	movlw	2
  6252  00096C  1824               	xorwf	password_change@key,w,c
  6253  00096E  A4D8               	btfss	status,2,c
  6254  000970  D024               	goto	l4577
  6255  000972                     l4561:
  6256                           
  6257                           ;password_time_change.c: 51: {
  6258                           ;password_time_change.c: 54: if (key == 1)
  6259  000972  0424               	decf	password_change@key,w,c
  6260  000974  A4D8               	btfss	status,2,c
  6261  000976  D008               	goto	l4565
  6262                           
  6263                           ;password_time_change.c: 55: {
  6264                           ;password_time_change.c: 56: r_password[pos] = '1';
  6265  000978  0E17               	movlw	low password_change@r_password
  6266  00097A  2425               	addwf	password_change@pos,w,c
  6267  00097C  6ED9               	movwf	fsr2l,c
  6268  00097E  0E00               	movlw	high password_change@r_password
  6269  000980  2026               	addwfc	password_change@pos+1,w,c
  6270  000982  6EDA               	movwf	fsr2h,c
  6271  000984  0E31               	movlw	49
  6272  000986  D00B               	goto	L6
  6273  000988                     l4565:
  6274                           
  6275                           ;password_time_change.c: 58: else if (key == 2)
  6276  000988  0E02               	movlw	2
  6277  00098A  1824               	xorwf	password_change@key,w,c
  6278  00098C  A4D8               	btfss	status,2,c
  6279  00098E  D008               	goto	l4569
  6280                           
  6281                           ;password_time_change.c: 59: {
  6282                           ;password_time_change.c: 60: r_password[pos] = '0';
  6283  000990  0E17               	movlw	low password_change@r_password
  6284  000992  2425               	addwf	password_change@pos,w,c
  6285  000994  6ED9               	movwf	fsr2l,c
  6286  000996  0E00               	movlw	high password_change@r_password
  6287  000998  2026               	addwfc	password_change@pos+1,w,c
  6288  00099A  6EDA               	movwf	fsr2h,c
  6289  00099C  0E30               	movlw	48
  6290  00099E                     L6:
  6291  00099E  6EDF               	movwf	indf2,c
  6292  0009A0                     l4569:
  6293                           
  6294                           ;password_time_change.c: 61: }
  6295                           ;password_time_change.c: 62: clcd_putch('*', (0xC0 + (pos)));
  6296  0009A0  5025               	movf	password_change@pos,w,c
  6297  0009A2  0FC0               	addlw	192
  6298  0009A4  6E11               	movwf	clcd_putch@addr,c
  6299  0009A6  0E2A               	movlw	42
  6300  0009A8  EC74  F00C         	call	_clcd_putch
  6301                           
  6302                           ;password_time_change.c: 63: pos++;
  6303  0009AC  4A25               	infsnz	password_change@pos,f,c
  6304  0009AE  2A26               	incf	password_change@pos+1,f,c
  6305                           
  6306                           ;password_time_change.c: 64: count ++;
  6307  0009B0  4A22               	infsnz	password_change@count,f,c
  6308  0009B2  2A23               	incf	password_change@count+1,f,c
  6309  0009B4                     l4575:
  6310                           
  6311                           ;password_time_change.c: 65: address = (0xC0 + (pos));
  6312  0009B4  5025               	movf	password_change@pos,w,c
  6313  0009B6  0FC0               	addlw	192
  6314  0009B8  6E21               	movwf	password_change@address,c
  6315  0009BA                     l4577:
  6316                           
  6317                           ;password_time_change.c: 68: }
  6318                           ;password_time_change.c: 72: if (count == 8 && (strcmp(c_password, r_password) == 0))
  6319  0009BA  0E08               	movlw	8
  6320  0009BC  1822               	xorwf	password_change@count,w,c
  6321  0009BE  1023               	iorwf	password_change@count+1,w,c
  6322  0009C0  A4D8               	btfss	status,2,c
  6323  0009C2  D041               	goto	l4599
  6324  0009C4  0E1C               	movlw	low password_change@c_password
  6325  0009C6  6E0F               	movwf	strcmp@s1,c
  6326  0009C8  0E00               	movlw	high password_change@c_password
  6327  0009CA  6E10               	movwf	strcmp@s1+1,c
  6328  0009CC  0E17               	movlw	low password_change@r_password
  6329  0009CE  6E11               	movwf	strcmp@s2,c
  6330  0009D0  0E00               	movlw	high password_change@r_password
  6331  0009D2  6E12               	movwf	strcmp@s2+1,c
  6332  0009D4  EC43  F00B         	call	_strcmp	;wreg free
  6333  0009D8  500F               	movf	?_strcmp,w,c
  6334  0009DA  1010               	iorwf	?_strcmp+1,w,c
  6335  0009DC  A4D8               	btfss	status,2,c
  6336  0009DE  D033               	goto	l4599
  6337                           
  6338                           ;password_time_change.c: 73: {
  6339                           ;password_time_change.c: 74: write_internal_eeprom(0x01, c_password[0]);
  6340  0009E0  C01C  F00F         	movff	password_change@c_password,write_internal_eeprom@data
  6341  0009E4  0E01               	movlw	1
  6342  0009E6  EC34  F00C         	call	_write_internal_eeprom
  6343                           
  6344                           ;password_time_change.c: 75: write_internal_eeprom(0x02, c_password[1]);
  6345  0009EA  C01D  F00F         	movff	password_change@c_password+1,write_internal_eeprom@data
  6346  0009EE  0E02               	movlw	2
  6347  0009F0  EC34  F00C         	call	_write_internal_eeprom
  6348                           
  6349                           ;password_time_change.c: 76: write_internal_eeprom(0x03, c_password[2]);
  6350  0009F4  C01E  F00F         	movff	password_change@c_password+2,write_internal_eeprom@data
  6351  0009F8  0E03               	movlw	3
  6352  0009FA  EC34  F00C         	call	_write_internal_eeprom
  6353                           
  6354                           ;password_time_change.c: 77: write_internal_eeprom(0x04, c_password[3]);
  6355  0009FE  C01F  F00F         	movff	password_change@c_password+3,write_internal_eeprom@data
  6356  000A02  0E04               	movlw	4
  6357  000A04  EC34  F00C         	call	_write_internal_eeprom
  6358                           
  6359                           ;password_time_change.c: 78: delay_fun();
  6360  000A08  EC73  F00A         	call	_delay_fun	;wreg free
  6361                           
  6362                           ;password_time_change.c: 80: clcd_write(0x01, 0);
  6363  000A0C  0E00               	movlw	0
  6364  000A0E  6E0F               	movwf	clcd_write@control_bit,c
  6365  000A10  0E01               	movlw	1
  6366  000A12  EC0D  F00C         	call	_clcd_write
  6367                           
  6368                           ;password_time_change.c: 81: clcd_write(0x0C, 0);
  6369  000A16  0E00               	movlw	0
  6370  000A18  6E0F               	movwf	clcd_write@control_bit,c
  6371  000A1A  0E0C               	movlw	12
  6372  000A1C  EC0D  F00C         	call	_clcd_write
  6373                           
  6374                           ;password_time_change.c: 82: clcd_print("password change", (0x80 + (0)));
  6375  000A20  0E55               	movlw	low STR_19
  6376  000A22  6E11               	movwf	clcd_print@data,c
  6377  000A24  0E2F               	movlw	high STR_19
  6378  000A26  6E12               	movwf	clcd_print@data+1,c
  6379  000A28  0E80               	movlw	128
  6380  000A2A  6E13               	movwf	clcd_print@addr,c
  6381  000A2C  EC43  F00A         	call	_clcd_print	;wreg free
  6382                           
  6383                           ;password_time_change.c: 83: clcd_print("Successfully", (0xC0 + (0)));
  6384  000A30  0E94               	movlw	low STR_20
  6385  000A32  6E11               	movwf	clcd_print@data,c
  6386  000A34  0E2F               	movlw	high STR_20
  6387  000A36  6E12               	movwf	clcd_print@data+1,c
  6388  000A38  0EC0               	movlw	192
  6389  000A3A  6E13               	movwf	clcd_print@addr,c
  6390  000A3C  EC43  F00A         	call	_clcd_print	;wreg free
  6391                           
  6392                           ;password_time_change.c: 84: delay_fun();
  6393  000A40  EC73  F00A         	call	_delay_fun	;wreg free
  6394                           
  6395                           ;password_time_change.c: 85: return 1;
  6396                           ;	Return value of _password_change is never used
  6397  000A44  0012               	return	
  6398  000A46                     l4599:
  6399                           
  6400                           ;password_time_change.c: 87: else if (count == 9 && (strcmp(c_password, r_password) != 0
      +                          ))
  6401  000A46  0E09               	movlw	9
  6402  000A48  1822               	xorwf	password_change@count,w,c
  6403  000A4A  1023               	iorwf	password_change@count+1,w,c
  6404  000A4C  A4D8               	btfss	status,2,c
  6405  000A4E  D735               	goto	l4521
  6406  000A50  0E1C               	movlw	low password_change@c_password
  6407  000A52  6E0F               	movwf	strcmp@s1,c
  6408  000A54  0E00               	movlw	high password_change@c_password
  6409  000A56  6E10               	movwf	strcmp@s1+1,c
  6410  000A58  0E17               	movlw	low password_change@r_password
  6411  000A5A  6E11               	movwf	strcmp@s2,c
  6412  000A5C  0E00               	movlw	high password_change@r_password
  6413  000A5E  6E12               	movwf	strcmp@s2+1,c
  6414  000A60  EC43  F00B         	call	_strcmp	;wreg free
  6415  000A64  500F               	movf	?_strcmp,w,c
  6416  000A66  1010               	iorwf	?_strcmp+1,w,c
  6417  000A68  B4D8               	btfsc	status,2,c
  6418  000A6A  D727               	goto	l4521
  6419                           
  6420                           ;password_time_change.c: 88: {
  6421                           ;password_time_change.c: 89: clcd_write(0x01, 0);
  6422  000A6C  0E00               	movlw	0
  6423  000A6E  6E0F               	movwf	clcd_write@control_bit,c
  6424  000A70  0E01               	movlw	1
  6425  000A72  EC0D  F00C         	call	_clcd_write
  6426                           
  6427                           ;password_time_change.c: 90: clcd_write(0x0C, 0);
  6428  000A76  0E00               	movlw	0
  6429  000A78  6E0F               	movwf	clcd_write@control_bit,c
  6430  000A7A  0E0C               	movlw	12
  6431  000A7C  EC0D  F00C         	call	_clcd_write
  6432                           
  6433                           ;password_time_change.c: 91: clcd_print("Change pass not", (0x80 + (0)));
  6434  000A80  0E65               	movlw	low STR_21
  6435  000A82  6E11               	movwf	clcd_print@data,c
  6436  000A84  0E2F               	movlw	high STR_21
  6437  000A86  6E12               	movwf	clcd_print@data+1,c
  6438  000A88  0E80               	movlw	128
  6439  000A8A  6E13               	movwf	clcd_print@addr,c
  6440  000A8C  EC43  F00A         	call	_clcd_print	;wreg free
  6441                           
  6442                           ;password_time_change.c: 92: clcd_print("Matched try again later", (0xC0 + (0)));
  6443  000A90  0EBD               	movlw	low STR_22
  6444  000A92  6E11               	movwf	clcd_print@data,c
  6445  000A94  0E2E               	movlw	high STR_22
  6446  000A96  6E12               	movwf	clcd_print@data+1,c
  6447  000A98  0EC0               	movlw	192
  6448  000A9A  6E13               	movwf	clcd_print@addr,c
  6449  000A9C  EC43  F00A         	call	_clcd_print	;wreg free
  6450                           
  6451                           ;password_time_change.c: 97: delay_fun();
  6452  000AA0  EC73  F00A         	call	_delay_fun	;wreg free
  6453                           
  6454                           ;password_time_change.c: 98: return 1;
  6455                           ;	Return value of _password_change is never used
  6456  000AA4  0012               	return	
  6457  000AA6                     __end_of_password_change:
  6458                           	opt stack 0
  6459                           tblptru	equ	0xFF8
  6460                           tblptrh	equ	0xFF7
  6461                           tblptrl	equ	0xFF6
  6462                           tablat	equ	0xFF5
  6463                           prodh	equ	0xFF4
  6464                           prodl	equ	0xFF3
  6465                           intcon	equ	0xFF2
  6466                           intcon2	equ	0xFF1
  6467                           postinc0	equ	0xFEE
  6468                           wreg	equ	0xFE8
  6469                           indf1	equ	0xFE7
  6470                           postdec1	equ	0xFE5
  6471                           plusw1	equ	0xFE3
  6472                           fsr1h	equ	0xFE2
  6473                           fsr1l	equ	0xFE1
  6474                           indf2	equ	0xFDF
  6475                           postinc2	equ	0xFDE
  6476                           postdec2	equ	0xFDD
  6477                           plusw2	equ	0xFDB
  6478                           fsr2h	equ	0xFDA
  6479                           fsr2l	equ	0xFD9
  6480                           status	equ	0xFD8
  6481                           
  6482 ;; *************** function _strcmp *****************
  6483 ;; Defined at:
  6484 ;;		line 33 in file "/opt/microchip/xc8/v1.36/sources/common/strcmp.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  s1              2   14[COMRAM] PTR const unsigned char 
  6487 ;;		 -> password_compare@password(5), password_change@c_password(5), 
  6488 ;;  s2              2   16[COMRAM] PTR const unsigned char 
  6489 ;;		 -> password_compare@enter_pass(5), password_change@r_password(5), 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  r               1   19[COMRAM] char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  2   14[COMRAM] int 
  6494 ;; Registers used:
  6495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6501 ;;      Params:         4       0       0       0       0       0       0
  6502 ;;      Locals:         1       0       0       0       0       0       0
  6503 ;;      Temps:          1       0       0       0       0       0       0
  6504 ;;      Totals:         6       0       0       0       0       0       0
  6505 ;;Total ram usage:        6 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; Hardware stack levels required when called:    1
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_password_change
  6512 ;;		_password_compare
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text32
  6517  001686                     __ptext32:
  6518                           	opt stack 0
  6519  001686                     _strcmp:
  6520                           	opt stack 28
  6521                           
  6522                           ;incstack = 0
  6523  001686  D004               	goto	l4393
  6524  001688                     l4391:
  6525  001688  4A0F               	infsnz	strcmp@s1,f,c
  6526  00168A  2A10               	incf	strcmp@s1+1,f,c
  6527  00168C  4A11               	infsnz	strcmp@s2,f,c
  6528  00168E  2A12               	incf	strcmp@s2+1,f,c
  6529  001690                     l4393:
  6530  001690  C00F  FFD9         	movff	strcmp@s1,fsr2l
  6531  001694  C010  FFDA         	movff	strcmp@s1+1,fsr2h
  6532  001698  50DF               	movf	indf2,w,c
  6533  00169A  6E13               	movwf	??_strcmp& (0+255),c
  6534  00169C  C011  FFD9         	movff	strcmp@s2,fsr2l
  6535  0016A0  C012  FFDA         	movff	strcmp@s2+1,fsr2h
  6536  0016A4  50DF               	movf	indf2,w,c
  6537  0016A6  0800               	sublw	0
  6538  0016A8  2413               	addwf	??_strcmp,w,c
  6539  0016AA  6E14               	movwf	strcmp@r,c
  6540  0016AC  5014               	movf	strcmp@r,w,c
  6541  0016AE  A4D8               	btfss	status,2,c
  6542  0016B0  D007               	goto	l4397
  6543  0016B2  C00F  FFD9         	movff	strcmp@s1,fsr2l
  6544  0016B6  C010  FFDA         	movff	strcmp@s1+1,fsr2h
  6545  0016BA  50DF               	movf	indf2,w,c
  6546  0016BC  A4D8               	btfss	status,2,c
  6547  0016BE  D7E4               	goto	l4391
  6548  0016C0                     l4397:
  6549  0016C0  5014               	movf	strcmp@r,w,c
  6550  0016C2  6E0F               	movwf	?_strcmp,c
  6551  0016C4  6A10               	clrf	?_strcmp+1,c
  6552  0016C6  BE0F               	btfsc	?_strcmp,7,c
  6553  0016C8  0610               	decf	?_strcmp+1,f,c
  6554  0016CA  0012               	return	
  6555  0016CC                     __end_of_strcmp:
  6556                           	opt stack 0
  6557                           tblptru	equ	0xFF8
  6558                           tblptrh	equ	0xFF7
  6559                           tblptrl	equ	0xFF6
  6560                           tablat	equ	0xFF5
  6561                           prodh	equ	0xFF4
  6562                           prodl	equ	0xFF3
  6563                           intcon	equ	0xFF2
  6564                           intcon2	equ	0xFF1
  6565                           postinc0	equ	0xFEE
  6566                           wreg	equ	0xFE8
  6567                           indf1	equ	0xFE7
  6568                           postdec1	equ	0xFE5
  6569                           plusw1	equ	0xFE3
  6570                           fsr1h	equ	0xFE2
  6571                           fsr1l	equ	0xFE1
  6572                           indf2	equ	0xFDF
  6573                           postinc2	equ	0xFDE
  6574                           postdec2	equ	0xFDD
  6575                           plusw2	equ	0xFDB
  6576                           fsr2h	equ	0xFDA
  6577                           fsr2l	equ	0xFD9
  6578                           status	equ	0xFD8
  6579                           
  6580 ;; *************** function _read_switches *****************
  6581 ;; Defined at:
  6582 ;;		line 88 in file "matrix_keypad.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  detection_ty    1    wreg     unsigned char 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  detection_ty    1   15[COMRAM] unsigned char 
  6587 ;;  key             1   16[COMRAM] unsigned char 
  6588 ;;  key1            1   14[COMRAM] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      unsigned char 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6598 ;;      Params:         0       0       0       0       0       0       0
  6599 ;;      Locals:         3       0       0       0       0       0       0
  6600 ;;      Temps:          0       0       0       0       0       0       0
  6601 ;;      Totals:         3       0       0       0       0       0       0
  6602 ;;Total ram usage:        3 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    2
  6605 ;; This function calls:
  6606 ;;		_scan_key
  6607 ;; This function is called by:
  6608 ;;		_main
  6609 ;;		_display_menu
  6610 ;;		_password_change
  6611 ;;		_view_log
  6612 ;;		_password_compare
  6613 ;;		_set_time
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text33
  6618  00170E                     __ptext33:
  6619                           	opt stack 0
  6620  00170E                     _read_switches:
  6621                           	opt stack 28
  6622                           
  6623                           ;incstack = 0
  6624                           ;read_switches@detection_type stored from wreg
  6625  00170E  6E10               	movwf	read_switches@detection_type,c
  6626                           
  6627                           ;matrix_keypad.c: 90: static unsigned char once = 1;
  6628                           ;matrix_keypad.c: 91: char key, key1;
  6629                           ;matrix_keypad.c: 93: if (detection_type == 1)
  6630  001710  0410               	decf	read_switches@detection_type,w,c
  6631  001712  A4D8               	btfss	status,2,c
  6632  001714  D015               	goto	l4301
  6633                           
  6634                           ;matrix_keypad.c: 94: {
  6635                           ;matrix_keypad.c: 95: key = scan_key() ;
  6636  001716  EC01  F009         	call	_scan_key	;wreg free
  6637  00171A  6E11               	movwf	read_switches@key,c
  6638                           
  6639                           ;matrix_keypad.c: 96: if (key != 0xFF && once)
  6640  00171C  2811               	incf	read_switches@key,w,c
  6641  00171E  B4D8               	btfsc	status,2,c
  6642  001720  D009               	goto	l4297
  6643  001722  5040               	movf	read_switches@once,w,c
  6644  001724  B4D8               	btfsc	status,2,c
  6645  001726  D006               	goto	l4297
  6646                           
  6647                           ;matrix_keypad.c: 97: {
  6648                           ;matrix_keypad.c: 98: key1 = key;
  6649  001728  C011  F00F         	movff	read_switches@key,read_switches@key1
  6650                           
  6651                           ;matrix_keypad.c: 99: once = 0;
  6652  00172C  0E00               	movlw	0
  6653  00172E  6E40               	movwf	read_switches@once,c
  6654                           
  6655                           ;matrix_keypad.c: 100: return key1;
  6656  001730  500F               	movf	read_switches@key1,w,c
  6657  001732  0012               	return	
  6658  001734                     l4297:
  6659                           
  6660                           ;matrix_keypad.c: 102: else if(key == 0xFF)
  6661  001734  2811               	incf	read_switches@key,w,c
  6662  001736  A4D8               	btfss	status,2,c
  6663  001738  D009               	goto	l4307
  6664                           
  6665                           ;matrix_keypad.c: 103: {
  6666                           ;matrix_keypad.c: 104: once = 1;
  6667  00173A  0E01               	movlw	1
  6668  00173C  6E40               	movwf	read_switches@once,c
  6669                           
  6670                           ;matrix_keypad.c: 105: }
  6671                           ;matrix_keypad.c: 106: }
  6672  00173E  D006               	goto	l4307
  6673  001740                     l4301:
  6674                           
  6675                           ;matrix_keypad.c: 107: else if (detection_type == 0)
  6676  001740  5010               	movf	read_switches@detection_type,w,c
  6677  001742  A4D8               	btfss	status,2,c
  6678  001744  D003               	goto	l4307
  6679                           
  6680                           ;matrix_keypad.c: 108: {
  6681                           ;matrix_keypad.c: 109: return scan_key();
  6682  001746  EC01  F009         	call	_scan_key	;wreg free
  6683  00174A  0012               	return	
  6684  00174C                     l4307:
  6685                           
  6686                           ;matrix_keypad.c: 113: }
  6687                           ;matrix_keypad.c: 115: return 0xFF;
  6688  00174C  0EFF               	movlw	255
  6689  00174E  0012               	return	
  6690  001750                     __end_of_read_switches:
  6691                           	opt stack 0
  6692                           tblptru	equ	0xFF8
  6693                           tblptrh	equ	0xFF7
  6694                           tblptrl	equ	0xFF6
  6695                           tablat	equ	0xFF5
  6696                           prodh	equ	0xFF4
  6697                           prodl	equ	0xFF3
  6698                           intcon	equ	0xFF2
  6699                           intcon2	equ	0xFF1
  6700                           postinc0	equ	0xFEE
  6701                           wreg	equ	0xFE8
  6702                           indf1	equ	0xFE7
  6703                           postdec1	equ	0xFE5
  6704                           plusw1	equ	0xFE3
  6705                           fsr1h	equ	0xFE2
  6706                           fsr1l	equ	0xFE1
  6707                           indf2	equ	0xFDF
  6708                           postinc2	equ	0xFDE
  6709                           postdec2	equ	0xFDD
  6710                           plusw2	equ	0xFDB
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           
  6715 ;; *************** function _scan_key *****************
  6716 ;; Defined at:
  6717 ;;		line 18 in file "matrix_keypad.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      unsigned char 
  6724 ;; Registers used:
  6725 ;;		wreg
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6731 ;;      Params:         0       0       0       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0
  6734 ;;      Totals:         0       0       0       0       0       0       0
  6735 ;;Total ram usage:        0 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    1
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_read_switches
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text34
  6746  001202                     __ptext34:
  6747                           	opt stack 0
  6748  001202                     _scan_key:
  6749                           	opt stack 28
  6750                           
  6751                           ;matrix_keypad.c: 20: RB5 = 0;
  6752                           
  6753                           ;incstack = 0
  6754  001202  9A81               	bcf	3969,5,c	;volatile
  6755                           
  6756                           ;matrix_keypad.c: 21: RB6 = 1;
  6757  001204  8C81               	bsf	3969,6,c	;volatile
  6758                           
  6759                           ;matrix_keypad.c: 22: RB7 = 1;
  6760  001206  8E81               	bsf	3969,7,c	;volatile
  6761                           
  6762                           ;matrix_keypad.c: 24: if (RB1 == 0)
  6763  001208  B281               	btfsc	3969,1,c	;volatile
  6764  00120A  D002               	goto	l220
  6765                           
  6766                           ;matrix_keypad.c: 25: {
  6767                           ;matrix_keypad.c: 26: return 1;
  6768  00120C  0E01               	movlw	1
  6769  00120E  0012               	return	
  6770  001210                     l220:
  6771                           
  6772                           ;matrix_keypad.c: 28: else if (RB2 == 0)
  6773  001210  B481               	btfsc	3969,2,c	;volatile
  6774  001212  D002               	goto	l223
  6775                           
  6776                           ;matrix_keypad.c: 29: {
  6777                           ;matrix_keypad.c: 30: return 4;
  6778  001214  0E04               	movlw	4
  6779  001216  0012               	return	
  6780  001218                     l223:
  6781                           
  6782                           ;matrix_keypad.c: 32: else if (RB3 == 0)
  6783  001218  B681               	btfsc	3969,3,c	;volatile
  6784  00121A  D002               	goto	l225
  6785                           
  6786                           ;matrix_keypad.c: 33: {
  6787                           ;matrix_keypad.c: 34: return 7;
  6788  00121C  0E07               	movlw	7
  6789  00121E  0012               	return	
  6790  001220                     l225:
  6791                           
  6792                           ;matrix_keypad.c: 36: else if (RB4 == 0)
  6793  001220  B881               	btfsc	3969,4,c	;volatile
  6794  001222  D002               	goto	l222
  6795                           
  6796                           ;matrix_keypad.c: 37: {
  6797                           ;matrix_keypad.c: 38: return 10;
  6798  001224  0E0A               	movlw	10
  6799  001226  0012               	return	
  6800  001228                     l222:
  6801                           
  6802                           ;matrix_keypad.c: 39: }
  6803                           ;matrix_keypad.c: 41: RB5 = 1;
  6804  001228  8A81               	bsf	3969,5,c	;volatile
  6805                           
  6806                           ;matrix_keypad.c: 42: RB6 = 0;
  6807  00122A  9C81               	bcf	3969,6,c	;volatile
  6808                           
  6809                           ;matrix_keypad.c: 43: RB7 = 1;
  6810  00122C  8E81               	bsf	3969,7,c	;volatile
  6811                           
  6812                           ;matrix_keypad.c: 45: if (RB1 == 0)
  6813  00122E  B281               	btfsc	3969,1,c	;volatile
  6814  001230  D002               	goto	l228
  6815                           
  6816                           ;matrix_keypad.c: 46: {
  6817                           ;matrix_keypad.c: 47: return 2;
  6818  001232  0E02               	movlw	2
  6819  001234  0012               	return	
  6820  001236                     l228:
  6821                           
  6822                           ;matrix_keypad.c: 49: else if (RB2 == 0)
  6823  001236  B481               	btfsc	3969,2,c	;volatile
  6824  001238  D002               	goto	l230
  6825                           
  6826                           ;matrix_keypad.c: 50: {
  6827                           ;matrix_keypad.c: 51: return 5;
  6828  00123A  0E05               	movlw	5
  6829  00123C  0012               	return	
  6830  00123E                     l230:
  6831                           
  6832                           ;matrix_keypad.c: 53: else if (RB3 == 0)
  6833  00123E  B681               	btfsc	3969,3,c	;volatile
  6834  001240  D002               	goto	l232
  6835                           
  6836                           ;matrix_keypad.c: 54: {
  6837                           ;matrix_keypad.c: 55: return 8;
  6838  001242  0E08               	movlw	8
  6839  001244  0012               	return	
  6840  001246                     l232:
  6841                           
  6842                           ;matrix_keypad.c: 57: else if (RB4 == 0)
  6843  001246  B881               	btfsc	3969,4,c	;volatile
  6844  001248  D002               	goto	l229
  6845                           
  6846                           ;matrix_keypad.c: 58: {
  6847                           ;matrix_keypad.c: 59: return 11;
  6848  00124A  0E0B               	movlw	11
  6849  00124C  0012               	return	
  6850  00124E                     l229:
  6851                           
  6852                           ;matrix_keypad.c: 60: }
  6853                           ;matrix_keypad.c: 62: RB5 = 1;
  6854  00124E  8A81               	bsf	3969,5,c	;volatile
  6855                           
  6856                           ;matrix_keypad.c: 63: RB6 = 1;
  6857  001250  8C81               	bsf	3969,6,c	;volatile
  6858                           
  6859                           ;matrix_keypad.c: 64: RB7 = 0;
  6860  001252  9E81               	bcf	3969,7,c	;volatile
  6861                           
  6862                           ;matrix_keypad.c: 66: RB7 = 0;
  6863  001254  9E81               	bcf	3969,7,c	;volatile
  6864                           
  6865                           ;matrix_keypad.c: 68: if (RB1 == 0)
  6866  001256  B281               	btfsc	3969,1,c	;volatile
  6867  001258  D002               	goto	l235
  6868                           
  6869                           ;matrix_keypad.c: 69: {
  6870                           ;matrix_keypad.c: 70: return 3;
  6871  00125A  0E03               	movlw	3
  6872  00125C  0012               	return	
  6873  00125E                     l235:
  6874                           
  6875                           ;matrix_keypad.c: 72: else if (RB2 == 0)
  6876  00125E  B481               	btfsc	3969,2,c	;volatile
  6877  001260  D002               	goto	l237
  6878                           
  6879                           ;matrix_keypad.c: 73: {
  6880                           ;matrix_keypad.c: 74: return 6;
  6881  001262  0E06               	movlw	6
  6882  001264  0012               	return	
  6883  001266                     l237:
  6884                           
  6885                           ;matrix_keypad.c: 76: else if (RB3 == 0)
  6886  001266  B681               	btfsc	3969,3,c	;volatile
  6887  001268  D002               	goto	l239
  6888                           
  6889                           ;matrix_keypad.c: 77: {
  6890                           ;matrix_keypad.c: 78: return 9;
  6891  00126A  0E09               	movlw	9
  6892  00126C  0012               	return	
  6893  00126E                     l239:
  6894                           
  6895                           ;matrix_keypad.c: 80: else if (RB4 == 0)
  6896  00126E  B881               	btfsc	3969,4,c	;volatile
  6897  001270  D002               	goto	l4221
  6898                           
  6899                           ;matrix_keypad.c: 81: {
  6900                           ;matrix_keypad.c: 82: return 12;
  6901  001272  0E0C               	movlw	12
  6902  001274  0012               	return	
  6903  001276                     l4221:
  6904                           
  6905                           ;matrix_keypad.c: 83: }
  6906                           ;matrix_keypad.c: 85: return 0xFF;
  6907  001276  0EFF               	movlw	255
  6908  001278  0012               	return	
  6909  00127A                     __end_of_scan_key:
  6910                           	opt stack 0
  6911                           tblptru	equ	0xFF8
  6912                           tblptrh	equ	0xFF7
  6913                           tblptrl	equ	0xFF6
  6914                           tablat	equ	0xFF5
  6915                           prodh	equ	0xFF4
  6916                           prodl	equ	0xFF3
  6917                           intcon	equ	0xFF2
  6918                           intcon2	equ	0xFF1
  6919                           postinc0	equ	0xFEE
  6920                           wreg	equ	0xFE8
  6921                           indf1	equ	0xFE7
  6922                           postdec1	equ	0xFE5
  6923                           plusw1	equ	0xFE3
  6924                           fsr1h	equ	0xFE2
  6925                           fsr1l	equ	0xFE1
  6926                           indf2	equ	0xFDF
  6927                           postinc2	equ	0xFDE
  6928                           postdec2	equ	0xFDD
  6929                           plusw2	equ	0xFDB
  6930                           fsr2h	equ	0xFDA
  6931                           fsr2l	equ	0xFD9
  6932                           status	equ	0xFD8
  6933                           
  6934 ;; *************** function _delay_fun *****************
  6935 ;; Defined at:
  6936 ;;		line 173 in file "main.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  k               2   18[COMRAM] int 
  6941 ;;  j               2   16[COMRAM] int 
  6942 ;;  i               2   14[COMRAM] int 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6952 ;;      Params:         0       0       0       0       0       0       0
  6953 ;;      Locals:         6       0       0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0
  6955 ;;      Totals:         6       0       0       0       0       0       0
  6956 ;;Total ram usage:        6 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    1
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_main
  6963 ;;		_password_change
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text35
  6968  0014E6                     __ptext35:
  6969                           	opt stack 0
  6970  0014E6                     _delay_fun:
  6971                           	opt stack 27
  6972                           
  6973                           ;main.c: 175: for (int i = 0; i < 5000; ++i)
  6974                           
  6975                           ;incstack = 0
  6976  0014E6  0E00               	movlw	0
  6977  0014E8  6E10               	movwf	delay_fun@i+1,c
  6978  0014EA  0E00               	movlw	0
  6979  0014EC  6E0F               	movwf	delay_fun@i,c
  6980  0014EE                     l4313:
  6981  0014EE  BE10               	btfsc	delay_fun@i+1,7,c
  6982  0014F0  D006               	goto	l4317
  6983  0014F2  0E88               	movlw	136
  6984  0014F4  5C0F               	subwf	delay_fun@i,w,c
  6985  0014F6  0E13               	movlw	19
  6986  0014F8  5810               	subwfb	delay_fun@i+1,w,c
  6987  0014FA  B0D8               	btfsc	status,0,c
  6988  0014FC  0012               	return	
  6989  0014FE                     l4317:
  6990                           
  6991                           ;main.c: 176: {
  6992                           ;main.c: 177: for(int j = 0; j< 100; j++);
  6993  0014FE  0E00               	movlw	0
  6994  001500  6E12               	movwf	delay_fun@j+1,c
  6995  001502  0E00               	movlw	0
  6996  001504  6E11               	movwf	delay_fun@j,c
  6997  001506                     l4319:
  6998  001506  BE12               	btfsc	delay_fun@j+1,7,c
  6999  001508  D006               	goto	l4323
  7000  00150A  5012               	movf	delay_fun@j+1,w,c
  7001  00150C  E107               	bnz	l4327
  7002  00150E  0E64               	movlw	100
  7003  001510  5C11               	subwf	delay_fun@j,w,c
  7004  001512  B0D8               	btfsc	status,0,c
  7005  001514  D003               	goto	l4327
  7006  001516                     l4323:
  7007  001516  4A11               	infsnz	delay_fun@j,f,c
  7008  001518  2A12               	incf	delay_fun@j+1,f,c
  7009  00151A  D7F5               	goto	l4319
  7010  00151C                     l4327:
  7011                           
  7012                           ;main.c: 178: for(int k = 0; k< 100; k++);
  7013  00151C  0E00               	movlw	0
  7014  00151E  6E14               	movwf	delay_fun@k+1,c
  7015  001520  0E00               	movlw	0
  7016  001522  6E13               	movwf	delay_fun@k,c
  7017  001524                     l4329:
  7018  001524  BE14               	btfsc	delay_fun@k+1,7,c
  7019  001526  D006               	goto	l4333
  7020  001528  5014               	movf	delay_fun@k+1,w,c
  7021  00152A  E107               	bnz	l4337
  7022  00152C  0E64               	movlw	100
  7023  00152E  5C13               	subwf	delay_fun@k,w,c
  7024  001530  B0D8               	btfsc	status,0,c
  7025  001532  D003               	goto	l4337
  7026  001534                     l4333:
  7027  001534  4A13               	infsnz	delay_fun@k,f,c
  7028  001536  2A14               	incf	delay_fun@k+1,f,c
  7029  001538  D7F5               	goto	l4329
  7030  00153A                     l4337:
  7031  00153A  4A0F               	infsnz	delay_fun@i,f,c
  7032  00153C  2A10               	incf	delay_fun@i+1,f,c
  7033  00153E  D7D7               	goto	l4313
  7034  001540                     __end_of_delay_fun:
  7035                           	opt stack 0
  7036                           tblptru	equ	0xFF8
  7037                           tblptrh	equ	0xFF7
  7038                           tblptrl	equ	0xFF6
  7039                           tablat	equ	0xFF5
  7040                           prodh	equ	0xFF4
  7041                           prodl	equ	0xFF3
  7042                           intcon	equ	0xFF2
  7043                           intcon2	equ	0xFF1
  7044                           postinc0	equ	0xFEE
  7045                           wreg	equ	0xFE8
  7046                           indf1	equ	0xFE7
  7047                           postdec1	equ	0xFE5
  7048                           plusw1	equ	0xFE3
  7049                           fsr1h	equ	0xFE2
  7050                           fsr1l	equ	0xFE1
  7051                           indf2	equ	0xFDF
  7052                           postinc2	equ	0xFDE
  7053                           postdec2	equ	0xFDD
  7054                           plusw2	equ	0xFDB
  7055                           fsr2h	equ	0xFDA
  7056                           fsr2l	equ	0xFD9
  7057                           status	equ	0xFD8
  7058                           
  7059 ;; *************** function _clcd_putch *****************
  7060 ;; Defined at:
  7061 ;;		line 51 in file "clcd.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  data            1    wreg     const unsigned char 
  7064 ;;  addr            1   16[COMRAM] unsigned char 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  data            1   17[COMRAM] const unsigned char 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, status,2, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7076 ;;      Params:         1       0       0       0       0       0       0
  7077 ;;      Locals:         1       0       0       0       0       0       0
  7078 ;;      Temps:          0       0       0       0       0       0       0
  7079 ;;      Totals:         2       0       0       0       0       0       0
  7080 ;;Total ram usage:        2 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    2
  7083 ;; This function calls:
  7084 ;;		_clcd_write
  7085 ;; This function is called by:
  7086 ;;		_main
  7087 ;;		_display_menu
  7088 ;;		_password_change
  7089 ;;		_view_log
  7090 ;;		_password_compare
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           	psect	text36
  7095  0018E8                     __ptext36:
  7096                           	opt stack 0
  7097  0018E8                     _clcd_putch:
  7098                           	opt stack 27
  7099                           
  7100                           ;incstack = 0
  7101                           ;clcd_putch@data stored from wreg
  7102  0018E8  6E12               	movwf	clcd_putch@data,c
  7103                           
  7104                           ;clcd.c: 53: clcd_write(addr, 0);
  7105  0018EA  0E00               	movlw	0
  7106  0018EC  6E0F               	movwf	clcd_write@control_bit,c
  7107  0018EE  5011               	movf	clcd_putch@addr,w,c
  7108  0018F0  EC0D  F00C         	call	_clcd_write
  7109                           
  7110                           ;clcd.c: 54: clcd_write(data, 1);
  7111  0018F4  0E01               	movlw	1
  7112  0018F6  6E0F               	movwf	clcd_write@control_bit,c
  7113  0018F8  5012               	movf	clcd_putch@data,w,c
  7114  0018FA  EC0D  F00C         	call	_clcd_write
  7115  0018FE  0012               	return		;funcret
  7116  001900                     __end_of_clcd_putch:
  7117                           	opt stack 0
  7118                           tblptru	equ	0xFF8
  7119                           tblptrh	equ	0xFF7
  7120                           tblptrl	equ	0xFF6
  7121                           tablat	equ	0xFF5
  7122                           prodh	equ	0xFF4
  7123                           prodl	equ	0xFF3
  7124                           intcon	equ	0xFF2
  7125                           intcon2	equ	0xFF1
  7126                           postinc0	equ	0xFEE
  7127                           wreg	equ	0xFE8
  7128                           indf1	equ	0xFE7
  7129                           postdec1	equ	0xFE5
  7130                           plusw1	equ	0xFE3
  7131                           fsr1h	equ	0xFE2
  7132                           fsr1l	equ	0xFE1
  7133                           indf2	equ	0xFDF
  7134                           postinc2	equ	0xFDE
  7135                           postdec2	equ	0xFDD
  7136                           plusw2	equ	0xFDB
  7137                           fsr2h	equ	0xFDA
  7138                           fsr2l	equ	0xFD9
  7139                           status	equ	0xFD8
  7140                           
  7141 ;; *************** function _download_log *****************
  7142 ;; Defined at:
  7143 ;;		line 11 in file "download_log.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;		None
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  new1           16   17[COMRAM] unsigned char [16]
  7148 ;;  i               2   35[COMRAM] short 
  7149 ;;  j               2   33[COMRAM] short 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  2  164[None  ] int 
  7152 ;; Registers used:
  7153 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7159 ;;      Params:         0       0       0       0       0       0       0
  7160 ;;      Locals:        20       0       0       0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0
  7162 ;;      Totals:        20       0       0       0       0       0       0
  7163 ;;Total ram usage:       20 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    3
  7166 ;; This function calls:
  7167 ;;		_init_uart
  7168 ;;		_puts
  7169 ;;		_read_internal_eeprom
  7170 ;; This function is called by:
  7171 ;;		_display_menu
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text37
  7176  001068                     __ptext37:
  7177                           	opt stack 0
  7178  001068                     _download_log:
  7179                           	opt stack 26
  7180                           
  7181                           ;download_log.c: 13: init_uart();
  7182                           
  7183                           ;incstack = 0
  7184  001068  ECA8  F00B         	call	_init_uart	;wreg free
  7185                           
  7186                           ;download_log.c: 15: short i, j = 0;
  7187  00106C  0E00               	movlw	0
  7188  00106E  6E23               	movwf	download_log@j+1,c
  7189  001070  0E00               	movlw	0
  7190  001072  6E22               	movwf	download_log@j,c
  7191                           
  7192                           ;download_log.c: 16: unsigned char new1[16];
  7193                           ;download_log.c: 21: puts("LOG DOWNLOADED.\n\r");
  7194  001074  0E11               	movlw	low STR_14
  7195  001076  6E10               	movwf	puts@s,c
  7196  001078  0E2F               	movlw	high STR_14
  7197  00107A  6E11               	movwf	puts@s+1,c
  7198  00107C  ECF4  F00A         	call	_puts	;wreg free
  7199                           
  7200                           ;download_log.c: 22: puts("TIME     EVE  SPD");
  7201  001080  0E23               	movlw	low STR_15
  7202  001082  6E10               	movwf	puts@s,c
  7203  001084  0E2F               	movlw	high STR_15
  7204  001086  6E11               	movwf	puts@s+1,c
  7205  001088  ECF4  F00A         	call	_puts	;wreg free
  7206                           
  7207                           ;download_log.c: 25: {
  7208                           ;download_log.c: 27: while (j < 10)
  7209                           
  7210                           ;download_log.c: 24: while(1)
  7211  00108C  D029               	goto	l4785
  7212  00108E                     l4767:
  7213                           
  7214                           ;download_log.c: 28: {
  7215                           ;download_log.c: 30: for(i = 0; i < 16; i++)
  7216  00108E  0E00               	movlw	0
  7217  001090  6E25               	movwf	download_log@i+1,c
  7218  001092  0E00               	movlw	0
  7219  001094  6E24               	movwf	download_log@i,c
  7220  001096                     l4769:
  7221  001096  BE25               	btfsc	download_log@i+1,7,c
  7222  001098  D006               	goto	l4773
  7223  00109A  5025               	movf	download_log@i+1,w,c
  7224  00109C  E113               	bnz	l4781
  7225  00109E  0E10               	movlw	16
  7226  0010A0  5C24               	subwf	download_log@i,w,c
  7227  0010A2  B0D8               	btfsc	status,0,c
  7228  0010A4  D00F               	goto	l4781
  7229  0010A6                     l4773:
  7230                           
  7231                           ;download_log.c: 31: {
  7232                           ;download_log.c: 32: new1[i] = read_internal_eeprom(save);
  7233  0010A6  0E12               	movlw	low download_log@new1
  7234  0010A8  2424               	addwf	download_log@i,w,c
  7235  0010AA  6ED9               	movwf	fsr2l,c
  7236  0010AC  0E00               	movlw	high download_log@new1
  7237  0010AE  2025               	addwfc	download_log@i+1,w,c
  7238  0010B0  6EDA               	movwf	fsr2h,c
  7239  0010B2  503E               	movf	_save,w,c
  7240  0010B4  EC9D  F00C         	call	_read_internal_eeprom
  7241  0010B8  6EDF               	movwf	indf2,c
  7242                           
  7243                           ;download_log.c: 33: save++;
  7244  0010BA  4A3E               	infsnz	_save,f,c
  7245  0010BC  2A3F               	incf	_save+1,f,c
  7246  0010BE  4A24               	infsnz	download_log@i,f,c
  7247  0010C0  2A25               	incf	download_log@i+1,f,c
  7248  0010C2  D7E9               	goto	l4769
  7249  0010C4                     l4781:
  7250                           
  7251                           ;download_log.c: 34: }
  7252                           ;download_log.c: 36: puts(new1);
  7253  0010C4  0E12               	movlw	low download_log@new1
  7254  0010C6  6E10               	movwf	puts@s,c
  7255  0010C8  0E00               	movlw	high download_log@new1
  7256  0010CA  6E11               	movwf	puts@s+1,c
  7257  0010CC  ECF4  F00A         	call	_puts	;wreg free
  7258                           
  7259                           ;download_log.c: 37: puts("\n\r");
  7260  0010D0  0E20               	movlw	low (STR_14+15)
  7261  0010D2  6E10               	movwf	puts@s,c
  7262  0010D4  0E2F               	movlw	high (STR_14+15)
  7263  0010D6  6E11               	movwf	puts@s+1,c
  7264  0010D8  ECF4  F00A         	call	_puts	;wreg free
  7265                           
  7266                           ;download_log.c: 38: j++;
  7267  0010DC  4A22               	infsnz	download_log@j,f,c
  7268  0010DE  2A23               	incf	download_log@j+1,f,c
  7269  0010E0                     l4785:
  7270  0010E0  BE23               	btfsc	download_log@j+1,7,c
  7271  0010E2  D7D5               	goto	l4767
  7272  0010E4  5023               	movf	download_log@j+1,w,c
  7273  0010E6  E104               	bnz	l4787
  7274  0010E8  0E0A               	movlw	10
  7275  0010EA  5C22               	subwf	download_log@j,w,c
  7276  0010EC  A0D8               	btfss	status,0,c
  7277  0010EE  D7CF               	goto	l4767
  7278  0010F0                     l4787:
  7279                           
  7280                           ;download_log.c: 39: }
  7281                           ;download_log.c: 41: if (save == 165)
  7282  0010F0  0EA5               	movlw	165
  7283  0010F2  183E               	xorwf	_save,w,c
  7284  0010F4  103F               	iorwf	_save+1,w,c
  7285  0010F6  A4D8               	btfss	status,2,c
  7286  0010F8  D7F3               	goto	l4785
  7287                           
  7288                           ;download_log.c: 42: {
  7289                           ;download_log.c: 43: save = 5;
  7290  0010FA  0E00               	movlw	0
  7291  0010FC  6E3F               	movwf	_save+1,c
  7292  0010FE  0E05               	movlw	5
  7293  001100  6E3E               	movwf	_save,c
  7294                           
  7295                           ;download_log.c: 44: return 1;
  7296                           ;	Return value of _download_log is never used
  7297  001102  0012               	return	
  7298  001104                     __end_of_download_log:
  7299                           	opt stack 0
  7300                           tblptru	equ	0xFF8
  7301                           tblptrh	equ	0xFF7
  7302                           tblptrl	equ	0xFF6
  7303                           tablat	equ	0xFF5
  7304                           prodh	equ	0xFF4
  7305                           prodl	equ	0xFF3
  7306                           intcon	equ	0xFF2
  7307                           intcon2	equ	0xFF1
  7308                           postinc0	equ	0xFEE
  7309                           wreg	equ	0xFE8
  7310                           indf1	equ	0xFE7
  7311                           postdec1	equ	0xFE5
  7312                           plusw1	equ	0xFE3
  7313                           fsr1h	equ	0xFE2
  7314                           fsr1l	equ	0xFE1
  7315                           indf2	equ	0xFDF
  7316                           postinc2	equ	0xFDE
  7317                           postdec2	equ	0xFDD
  7318                           plusw2	equ	0xFDB
  7319                           fsr2h	equ	0xFDA
  7320                           fsr2l	equ	0xFD9
  7321                           status	equ	0xFD8
  7322                           
  7323 ;; *************** function _read_internal_eeprom *****************
  7324 ;; Defined at:
  7325 ;;		line 41 in file "eeprom.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;  address         1    wreg     unsigned char 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;  address         1   14[COMRAM] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      unsigned char 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7339 ;;      Params:         0       0       0       0       0       0       0
  7340 ;;      Locals:         1       0       0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0       0
  7342 ;;      Totals:         1       0       0       0       0       0       0
  7343 ;;Total ram usage:        1 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    1
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_download_log
  7350 ;;		_view_log
  7351 ;;		_password_compare
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text38
  7356  00193A                     __ptext38:
  7357                           	opt stack 0
  7358  00193A                     _read_internal_eeprom:
  7359                           	opt stack 28
  7360                           
  7361                           ;incstack = 0
  7362                           ;read_internal_eeprom@address stored from wreg
  7363  00193A  6E0F               	movwf	read_internal_eeprom@address,c
  7364                           
  7365                           ;eeprom.c: 44: EEADR = address;
  7366  00193C  C00F  FFA9         	movff	read_internal_eeprom@address,4009	;volatile
  7367                           
  7368                           ;eeprom.c: 47: EECON1bits.WREN = 0;
  7369  001940  94A6               	bcf	4006,2,c	;volatile
  7370                           
  7371                           ;eeprom.c: 50: EECON1bits.EEPGD = 0;
  7372  001942  9EA6               	bcf	4006,7,c	;volatile
  7373                           
  7374                           ;eeprom.c: 53: EECON1bits.CFGS = 0;
  7375  001944  9CA6               	bcf	4006,6,c	;volatile
  7376                           
  7377                           ;eeprom.c: 56: EECON1bits.RD = 1;
  7378  001946  80A6               	bsf	4006,0,c	;volatile
  7379                           
  7380                           ;eeprom.c: 59: return EEDATA;
  7381  001948  50A8               	movf	4008,w,c	;volatile
  7382  00194A  0012               	return	
  7383  00194C                     __end_of_read_internal_eeprom:
  7384                           	opt stack 0
  7385                           tblptru	equ	0xFF8
  7386                           tblptrh	equ	0xFF7
  7387                           tblptrl	equ	0xFF6
  7388                           tablat	equ	0xFF5
  7389                           prodh	equ	0xFF4
  7390                           prodl	equ	0xFF3
  7391                           intcon	equ	0xFF2
  7392                           intcon2	equ	0xFF1
  7393                           postinc0	equ	0xFEE
  7394                           wreg	equ	0xFE8
  7395                           indf1	equ	0xFE7
  7396                           postdec1	equ	0xFE5
  7397                           plusw1	equ	0xFE3
  7398                           fsr1h	equ	0xFE2
  7399                           fsr1l	equ	0xFE1
  7400                           indf2	equ	0xFDF
  7401                           postinc2	equ	0xFDE
  7402                           postdec2	equ	0xFDD
  7403                           plusw2	equ	0xFDB
  7404                           fsr2h	equ	0xFDA
  7405                           fsr2l	equ	0xFD9
  7406                           status	equ	0xFD8
  7407                           
  7408 ;; *************** function _puts *****************
  7409 ;; Defined at:
  7410 ;;		line 90 in file "uart.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7413 ;;		 -> STR_16(3), download_log@new1(16), STR_15(18), STR_14(18), 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  2   15[COMRAM] int 
  7418 ;; Registers used:
  7419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7425 ;;      Params:         2       0       0       0       0       0       0
  7426 ;;      Locals:         0       0       0       0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0
  7428 ;;      Totals:         2       0       0       0       0       0       0
  7429 ;;Total ram usage:        2 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    2
  7432 ;; This function calls:
  7433 ;;		_putch
  7434 ;; This function is called by:
  7435 ;;		_download_log
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text39
  7440  0015E8                     __ptext39:
  7441                           	opt stack 0
  7442  0015E8                     _puts:
  7443                           	opt stack 26
  7444                           
  7445                           ;uart.c: 92: while(*s)
  7446                           
  7447                           ;incstack = 0
  7448  0015E8  D014               	goto	l4373
  7449  0015EA                     l4369:
  7450                           
  7451                           ;uart.c: 93: {
  7452                           ;uart.c: 94: putch(*s++);
  7453  0015EA  C010  FFF6         	movff	puts@s,tblptrl
  7454  0015EE  C011  FFF7         	movff	puts@s+1,tblptrh
  7455  0015F2  6AF8               	clrf	tblptru,c
  7456  0015F4  0E05               	movlw	(high __ramtop+-1)
  7457  0015F6  64F7               	cpfsgt	tblptrh,c
  7458  0015F8  D003               	bra	u3687
  7459  0015FA  0008               	tblrd		*
  7460  0015FC  50F5               	movf	tablat,w,c
  7461  0015FE  D005               	bra	u3680
  7462  001600                     u3687:
  7463  001600  CFF6 FFE9          	movff	tblptrl,fsr0l
  7464  001604  CFF7 FFEA          	movff	tblptrh,fsr0h
  7465  001608  50EF               	movf	indf0,w,c
  7466  00160A                     u3680:
  7467  00160A  ECC1  F00C         	call	_putch
  7468  00160E  4A10               	infsnz	puts@s,f,c
  7469  001610  2A11               	incf	puts@s+1,f,c
  7470  001612                     l4373:
  7471  001612  C010  FFF6         	movff	puts@s,tblptrl
  7472  001616  C011  FFF7         	movff	puts@s+1,tblptrh
  7473  00161A  6AF8               	clrf	tblptru,c
  7474  00161C  0E05               	movlw	(high __ramtop+-1)
  7475  00161E  64F7               	cpfsgt	tblptrh,c
  7476  001620  D003               	bra	u3697
  7477  001622  0008               	tblrd		*
  7478  001624  50F5               	movf	tablat,w,c
  7479  001626  D005               	bra	u3690
  7480  001628                     u3697:
  7481  001628  CFF6 FFE9          	movff	tblptrl,fsr0l
  7482  00162C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7483  001630  50EF               	movf	indf0,w,c
  7484  001632                     u3690:
  7485  001632  0900               	iorlw	0
  7486  001634  B4D8               	btfsc	status,2,c
  7487  001636  0012               	return	
  7488  001638  D7D8               	goto	l4369
  7489  00163A                     __end_of_puts:
  7490                           	opt stack 0
  7491                           tblptru	equ	0xFF8
  7492                           tblptrh	equ	0xFF7
  7493                           tblptrl	equ	0xFF6
  7494                           tablat	equ	0xFF5
  7495                           prodh	equ	0xFF4
  7496                           prodl	equ	0xFF3
  7497                           intcon	equ	0xFF2
  7498                           intcon2	equ	0xFF1
  7499                           indf0	equ	0xFEF
  7500                           postinc0	equ	0xFEE
  7501                           fsr0h	equ	0xFEA
  7502                           fsr0l	equ	0xFE9
  7503                           wreg	equ	0xFE8
  7504                           indf1	equ	0xFE7
  7505                           postdec1	equ	0xFE5
  7506                           plusw1	equ	0xFE3
  7507                           fsr1h	equ	0xFE2
  7508                           fsr1l	equ	0xFE1
  7509                           indf2	equ	0xFDF
  7510                           postinc2	equ	0xFDE
  7511                           postdec2	equ	0xFDD
  7512                           plusw2	equ	0xFDB
  7513                           fsr2h	equ	0xFDA
  7514                           fsr2l	equ	0xFD9
  7515                           status	equ	0xFD8
  7516                           
  7517 ;; *************** function _putch *****************
  7518 ;; Defined at:
  7519 ;;		line 79 in file "uart.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;  byte            1    wreg     unsigned char 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  byte            1   14[COMRAM] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7533 ;;      Params:         0       0       0       0       0       0       0
  7534 ;;      Locals:         1       0       0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0
  7536 ;;      Totals:         1       0       0       0       0       0       0
  7537 ;;Total ram usage:        1 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    1
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_puts
  7544 ;;		_getche
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text40
  7549  001982                     __ptext40:
  7550                           	opt stack 0
  7551  001982                     _putch:
  7552                           	opt stack 26
  7553                           
  7554                           ;incstack = 0
  7555                           ;putch@byte stored from wreg
  7556  001982  6E0F               	movwf	putch@byte,c
  7557  001984                     l355:
  7558  001984  A89E               	btfss	3998,4,c	;volatile
  7559  001986  D7FE               	goto	l355
  7560                           
  7561                           ;uart.c: 86: }
  7562                           ;uart.c: 87: TXREG = byte;
  7563  001988  C00F  FFAD         	movff	putch@byte,4013	;volatile
  7564  00198C  0012               	return		;funcret
  7565  00198E                     __end_of_putch:
  7566                           	opt stack 0
  7567                           tblptru	equ	0xFF8
  7568                           tblptrh	equ	0xFF7
  7569                           tblptrl	equ	0xFF6
  7570                           tablat	equ	0xFF5
  7571                           prodh	equ	0xFF4
  7572                           prodl	equ	0xFF3
  7573                           intcon	equ	0xFF2
  7574                           intcon2	equ	0xFF1
  7575                           indf0	equ	0xFEF
  7576                           postinc0	equ	0xFEE
  7577                           fsr0h	equ	0xFEA
  7578                           fsr0l	equ	0xFE9
  7579                           wreg	equ	0xFE8
  7580                           indf1	equ	0xFE7
  7581                           postdec1	equ	0xFE5
  7582                           plusw1	equ	0xFE3
  7583                           fsr1h	equ	0xFE2
  7584                           fsr1l	equ	0xFE1
  7585                           indf2	equ	0xFDF
  7586                           postinc2	equ	0xFDE
  7587                           postdec2	equ	0xFDD
  7588                           plusw2	equ	0xFDB
  7589                           fsr2h	equ	0xFDA
  7590                           fsr2l	equ	0xFD9
  7591                           status	equ	0xFD8
  7592                           
  7593 ;; *************** function _init_uart *****************
  7594 ;; Defined at:
  7595 ;;		line 4 in file "uart.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;		None
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      void 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7609 ;;      Params:         0       0       0       0       0       0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0
  7612 ;;      Totals:         0       0       0       0       0       0       0
  7613 ;;Total ram usage:        0 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    1
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_download_log
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           	psect	text41
  7624  001750                     __ptext41:
  7625                           	opt stack 0
  7626  001750                     _init_uart:
  7627                           	opt stack 27
  7628                           
  7629                           ;uart.c: 7: TRISC7 = 1;
  7630                           
  7631                           ;incstack = 0
  7632  001750  8E94               	bsf	3988,7,c	;volatile
  7633                           
  7634                           ;uart.c: 8: TRISC6 = 0;
  7635  001752  9C94               	bcf	3988,6,c	;volatile
  7636                           
  7637                           ;uart.c: 13: CSRC = 0;
  7638  001754  9EAC               	bcf	4012,7,c	;volatile
  7639                           
  7640                           ;uart.c: 15: TX9 = 0;
  7641  001756  9CAC               	bcf	4012,6,c	;volatile
  7642                           
  7643                           ;uart.c: 17: TXEN = 1;
  7644  001758  8AAC               	bsf	4012,5,c	;volatile
  7645                           
  7646                           ;uart.c: 20: SYNC = 0;
  7647  00175A  98AC               	bcf	4012,4,c	;volatile
  7648                           
  7649                           ;uart.c: 22: SENDB = 0;
  7650  00175C  96AC               	bcf	4012,3,c	;volatile
  7651                           
  7652                           ;uart.c: 25: BRGH = 1;
  7653  00175E  84AC               	bsf	4012,2,c	;volatile
  7654                           
  7655                           ;uart.c: 27: TRMT = 0;
  7656  001760  92AC               	bcf	4012,1,c	;volatile
  7657                           
  7658                           ;uart.c: 29: TX9D = 0;
  7659  001762  90AC               	bcf	4012,0,c	;volatile
  7660                           
  7661                           ;uart.c: 34: SPEN = 1;
  7662  001764  8EAB               	bsf	4011,7,c	;volatile
  7663                           
  7664                           ;uart.c: 36: RX9 = 0;
  7665  001766  9CAB               	bcf	4011,6,c	;volatile
  7666                           
  7667                           ;uart.c: 38: SREN = 0;
  7668  001768  9AAB               	bcf	4011,5,c	;volatile
  7669                           
  7670                           ;uart.c: 40: CREN = 1;
  7671  00176A  88AB               	bsf	4011,4,c	;volatile
  7672                           
  7673                           ;uart.c: 42: ADDEN = 0;
  7674  00176C  96AB               	bcf	4011,3,c	;volatile
  7675                           
  7676                           ;uart.c: 44: FERR = 0;
  7677  00176E  94AB               	bcf	4011,2,c	;volatile
  7678                           
  7679                           ;uart.c: 46: OERR = 0;
  7680  001770  92AB               	bcf	4011,1,c	;volatile
  7681                           
  7682                           ;uart.c: 48: RX9D = 0;
  7683  001772  90AB               	bcf	4011,0,c	;volatile
  7684                           
  7685                           ;uart.c: 53: ABDOVF = 0;
  7686  001774  9EB8               	bcf	4024,7,c	;volatile
  7687                           
  7688                           ;uart.c: 55: RCIDL = 1;
  7689  001776  8CB8               	bsf	4024,6,c	;volatile
  7690                           
  7691                           ;uart.c: 57: SCKP = 0;
  7692  001778  98B8               	bcf	4024,4,c	;volatile
  7693                           
  7694                           ;uart.c: 59: BRG16 = 0;
  7695  00177A  96B8               	bcf	4024,3,c	;volatile
  7696                           
  7697                           ;uart.c: 61: WUE = 0;
  7698  00177C  92B8               	bcf	4024,1,c	;volatile
  7699                           
  7700                           ;uart.c: 63: ABDEN = 0;
  7701  00177E  90B8               	bcf	4024,0,c	;volatile
  7702                           
  7703                           ;uart.c: 67: SPBRG = 10;
  7704  001780  0E0A               	movlw	10
  7705  001782  6EAF               	movwf	4015,c	;volatile
  7706                           
  7707                           ;uart.c: 70: TXIE = 1;
  7708  001784  889D               	bsf	3997,4,c	;volatile
  7709                           
  7710                           ;uart.c: 72: TXIF = 0;
  7711  001786  989E               	bcf	3998,4,c	;volatile
  7712                           
  7713                           ;uart.c: 74: RCIE = 1;
  7714  001788  8A9D               	bsf	3997,5,c	;volatile
  7715                           
  7716                           ;uart.c: 76: RCIF = 0;
  7717  00178A  9A9E               	bcf	3998,5,c	;volatile
  7718  00178C  0012               	return		;funcret
  7719  00178E                     __end_of_init_uart:
  7720                           	opt stack 0
  7721                           tblptru	equ	0xFF8
  7722                           tblptrh	equ	0xFF7
  7723                           tblptrl	equ	0xFF6
  7724                           tablat	equ	0xFF5
  7725                           prodh	equ	0xFF4
  7726                           prodl	equ	0xFF3
  7727                           intcon	equ	0xFF2
  7728                           intcon2	equ	0xFF1
  7729                           indf0	equ	0xFEF
  7730                           postinc0	equ	0xFEE
  7731                           fsr0h	equ	0xFEA
  7732                           fsr0l	equ	0xFE9
  7733                           wreg	equ	0xFE8
  7734                           indf1	equ	0xFE7
  7735                           postdec1	equ	0xFE5
  7736                           plusw1	equ	0xFE3
  7737                           fsr1h	equ	0xFE2
  7738                           fsr1l	equ	0xFE1
  7739                           indf2	equ	0xFDF
  7740                           postinc2	equ	0xFDE
  7741                           postdec2	equ	0xFDD
  7742                           plusw2	equ	0xFDB
  7743                           fsr2h	equ	0xFDA
  7744                           fsr2l	equ	0xFD9
  7745                           status	equ	0xFD8
  7746                           
  7747 ;; *************** function _clear_log *****************
  7748 ;; Defined at:
  7749 ;;		line 10 in file "clear_log.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  address         2   16[COMRAM] int 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  2  166[None  ] int 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2, status,0, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7763 ;;      Params:         0       0       0       0       0       0       0
  7764 ;;      Locals:         2       0       0       0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0
  7766 ;;      Totals:         2       0       0       0       0       0       0
  7767 ;;Total ram usage:        2 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    2
  7770 ;; This function calls:
  7771 ;;		_write_internal_eeprom
  7772 ;; This function is called by:
  7773 ;;		_display_menu
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text42
  7778  0017C4                     __ptext42:
  7779                           	opt stack 0
  7780  0017C4                     _clear_log:
  7781                           	opt stack 27
  7782                           
  7783                           ;clear_log.c: 13: int address = 0x05;
  7784                           
  7785                           ;incstack = 0
  7786  0017C4  0E00               	movlw	0
  7787  0017C6  6E12               	movwf	clear_log@address+1,c
  7788  0017C8  0E05               	movlw	5
  7789  0017CA  6E11               	movwf	clear_log@address,c
  7790                           
  7791                           ;clear_log.c: 16: while( address != 0xA5)
  7792  0017CC  D007               	goto	l4799
  7793  0017CE                     l4795:
  7794                           
  7795                           ;clear_log.c: 17: {
  7796                           ;clear_log.c: 18: write_internal_eeprom(address, 0);
  7797  0017CE  0E00               	movlw	0
  7798  0017D0  6E0F               	movwf	write_internal_eeprom@data,c
  7799  0017D2  5011               	movf	clear_log@address,w,c
  7800  0017D4  EC34  F00C         	call	_write_internal_eeprom
  7801                           
  7802                           ;clear_log.c: 19: address++;
  7803  0017D8  4A11               	infsnz	clear_log@address,f,c
  7804  0017DA  2A12               	incf	clear_log@address+1,f,c
  7805  0017DC                     l4799:
  7806  0017DC  0EA5               	movlw	165
  7807  0017DE  1811               	xorwf	clear_log@address,w,c
  7808  0017E0  1012               	iorwf	clear_log@address+1,w,c
  7809  0017E2  A4D8               	btfss	status,2,c
  7810  0017E4  D7F4               	goto	l4795
  7811                           
  7812                           ;clear_log.c: 20: }
  7813                           ;clear_log.c: 21: e_address = 0x05;
  7814  0017E6  0E00               	movlw	0
  7815  0017E8  6E3D               	movwf	_e_address+1,c
  7816  0017EA  0E05               	movlw	5
  7817  0017EC  6E3C               	movwf	_e_address,c
  7818  0017EE  0012               	return	
  7819  0017F0                     __end_of_clear_log:
  7820                           	opt stack 0
  7821                           tblptru	equ	0xFF8
  7822                           tblptrh	equ	0xFF7
  7823                           tblptrl	equ	0xFF6
  7824                           tablat	equ	0xFF5
  7825                           prodh	equ	0xFF4
  7826                           prodl	equ	0xFF3
  7827                           intcon	equ	0xFF2
  7828                           intcon2	equ	0xFF1
  7829                           indf0	equ	0xFEF
  7830                           postinc0	equ	0xFEE
  7831                           fsr0h	equ	0xFEA
  7832                           fsr0l	equ	0xFE9
  7833                           wreg	equ	0xFE8
  7834                           indf1	equ	0xFE7
  7835                           postdec1	equ	0xFE5
  7836                           plusw1	equ	0xFE3
  7837                           fsr1h	equ	0xFE2
  7838                           fsr1l	equ	0xFE1
  7839                           indf2	equ	0xFDF
  7840                           postinc2	equ	0xFDE
  7841                           postdec2	equ	0xFDD
  7842                           plusw2	equ	0xFDB
  7843                           fsr2h	equ	0xFDA
  7844                           fsr2l	equ	0xFD9
  7845                           status	equ	0xFD8
  7846                           
  7847 ;; *************** function _write_internal_eeprom *****************
  7848 ;; Defined at:
  7849 ;;		line 4 in file "eeprom.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  address         1    wreg     unsigned char 
  7852 ;;  data            1   14[COMRAM] unsigned char 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  address         1   15[COMRAM] unsigned char 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, status,2
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7864 ;;      Params:         1       0       0       0       0       0       0
  7865 ;;      Locals:         1       0       0       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0
  7867 ;;      Totals:         2       0       0       0       0       0       0
  7868 ;;Total ram usage:        2 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    1
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_main
  7875 ;;		_password_change
  7876 ;;		_save_events
  7877 ;;		_clear_log
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text43
  7882  001868                     __ptext43:
  7883                           	opt stack 0
  7884  001868                     _write_internal_eeprom:
  7885                           	opt stack 29
  7886                           
  7887                           ;incstack = 0
  7888                           ;write_internal_eeprom@address stored from wreg
  7889  001868  6E10               	movwf	write_internal_eeprom@address,c
  7890                           
  7891                           ;eeprom.c: 7: EEADR = address;
  7892  00186A  C010  FFA9         	movff	write_internal_eeprom@address,4009	;volatile
  7893                           
  7894                           ;eeprom.c: 10: EEDATA = data;
  7895  00186E  C00F  FFA8         	movff	write_internal_eeprom@data,4008	;volatile
  7896                           
  7897                           ;eeprom.c: 13: EECON1bits.EEPGD = 0;
  7898  001872  9EA6               	bcf	4006,7,c	;volatile
  7899                           
  7900                           ;eeprom.c: 16: EECON1bits.CFGS = 0;
  7901  001874  9CA6               	bcf	4006,6,c	;volatile
  7902                           
  7903                           ;eeprom.c: 19: EECON1bits.WREN = 1;
  7904  001876  84A6               	bsf	4006,2,c	;volatile
  7905                           
  7906                           ;eeprom.c: 22: GIE = 0;
  7907  001878  9EF2               	bcf	intcon,7,c	;volatile
  7908                           
  7909                           ;eeprom.c: 25: EECON2 = 0x55;
  7910  00187A  0E55               	movlw	85
  7911  00187C  6EA7               	movwf	4007,c	;volatile
  7912                           
  7913                           ;eeprom.c: 26: EECON2 = 0xAA;
  7914  00187E  0EAA               	movlw	170
  7915  001880  6EA7               	movwf	4007,c	;volatile
  7916                           
  7917                           ;eeprom.c: 29: EECON1bits.WR = 1;
  7918  001882  82A6               	bsf	4006,1,c	;volatile
  7919                           
  7920                           ;eeprom.c: 32: GIE = 1;
  7921  001884  8EF2               	bsf	intcon,7,c	;volatile
  7922  001886                     l615:
  7923  001886  A8A1               	btfss	4001,4,c	;volatile
  7924  001888  D7FE               	goto	l615
  7925                           
  7926                           ;eeprom.c: 38: PIR2bits.EEIF = 0;
  7927  00188A  98A1               	bcf	4001,4,c	;volatile
  7928  00188C  0012               	return		;funcret
  7929  00188E                     __end_of_write_internal_eeprom:
  7930                           	opt stack 0
  7931                           tblptru	equ	0xFF8
  7932                           tblptrh	equ	0xFF7
  7933                           tblptrl	equ	0xFF6
  7934                           tablat	equ	0xFF5
  7935                           prodh	equ	0xFF4
  7936                           prodl	equ	0xFF3
  7937                           intcon	equ	0xFF2
  7938                           intcon2	equ	0xFF1
  7939                           indf0	equ	0xFEF
  7940                           postinc0	equ	0xFEE
  7941                           fsr0h	equ	0xFEA
  7942                           fsr0l	equ	0xFE9
  7943                           wreg	equ	0xFE8
  7944                           indf1	equ	0xFE7
  7945                           postdec1	equ	0xFE5
  7946                           plusw1	equ	0xFE3
  7947                           fsr1h	equ	0xFE2
  7948                           fsr1l	equ	0xFE1
  7949                           indf2	equ	0xFDF
  7950                           postinc2	equ	0xFDE
  7951                           postdec2	equ	0xFDD
  7952                           plusw2	equ	0xFDB
  7953                           fsr2h	equ	0xFDA
  7954                           fsr2l	equ	0xFD9
  7955                           status	equ	0xFD8
  7956                           
  7957 ;; *************** function ___awmod *****************
  7958 ;; Defined at:
  7959 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/awmod.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  dividend        2   14[COMRAM] int 
  7962 ;;  divisor         2   16[COMRAM] int 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  sign            1   19[COMRAM] unsigned char 
  7965 ;;  counter         1   18[COMRAM] unsigned char 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  2   14[COMRAM] int 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2, status,0
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7975 ;;      Params:         4       0       0       0       0       0       0
  7976 ;;      Locals:         2       0       0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0
  7978 ;;      Totals:         6       0       0       0       0       0       0
  7979 ;;Total ram usage:        6 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    1
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_main
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	text44
  7990  00127A                     __ptext44:
  7991                           	opt stack 0
  7992  00127A                     ___awmod:
  7993                           	opt stack 29
  7994                           
  7995                           ;incstack = 0
  7996  00127A  0E00               	movlw	0
  7997  00127C  6E14               	movwf	___awmod@sign,c
  7998  00127E  AE10               	btfss	___awmod@dividend+1,7,c
  7999  001280  D006               	goto	l3881
  8000  001282  6C0F               	negf	___awmod@dividend,c
  8001  001284  1E10               	comf	___awmod@dividend+1,f,c
  8002  001286  B0D8               	btfsc	status,0,c
  8003  001288  2A10               	incf	___awmod@dividend+1,f,c
  8004  00128A  0E01               	movlw	1
  8005  00128C  6E14               	movwf	___awmod@sign,c
  8006  00128E                     l3881:
  8007  00128E  AE12               	btfss	___awmod@divisor+1,7,c
  8008  001290  D004               	goto	l3885
  8009  001292  6C11               	negf	___awmod@divisor,c
  8010  001294  1E12               	comf	___awmod@divisor+1,f,c
  8011  001296  B0D8               	btfsc	status,0,c
  8012  001298  2A12               	incf	___awmod@divisor+1,f,c
  8013  00129A                     l3885:
  8014  00129A  5011               	movf	___awmod@divisor,w,c
  8015  00129C  1012               	iorwf	___awmod@divisor+1,w,c
  8016  00129E  B4D8               	btfsc	status,2,c
  8017  0012A0  D018               	goto	l3901
  8018  0012A2  0E01               	movlw	1
  8019  0012A4  6E13               	movwf	___awmod@counter,c
  8020  0012A6  D004               	goto	l3891
  8021  0012A8                     l3889:
  8022  0012A8  90D8               	bcf	status,0,c
  8023  0012AA  3611               	rlcf	___awmod@divisor,f,c
  8024  0012AC  3612               	rlcf	___awmod@divisor+1,f,c
  8025  0012AE  2A13               	incf	___awmod@counter,f,c
  8026  0012B0                     l3891:
  8027  0012B0  AE12               	btfss	___awmod@divisor+1,7,c
  8028  0012B2  D7FA               	goto	l3889
  8029  0012B4                     l3893:
  8030  0012B4  5011               	movf	___awmod@divisor,w,c
  8031  0012B6  5C0F               	subwf	___awmod@dividend,w,c
  8032  0012B8  5012               	movf	___awmod@divisor+1,w,c
  8033  0012BA  5810               	subwfb	___awmod@dividend+1,w,c
  8034  0012BC  A0D8               	btfss	status,0,c
  8035  0012BE  D004               	goto	l3897
  8036  0012C0  5011               	movf	___awmod@divisor,w,c
  8037  0012C2  5E0F               	subwf	___awmod@dividend,f,c
  8038  0012C4  5012               	movf	___awmod@divisor+1,w,c
  8039  0012C6  5A10               	subwfb	___awmod@dividend+1,f,c
  8040  0012C8                     l3897:
  8041  0012C8  90D8               	bcf	status,0,c
  8042  0012CA  3212               	rrcf	___awmod@divisor+1,f,c
  8043  0012CC  3211               	rrcf	___awmod@divisor,f,c
  8044  0012CE  2E13               	decfsz	___awmod@counter,f,c
  8045  0012D0  D7F1               	goto	l3893
  8046  0012D2                     l3901:
  8047  0012D2  5014               	movf	___awmod@sign,w,c
  8048  0012D4  B4D8               	btfsc	status,2,c
  8049  0012D6  D004               	goto	l3905
  8050  0012D8  6C0F               	negf	___awmod@dividend,c
  8051  0012DA  1E10               	comf	___awmod@dividend+1,f,c
  8052  0012DC  B0D8               	btfsc	status,0,c
  8053  0012DE  2A10               	incf	___awmod@dividend+1,f,c
  8054  0012E0                     l3905:
  8055  0012E0  C00F  F00F         	movff	___awmod@dividend,?___awmod
  8056  0012E4  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  8057  0012E8  0012               	return	
  8058  0012EA                     __end_of___awmod:
  8059                           	opt stack 0
  8060                           tblptru	equ	0xFF8
  8061                           tblptrh	equ	0xFF7
  8062                           tblptrl	equ	0xFF6
  8063                           tablat	equ	0xFF5
  8064                           prodh	equ	0xFF4
  8065                           prodl	equ	0xFF3
  8066                           intcon	equ	0xFF2
  8067                           intcon2	equ	0xFF1
  8068                           indf0	equ	0xFEF
  8069                           postinc0	equ	0xFEE
  8070                           fsr0h	equ	0xFEA
  8071                           fsr0l	equ	0xFE9
  8072                           wreg	equ	0xFE8
  8073                           indf1	equ	0xFE7
  8074                           postdec1	equ	0xFE5
  8075                           plusw1	equ	0xFE3
  8076                           fsr1h	equ	0xFE2
  8077                           fsr1l	equ	0xFE1
  8078                           indf2	equ	0xFDF
  8079                           postinc2	equ	0xFDE
  8080                           postdec2	equ	0xFDD
  8081                           plusw2	equ	0xFDB
  8082                           fsr2h	equ	0xFDA
  8083                           fsr2l	equ	0xFD9
  8084                           status	equ	0xFD8
  8085                           
  8086 ;; *************** function ___awdiv *****************
  8087 ;; Defined at:
  8088 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/awdiv.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  dividend        2   14[COMRAM] int 
  8091 ;;  divisor         2   16[COMRAM] int 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  quotient        2   20[COMRAM] int 
  8094 ;;  sign            1   19[COMRAM] unsigned char 
  8095 ;;  counter         1   18[COMRAM] unsigned char 
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  2   14[COMRAM] int 
  8098 ;; Registers used:
  8099 ;;		wreg, status,2, status,0
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8105 ;;      Params:         4       0       0       0       0       0       0
  8106 ;;      Locals:         4       0       0       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0
  8108 ;;      Totals:         8       0       0       0       0       0       0
  8109 ;;Total ram usage:        8 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; Hardware stack levels required when called:    1
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_main
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text45
  8120  001104                     __ptext45:
  8121                           	opt stack 0
  8122  001104                     ___awdiv:
  8123                           	opt stack 29
  8124                           
  8125                           ;incstack = 0
  8126  001104  0E00               	movlw	0
  8127  001106  6E14               	movwf	___awdiv@sign,c
  8128  001108  AE12               	btfss	___awdiv@divisor+1,7,c
  8129  00110A  D006               	goto	l3837
  8130  00110C  6C11               	negf	___awdiv@divisor,c
  8131  00110E  1E12               	comf	___awdiv@divisor+1,f,c
  8132  001110  B0D8               	btfsc	status,0,c
  8133  001112  2A12               	incf	___awdiv@divisor+1,f,c
  8134  001114  0E01               	movlw	1
  8135  001116  6E14               	movwf	___awdiv@sign,c
  8136  001118                     l3837:
  8137  001118  AE10               	btfss	___awdiv@dividend+1,7,c
  8138  00111A  D006               	goto	l3843
  8139  00111C  6C0F               	negf	___awdiv@dividend,c
  8140  00111E  1E10               	comf	___awdiv@dividend+1,f,c
  8141  001120  B0D8               	btfsc	status,0,c
  8142  001122  2A10               	incf	___awdiv@dividend+1,f,c
  8143  001124  0E01               	movlw	1
  8144  001126  1A14               	xorwf	___awdiv@sign,f,c
  8145  001128                     l3843:
  8146  001128  0E00               	movlw	0
  8147  00112A  6E16               	movwf	___awdiv@quotient+1,c
  8148  00112C  0E00               	movlw	0
  8149  00112E  6E15               	movwf	___awdiv@quotient,c
  8150  001130  5011               	movf	___awdiv@divisor,w,c
  8151  001132  1012               	iorwf	___awdiv@divisor+1,w,c
  8152  001134  B4D8               	btfsc	status,2,c
  8153  001136  D01C               	goto	l3865
  8154  001138  0E01               	movlw	1
  8155  00113A  6E13               	movwf	___awdiv@counter,c
  8156  00113C  D004               	goto	l3851
  8157  00113E                     l3849:
  8158  00113E  90D8               	bcf	status,0,c
  8159  001140  3611               	rlcf	___awdiv@divisor,f,c
  8160  001142  3612               	rlcf	___awdiv@divisor+1,f,c
  8161  001144  2A13               	incf	___awdiv@counter,f,c
  8162  001146                     l3851:
  8163  001146  AE12               	btfss	___awdiv@divisor+1,7,c
  8164  001148  D7FA               	goto	l3849
  8165  00114A                     l3853:
  8166  00114A  90D8               	bcf	status,0,c
  8167  00114C  3615               	rlcf	___awdiv@quotient,f,c
  8168  00114E  3616               	rlcf	___awdiv@quotient+1,f,c
  8169  001150  5011               	movf	___awdiv@divisor,w,c
  8170  001152  5C0F               	subwf	___awdiv@dividend,w,c
  8171  001154  5012               	movf	___awdiv@divisor+1,w,c
  8172  001156  5810               	subwfb	___awdiv@dividend+1,w,c
  8173  001158  A0D8               	btfss	status,0,c
  8174  00115A  D005               	goto	l3861
  8175  00115C  5011               	movf	___awdiv@divisor,w,c
  8176  00115E  5E0F               	subwf	___awdiv@dividend,f,c
  8177  001160  5012               	movf	___awdiv@divisor+1,w,c
  8178  001162  5A10               	subwfb	___awdiv@dividend+1,f,c
  8179  001164  8015               	bsf	___awdiv@quotient,0,c
  8180  001166                     l3861:
  8181  001166  90D8               	bcf	status,0,c
  8182  001168  3212               	rrcf	___awdiv@divisor+1,f,c
  8183  00116A  3211               	rrcf	___awdiv@divisor,f,c
  8184  00116C  2E13               	decfsz	___awdiv@counter,f,c
  8185  00116E  D7ED               	goto	l3853
  8186  001170                     l3865:
  8187  001170  5014               	movf	___awdiv@sign,w,c
  8188  001172  B4D8               	btfsc	status,2,c
  8189  001174  D004               	goto	l3869
  8190  001176  6C15               	negf	___awdiv@quotient,c
  8191  001178  1E16               	comf	___awdiv@quotient+1,f,c
  8192  00117A  B0D8               	btfsc	status,0,c
  8193  00117C  2A16               	incf	___awdiv@quotient+1,f,c
  8194  00117E                     l3869:
  8195  00117E  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  8196  001182  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  8197  001186  0012               	return	
  8198  001188                     __end_of___awdiv:
  8199                           	opt stack 0
  8200                           tblptru	equ	0xFF8
  8201                           tblptrh	equ	0xFF7
  8202                           tblptrl	equ	0xFF6
  8203                           tablat	equ	0xFF5
  8204                           prodh	equ	0xFF4
  8205                           prodl	equ	0xFF3
  8206                           intcon	equ	0xFF2
  8207                           intcon2	equ	0xFF1
  8208                           indf0	equ	0xFEF
  8209                           postinc0	equ	0xFEE
  8210                           fsr0h	equ	0xFEA
  8211                           fsr0l	equ	0xFE9
  8212                           wreg	equ	0xFE8
  8213                           indf1	equ	0xFE7
  8214                           postdec1	equ	0xFE5
  8215                           plusw1	equ	0xFE3
  8216                           fsr1h	equ	0xFE2
  8217                           fsr1l	equ	0xFE1
  8218                           indf2	equ	0xFDF
  8219                           postinc2	equ	0xFDE
  8220                           postdec2	equ	0xFDD
  8221                           plusw2	equ	0xFDB
  8222                           fsr2h	equ	0xFDA
  8223                           fsr2l	equ	0xFD9
  8224                           status	equ	0xFD8
  8225                           
  8226 ;; *************** function _ON_OFF_up_down_gear *****************
  8227 ;; Defined at:
  8228 ;;		line 100 in file "adc.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  gear            2   19[COMRAM] unsigned short 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8242 ;;      Params:         2       0       0       0       0       0       0
  8243 ;;      Locals:         0       0       0       0       0       0       0
  8244 ;;      Temps:          2       0       0       0       0       0       0
  8245 ;;      Totals:         4       0       0       0       0       0       0
  8246 ;;Total ram usage:        4 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    3
  8249 ;; This function calls:
  8250 ;;		_clcd_print
  8251 ;; This function is called by:
  8252 ;;		_main
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text46
  8257  000E7A                     __ptext46:
  8258                           	opt stack 0
  8259  000E7A                     _ON_OFF_up_down_gear:
  8260                           	opt stack 27
  8261                           
  8262                           ;adc.c: 102: switch (gear)
  8263                           
  8264                           ;incstack = 0
  8265  000E7A  D074               	goto	l5071
  8266  000E7C                     l5033:
  8267                           
  8268                           ;adc.c: 105: clcd_print("GR ", (0xC0 + (9)));
  8269  000E7C  0EEE               	movlw	low STR_31
  8270  000E7E  6E11               	movwf	clcd_print@data,c
  8271  000E80  0E2F               	movlw	high STR_31
  8272  000E82  6E12               	movwf	clcd_print@data+1,c
  8273  000E84  0EC9               	movlw	201
  8274  000E86  6E13               	movwf	clcd_print@addr,c
  8275  000E88  EC43  F00A         	call	_clcd_print	;wreg free
  8276                           
  8277                           ;adc.c: 106: save_array[10] = 'R';
  8278  000E8C  0E52               	movlw	82
  8279  000E8E  0100               	movlb	0	; () banked
  8280  000E90  6F86               	movwf	(_save_array+10)& (0+255),b
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;adc.c: 107: save_array[9] = 'G';
  8284  000E92  0E47               	movlw	71
  8285  000E94  0100               	movlb	0	; () banked
  8286  000E96  6F85               	movwf	(_save_array+9)& (0+255),b
  8287  000E98  D00D               	goto	l5047
  8288  000E9A                     l5041:
  8289                           
  8290                           ;adc.c: 113: clcd_print("GN ", (0xC0 + (9)));
  8291  000E9A  0EEA               	movlw	low STR_32
  8292  000E9C  6E11               	movwf	clcd_print@data,c
  8293  000E9E  0E2F               	movlw	high STR_32
  8294  000EA0  6E12               	movwf	clcd_print@data+1,c
  8295  000EA2  0EC9               	movlw	201
  8296  000EA4  6E13               	movwf	clcd_print@addr,c
  8297  000EA6  EC43  F00A         	call	_clcd_print	;wreg free
  8298                           
  8299                           ;adc.c: 114: save_array[9] = 'G';
  8300  000EAA  0E47               	movlw	71
  8301  000EAC  D050               	goto	L7
  8302  000EAE                     l5045:
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;adc.c: 115: save_array[10] = 'N';
  8306  000EAE  0E4E               	movlw	78
  8307  000EB0  0100               	movlb	0	; () banked
  8308  000EB2  6F86               	movwf	(_save_array+10)& (0+255),b
  8309  000EB4                     l5047:
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;adc.c: 116: save_array[11] = ' ';
  8313  000EB4  0E20               	movlw	32
  8314  000EB6  0100               	movlb	0	; () banked
  8315  000EB8  6F87               	movwf	(_save_array+11)& (0+255),b
  8316                           
  8317                           ;adc.c: 118: break;
  8318  000EBA  D075               	goto	l5073
  8319  000EBC                     l5049:
  8320                           
  8321                           ;adc.c: 120: save_array[10] = '1';
  8322  000EBC  0E31               	movlw	49
  8323  000EBE  0100               	movlb	0	; () banked
  8324  000EC0  6F86               	movwf	(_save_array+10)& (0+255),b
  8325                           
  8326                           ;adc.c: 121: save_array[9] = 'G';
  8327  000EC2  0E47               	movlw	71
  8328  000EC4  0100               	movlb	0	; () banked
  8329  000EC6  6F85               	movwf	(_save_array+9)& (0+255),b
  8330                           
  8331                           ;adc.c: 122: save_array[11] = ' ';
  8332  000EC8  0E20               	movlw	32
  8333  000ECA  0100               	movlb	0	; () banked
  8334  000ECC  6F87               	movwf	(_save_array+11)& (0+255),b
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;adc.c: 124: clcd_print("G1 ", (0xC0 + (9)));
  8338  000ECE  0EDA               	movlw	low STR_33
  8339  000ED0  6E11               	movwf	clcd_print@data,c
  8340  000ED2  0E2F               	movlw	high STR_33
  8341  000ED4  6E12               	movwf	clcd_print@data+1,c
  8342  000ED6  0EC9               	movlw	201
  8343  000ED8  6E13               	movwf	clcd_print@addr,c
  8344  000EDA  EC43  F00A         	call	_clcd_print	;wreg free
  8345                           
  8346                           ;adc.c: 125: break;
  8347  000EDE  D063               	goto	l5073
  8348  000EE0                     l5053:
  8349                           
  8350                           ;adc.c: 127: save_array[10] = '2';
  8351  000EE0  0E32               	movlw	50
  8352  000EE2  0100               	movlb	0	; () banked
  8353  000EE4  6F86               	movwf	(_save_array+10)& (0+255),b
  8354                           
  8355                           ;adc.c: 128: save_array[9] = 'G';
  8356  000EE6  0E47               	movlw	71
  8357  000EE8  0100               	movlb	0	; () banked
  8358  000EEA  6F85               	movwf	(_save_array+9)& (0+255),b
  8359                           
  8360                           ;adc.c: 129: save_array[11] = ' ';
  8361  000EEC  0E20               	movlw	32
  8362  000EEE  0100               	movlb	0	; () banked
  8363  000EF0  6F87               	movwf	(_save_array+11)& (0+255),b
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;adc.c: 131: clcd_print("G2 ", (0xC0 + (9)));
  8367  000EF2  0EDE               	movlw	low STR_34
  8368  000EF4  6E11               	movwf	clcd_print@data,c
  8369  000EF6  0E2F               	movlw	high STR_34
  8370  000EF8  6E12               	movwf	clcd_print@data+1,c
  8371  000EFA  0EC9               	movlw	201
  8372  000EFC  6E13               	movwf	clcd_print@addr,c
  8373  000EFE  EC43  F00A         	call	_clcd_print	;wreg free
  8374                           
  8375                           ;adc.c: 132: break;
  8376  000F02  D051               	goto	l5073
  8377  000F04                     l5057:
  8378                           
  8379                           ;adc.c: 134: save_array[9] = 'G';
  8380  000F04  0E47               	movlw	71
  8381  000F06  0100               	movlb	0	; () banked
  8382  000F08  6F85               	movwf	(_save_array+9)& (0+255),b
  8383                           
  8384                           ;adc.c: 135: save_array[10] = '3';
  8385  000F0A  0E33               	movlw	51
  8386  000F0C  0100               	movlb	0	; () banked
  8387  000F0E  6F86               	movwf	(_save_array+10)& (0+255),b
  8388                           
  8389                           ;adc.c: 136: save_array[11] = ' ';
  8390  000F10  0E20               	movlw	32
  8391  000F12  0100               	movlb	0	; () banked
  8392  000F14  6F87               	movwf	(_save_array+11)& (0+255),b
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;adc.c: 138: clcd_print("G3 ", (0xC0 + (9)));
  8396  000F16  0EE2               	movlw	low STR_35
  8397  000F18  6E11               	movwf	clcd_print@data,c
  8398  000F1A  0E2F               	movlw	high STR_35
  8399  000F1C  6E12               	movwf	clcd_print@data+1,c
  8400  000F1E  0EC9               	movlw	201
  8401  000F20  6E13               	movwf	clcd_print@addr,c
  8402  000F22  EC43  F00A         	call	_clcd_print	;wreg free
  8403                           
  8404                           ;adc.c: 139: break;
  8405  000F26  D03F               	goto	l5073
  8406  000F28                     l5061:
  8407                           
  8408                           ;adc.c: 141: save_array[9] = 'G';
  8409  000F28  0E47               	movlw	71
  8410  000F2A  0100               	movlb	0	; () banked
  8411  000F2C  6F85               	movwf	(_save_array+9)& (0+255),b
  8412                           
  8413                           ;adc.c: 142: save_array[10] = '4';
  8414  000F2E  0E34               	movlw	52
  8415  000F30  0100               	movlb	0	; () banked
  8416  000F32  6F86               	movwf	(_save_array+10)& (0+255),b
  8417                           
  8418                           ;adc.c: 143: save_array[11] = ' ';
  8419  000F34  0E20               	movlw	32
  8420  000F36  0100               	movlb	0	; () banked
  8421  000F38  6F87               	movwf	(_save_array+11)& (0+255),b
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;adc.c: 145: clcd_print("G4 ", (0xC0 + (9)));
  8425  000F3A  0EE6               	movlw	low STR_36
  8426  000F3C  6E11               	movwf	clcd_print@data,c
  8427  000F3E  0E2F               	movlw	high STR_36
  8428  000F40  6E12               	movwf	clcd_print@data+1,c
  8429  000F42  0EC9               	movlw	201
  8430  000F44  6E13               	movwf	clcd_print@addr,c
  8431  000F46  EC43  F00A         	call	_clcd_print	;wreg free
  8432                           
  8433                           ;adc.c: 146: break;
  8434  000F4A  D02D               	goto	l5073
  8435  000F4C                     l5065:
  8436                           
  8437                           ;adc.c: 149: save_array[9] = 'O';
  8438  000F4C  0E4F               	movlw	79
  8439  000F4E                     L7:
  8440  000F4E  0100               	movlb	0	; () banked
  8441  000F50  6F85               	movwf	(_save_array+9)& (0+255),b
  8442  000F52  D7AD               	goto	l5045
  8443  000F54                     l5067:
  8444                           
  8445                           ;adc.c: 155: save_array[9] = 'O';
  8446  000F54  0E4F               	movlw	79
  8447  000F56  0100               	movlb	0	; () banked
  8448  000F58  6F85               	movwf	(_save_array+9)& (0+255),b
  8449                           
  8450                           ;adc.c: 156: save_array[10] = 'F';
  8451  000F5A  0E46               	movlw	70
  8452  000F5C  0100               	movlb	0	; () banked
  8453  000F5E  6F86               	movwf	(_save_array+10)& (0+255),b
  8454                           
  8455                           ;adc.c: 157: save_array[11] = 'F';
  8456  000F60  0E46               	movlw	70
  8457  000F62  D7A9               	goto	L8
  8458  000F64                     l5071:
  8459  000F64  C014  F016         	movff	ON_OFF_up_down_gear@gear,??_ON_OFF_up_down_gear
  8460  000F68  C015  F017         	movff	ON_OFF_up_down_gear@gear+1,??_ON_OFF_up_down_gear+1
  8461                           
  8462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8463                           ; Switch size 1, requested type "space"
  8464                           ; Number of cases is 1, Range of values is 0 to 0
  8465                           ; switch strategies available:
  8466                           ; Name         Instructions Cycles
  8467                           ; simple_byte            4     3 (average)
  8468                           ;	Chosen strategy is simple_byte
  8469  000F6C  5017               	movf	??_ON_OFF_up_down_gear+1,w,c
  8470  000F6E  0A00               	xorlw	0	; case 0
  8471  000F70  A4D8               	btfss	status,2,c
  8472  000F72  D019               	goto	l5073
  8473                           
  8474                           ; Switch size 1, requested type "space"
  8475                           ; Number of cases is 8, Range of values is 1 to 11
  8476                           ; switch strategies available:
  8477                           ; Name         Instructions Cycles
  8478                           ; simple_byte           25    13 (average)
  8479                           ;	Chosen strategy is simple_byte
  8480  000F74  5016               	movf	??_ON_OFF_up_down_gear,w,c
  8481  000F76  0A01               	xorlw	1	; case 1
  8482  000F78  B4D8               	btfsc	status,2,c
  8483  000F7A  D780               	goto	l5033
  8484  000F7C  0A03               	xorlw	3	; case 2
  8485  000F7E  B4D8               	btfsc	status,2,c
  8486  000F80  D78C               	goto	l5041
  8487  000F82  0A01               	xorlw	1	; case 3
  8488  000F84  B4D8               	btfsc	status,2,c
  8489  000F86  D79A               	goto	l5049
  8490  000F88  0A07               	xorlw	7	; case 4
  8491  000F8A  B4D8               	btfsc	status,2,c
  8492  000F8C  D7A9               	goto	l5053
  8493  000F8E  0A01               	xorlw	1	; case 5
  8494  000F90  B4D8               	btfsc	status,2,c
  8495  000F92  D7B8               	goto	l5057
  8496  000F94  0A03               	xorlw	3	; case 6
  8497  000F96  B4D8               	btfsc	status,2,c
  8498  000F98  D7C7               	goto	l5061
  8499  000F9A  0A0C               	xorlw	12	; case 10
  8500  000F9C  B4D8               	btfsc	status,2,c
  8501  000F9E  D7D6               	goto	l5065
  8502  000FA0  0A01               	xorlw	1	; case 11
  8503  000FA2  B4D8               	btfsc	status,2,c
  8504  000FA4  D7D7               	goto	l5067
  8505  000FA6                     l5073:
  8506                           
  8507                           ;adc.c: 160: save_array[8] = ' ';
  8508  000FA6  0E20               	movlw	32
  8509  000FA8  0100               	movlb	0	; () banked
  8510  000FAA  6F84               	movwf	(_save_array+8)& (0+255),b
  8511                           
  8512                           ;adc.c: 161: save_array[12] = ' ';
  8513  000FAC  0E20               	movlw	32
  8514  000FAE  0100               	movlb	0	; () banked
  8515  000FB0  6F88               	movwf	(_save_array+12)& (0+255),b
  8516                           
  8517                           ; BSR set to: 0
  8518  000FB2  0012               	return		;funcret
  8519  000FB4                     __end_of_ON_OFF_up_down_gear:
  8520                           	opt stack 0
  8521                           tblptru	equ	0xFF8
  8522                           tblptrh	equ	0xFF7
  8523                           tblptrl	equ	0xFF6
  8524                           tablat	equ	0xFF5
  8525                           prodh	equ	0xFF4
  8526                           prodl	equ	0xFF3
  8527                           intcon	equ	0xFF2
  8528                           intcon2	equ	0xFF1
  8529                           indf0	equ	0xFEF
  8530                           postinc0	equ	0xFEE
  8531                           fsr0h	equ	0xFEA
  8532                           fsr0l	equ	0xFE9
  8533                           wreg	equ	0xFE8
  8534                           indf1	equ	0xFE7
  8535                           postdec1	equ	0xFE5
  8536                           plusw1	equ	0xFE3
  8537                           fsr1h	equ	0xFE2
  8538                           fsr1l	equ	0xFE1
  8539                           indf2	equ	0xFDF
  8540                           postinc2	equ	0xFDE
  8541                           postdec2	equ	0xFDD
  8542                           plusw2	equ	0xFDB
  8543                           fsr2h	equ	0xFDA
  8544                           fsr2l	equ	0xFD9
  8545                           status	equ	0xFD8
  8546                           
  8547 ;; *************** function _clcd_print *****************
  8548 ;; Defined at:
  8549 ;;		line 42 in file "clcd.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  data            2   16[COMRAM] PTR const unsigned char 
  8552 ;;		 -> STR_36(4), STR_35(4), STR_34(4), STR_33(4), 
  8553 ;;		 -> STR_32(4), STR_31(4), display_speed@buff(5), n_time(9), 
  8554 ;;		 -> STR_30(9), STR_29(16), STR_28(19), STR_27(16), 
  8555 ;;		 -> STR_26(19), STR_25(18), STR_24(15), STR_23(15), 
  8556 ;;		 -> STR_22(24), STR_21(16), STR_20(13), STR_19(16), 
  8557 ;;		 -> STR_18(23), STR_17(19), date(11), time(9), 
  8558 ;;		 -> STR_13(6), STR_12(9), STR_11(9), STR_10(16), 
  8559 ;;		 -> STR_9(9), STR_8(5), STR_7(4), STR_6(4), 
  8560 ;;		 -> STR_5(8), STR_4(5), save_array(17), STR_3(4), 
  8561 ;;		 -> STR_2(4), STR_1(5), 
  8562 ;;  addr            1   18[COMRAM] unsigned char 
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      void 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8574 ;;      Params:         3       0       0       0       0       0       0
  8575 ;;      Locals:         0       0       0       0       0       0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0
  8577 ;;      Totals:         3       0       0       0       0       0       0
  8578 ;;Total ram usage:        3 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:    2
  8581 ;; This function calls:
  8582 ;;		_clcd_write
  8583 ;; This function is called by:
  8584 ;;		_main
  8585 ;;		_display_menu
  8586 ;;		_display_time
  8587 ;;		_password_change
  8588 ;;		_view_log
  8589 ;;		_password_compare
  8590 ;;		_set_time
  8591 ;;		_display_speed
  8592 ;;		_ON_OFF_up_down_gear
  8593 ;;		_display_date
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text47
  8598  001486                     __ptext47:
  8599                           	opt stack 0
  8600  001486                     _clcd_print:
  8601                           	opt stack 27
  8602                           
  8603                           ;clcd.c: 44: clcd_write(addr, 0);
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;incstack = 0
  8607  001486  0E00               	movlw	0
  8608  001488  6E0F               	movwf	clcd_write@control_bit,c
  8609  00148A  5013               	movf	clcd_print@addr,w,c
  8610  00148C  EC0D  F00C         	call	_clcd_write
  8611                           
  8612                           ;clcd.c: 45: while (*data != '\0')
  8613  001490  D016               	goto	l4257
  8614  001492                     l4253:
  8615                           
  8616                           ;clcd.c: 46: {
  8617                           ;clcd.c: 47: clcd_write(*data++, 1);
  8618  001492  0E01               	movlw	1
  8619  001494  6E0F               	movwf	clcd_write@control_bit,c
  8620  001496  C011  FFF6         	movff	clcd_print@data,tblptrl
  8621  00149A  C012  FFF7         	movff	clcd_print@data+1,tblptrh
  8622  00149E  6AF8               	clrf	tblptru,c
  8623  0014A0  0E05               	movlw	(high __ramtop+-1)
  8624  0014A2  64F7               	cpfsgt	tblptrh,c
  8625  0014A4  D003               	bra	u3537
  8626  0014A6  0008               	tblrd		*
  8627  0014A8  50F5               	movf	tablat,w,c
  8628  0014AA  D005               	bra	u3530
  8629  0014AC                     u3537:
  8630  0014AC  CFF6 FFE9          	movff	tblptrl,fsr0l
  8631  0014B0  CFF7 FFEA          	movff	tblptrh,fsr0h
  8632  0014B4  50EF               	movf	indf0,w,c
  8633  0014B6                     u3530:
  8634  0014B6  EC0D  F00C         	call	_clcd_write
  8635  0014BA  4A11               	infsnz	clcd_print@data,f,c
  8636  0014BC  2A12               	incf	clcd_print@data+1,f,c
  8637  0014BE                     l4257:
  8638  0014BE  C011  FFF6         	movff	clcd_print@data,tblptrl
  8639  0014C2  C012  FFF7         	movff	clcd_print@data+1,tblptrh
  8640  0014C6  6AF8               	clrf	tblptru,c
  8641  0014C8  0E05               	movlw	(high __ramtop+-1)
  8642  0014CA  64F7               	cpfsgt	tblptrh,c
  8643  0014CC  D003               	bra	u3547
  8644  0014CE  0008               	tblrd		*
  8645  0014D0  50F5               	movf	tablat,w,c
  8646  0014D2  D005               	bra	u3540
  8647  0014D4                     u3547:
  8648  0014D4  CFF6 FFE9          	movff	tblptrl,fsr0l
  8649  0014D8  CFF7 FFEA          	movff	tblptrh,fsr0h
  8650  0014DC  50EF               	movf	indf0,w,c
  8651  0014DE                     u3540:
  8652  0014DE  0900               	iorlw	0
  8653  0014E0  B4D8               	btfsc	status,2,c
  8654  0014E2  0012               	return	
  8655  0014E4  D7D6               	goto	l4253
  8656  0014E6                     __end_of_clcd_print:
  8657                           	opt stack 0
  8658                           tblptru	equ	0xFF8
  8659                           tblptrh	equ	0xFF7
  8660                           tblptrl	equ	0xFF6
  8661                           tablat	equ	0xFF5
  8662                           prodh	equ	0xFF4
  8663                           prodl	equ	0xFF3
  8664                           intcon	equ	0xFF2
  8665                           intcon2	equ	0xFF1
  8666                           indf0	equ	0xFEF
  8667                           postinc0	equ	0xFEE
  8668                           fsr0h	equ	0xFEA
  8669                           fsr0l	equ	0xFE9
  8670                           wreg	equ	0xFE8
  8671                           indf1	equ	0xFE7
  8672                           postdec1	equ	0xFE5
  8673                           plusw1	equ	0xFE3
  8674                           fsr1h	equ	0xFE2
  8675                           fsr1l	equ	0xFE1
  8676                           indf2	equ	0xFDF
  8677                           postinc2	equ	0xFDE
  8678                           postdec2	equ	0xFDD
  8679                           plusw2	equ	0xFDB
  8680                           fsr2h	equ	0xFDA
  8681                           fsr2l	equ	0xFD9
  8682                           status	equ	0xFD8
  8683                           
  8684 ;; *************** function _clcd_write *****************
  8685 ;; Defined at:
  8686 ;;		line 4 in file "clcd.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  byte            1    wreg     unsigned char 
  8689 ;;  control_bit     1   14[COMRAM] unsigned char 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  byte            1   15[COMRAM] unsigned char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      void 
  8694 ;; Registers used:
  8695 ;;		wreg
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8701 ;;      Params:         1       0       0       0       0       0       0
  8702 ;;      Locals:         1       0       0       0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0
  8704 ;;      Totals:         2       0       0       0       0       0       0
  8705 ;;Total ram usage:        2 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    1
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_init_clcd
  8712 ;;		_clcd_print
  8713 ;;		_clcd_putch
  8714 ;;		_main
  8715 ;;		_display_menu
  8716 ;;		_password_change
  8717 ;;		_view_log
  8718 ;;		_password_compare
  8719 ;;		_set_time
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text48
  8724  00181A                     __ptext48:
  8725                           	opt stack 0
  8726  00181A                     _clcd_write:
  8727                           	opt stack 28
  8728                           
  8729                           ;incstack = 0
  8730                           ;clcd_write@byte stored from wreg
  8731  00181A  6E10               	movwf	clcd_write@byte,c
  8732                           
  8733                           ;clcd.c: 6: RC1 = control_bit;
  8734  00181C  A00F               	btfss	clcd_write@control_bit,0,c
  8735  00181E  D002               	goto	u3370
  8736  001820  8282               	bsf	3970,1,c	;volatile
  8737  001822  D001               	goto	l4135
  8738  001824                     u3370:
  8739  001824  9282               	bcf	3970,1,c	;volatile
  8740  001826                     l4135:
  8741                           
  8742                           ;clcd.c: 7: PORTD = byte;
  8743  001826  C010  FF83         	movff	clcd_write@byte,3971	;volatile
  8744                           
  8745                           ;clcd.c: 10: RC2 = 1;
  8746  00182A  8482               	bsf	3970,2,c	;volatile
  8747                           
  8748                           ;clcd.c: 11: RC2 = 0;
  8749  00182C  9482               	bcf	3970,2,c	;volatile
  8750                           
  8751                           ;clcd.c: 13: TRISD7 = 0xFF;
  8752  00182E  8E95               	bsf	3989,7,c	;volatile
  8753                           
  8754                           ;clcd.c: 14: RC0 = 1;
  8755  001830  8082               	bsf	3970,0,c	;volatile
  8756                           
  8757                           ;clcd.c: 15: RC1 = 0;
  8758  001832  9282               	bcf	3970,1,c	;volatile
  8759  001834                     l4147:
  8760                           
  8761                           ;clcd.c: 18: {
  8762                           ;clcd.c: 19: RC2 = 1;
  8763  001834  8482               	bsf	3970,2,c	;volatile
  8764                           
  8765                           ;clcd.c: 20: RC2 = 0;
  8766  001836  9482               	bcf	3970,2,c	;volatile
  8767                           
  8768                           ;clcd.c: 21: } while (RD7);
  8769  001838  BE83               	btfsc	3971,7,c	;volatile
  8770  00183A  D7FC               	goto	l4147
  8771                           
  8772                           ;clcd.c: 23: RC0 = 0;
  8773  00183C  9082               	bcf	3970,0,c	;volatile
  8774                           
  8775                           ;clcd.c: 24: TRISD7 = 0x00;
  8776  00183E  9E95               	bcf	3989,7,c	;volatile
  8777  001840  0012               	return		;funcret
  8778  001842                     __end_of_clcd_write:
  8779                           	opt stack 0
  8780                           tblptru	equ	0xFF8
  8781                           tblptrh	equ	0xFF7
  8782                           tblptrl	equ	0xFF6
  8783                           tablat	equ	0xFF5
  8784                           prodh	equ	0xFF4
  8785                           prodl	equ	0xFF3
  8786                           intcon	equ	0xFF2
  8787                           intcon2	equ	0xFF1
  8788                           indf0	equ	0xFEF
  8789                           postinc0	equ	0xFEE
  8790                           fsr0h	equ	0xFEA
  8791                           fsr0l	equ	0xFE9
  8792                           wreg	equ	0xFE8
  8793                           indf1	equ	0xFE7
  8794                           postdec1	equ	0xFE5
  8795                           plusw1	equ	0xFE3
  8796                           fsr1h	equ	0xFE2
  8797                           fsr1l	equ	0xFE1
  8798                           indf2	equ	0xFDF
  8799                           postinc2	equ	0xFDE
  8800                           postdec2	equ	0xFDD
  8801                           plusw2	equ	0xFDB
  8802                           fsr2h	equ	0xFDA
  8803                           fsr2l	equ	0xFD9
  8804                           status	equ	0xFD8
  8805                           
  8806 ;; *************** function _isr *****************
  8807 ;; Defined at:
  8808 ;;		line 4 in file "isr.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;		None
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;		None
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      void 
  8815 ;; Registers used:
  8816 ;;		wreg, status,2, status,0
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8822 ;;      Params:         0       0       0       0       0       0       0
  8823 ;;      Locals:         0       0       0       0       0       0       0
  8824 ;;      Temps:         14       0       0       0       0       0       0
  8825 ;;      Totals:        14       0       0       0       0       0       0
  8826 ;;Total ram usage:       14 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; This function calls:
  8829 ;;		Nothing
  8830 ;; This function is called by:
  8831 ;;		Interrupt level 2
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	intcode
  8836  000008                     __pintcode:
  8837                           	opt stack 0
  8838  000008                     _isr:
  8839                           	opt stack 24
  8840                           
  8841                           ;incstack = 0
  8842  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8843  00000A  CFFA F001          	movff	pclath,??_isr
  8844  00000E  CFFB F002          	movff	pclatu,??_isr+1
  8845  000012  EDDA  F007         	call	int_func,f	;refresh shadow registers
  8846                           pclatu	equ	0xFFB
  8847                           pclath	equ	0xFFA
  8848                           tblptru	equ	0xFF8
  8849                           tblptrh	equ	0xFF7
  8850                           tblptrl	equ	0xFF6
  8851                           tablat	equ	0xFF5
  8852                           prodh	equ	0xFF4
  8853                           prodl	equ	0xFF3
  8854                           intcon	equ	0xFF2
  8855                           intcon2	equ	0xFF1
  8856                           indf0	equ	0xFEF
  8857                           postinc0	equ	0xFEE
  8858                           fsr0h	equ	0xFEA
  8859                           fsr0l	equ	0xFE9
  8860                           wreg	equ	0xFE8
  8861                           indf1	equ	0xFE7
  8862                           postdec1	equ	0xFE5
  8863                           plusw1	equ	0xFE3
  8864                           fsr1h	equ	0xFE2
  8865                           fsr1l	equ	0xFE1
  8866                           indf2	equ	0xFDF
  8867                           postinc2	equ	0xFDE
  8868                           postdec2	equ	0xFDD
  8869                           plusw2	equ	0xFDB
  8870                           fsr2h	equ	0xFDA
  8871                           fsr2l	equ	0xFD9
  8872                           status	equ	0xFD8
  8873                           
  8874                           	psect	intcode_body
  8875  000FB4                     __pintcode_body:
  8876                           	opt stack 24
  8877  000FB4                     int_func:
  8878                           	opt stack 24
  8879  000FB4  0006               	pop		; remove dummy address from shadow register refresh
  8880  000FB6  CFE9 F003          	movff	fsr0l,??_isr+2
  8881  000FBA  CFEA F004          	movff	fsr0h,??_isr+3
  8882  000FBE  CFE1 F005          	movff	fsr1l,??_isr+4
  8883  000FC2  CFE2 F006          	movff	fsr1h,??_isr+5
  8884  000FC6  CFD9 F007          	movff	fsr2l,??_isr+6
  8885  000FCA  CFDA F008          	movff	fsr2h,??_isr+7
  8886  000FCE  CFF3 F009          	movff	prodl,??_isr+8
  8887  000FD2  CFF4 F00A          	movff	prodh,??_isr+9
  8888  000FD6  CFF6 F00B          	movff	tblptrl,??_isr+10
  8889  000FDA  CFF7 F00C          	movff	tblptrh,??_isr+11
  8890  000FDE  CFF8 F00D          	movff	tblptru,??_isr+12
  8891  000FE2  CFF5 F00E          	movff	tablat,??_isr+13
  8892                           
  8893                           ;isr.c: 6: static unsigned short count;
  8894                           ;isr.c: 8: if (TMR0IF)
  8895  000FE6  A4F2               	btfss	intcon,2,c	;volatile
  8896  000FE8  D021               	goto	i2l25
  8897                           
  8898                           ;isr.c: 9: {
  8899                           ;isr.c: 10: TMR0 = TMR0 + 8;
  8900  000FEA  0E08               	movlw	8
  8901  000FEC  24D6               	addwf	4054,w,c	;volatile
  8902  000FEE  6ED6               	movwf	4054,c	;volatile
  8903  000FF0  0E00               	movlw	0
  8904  000FF2  20D7               	addwfc	4055,w,c	;volatile
  8905  000FF4  6ED7               	movwf	4055,c	;volatile
  8906                           
  8907                           ;isr.c: 12: if (count++ == 20000)
  8908  000FF6  0100               	movlb	0	; () banked
  8909  000FF8  4B78               	infsnz	isr@count& (0+255),f,b
  8910  000FFA  2B79               	incf	(isr@count+1)& (0+255),f,b
  8911  000FFC  0E21               	movlw	33
  8912  000FFE  0100               	movlb	0	; () banked
  8913  001000  1978               	xorwf	isr@count& (0+255),w,b
  8914  001002  E113               	bnz	i2l3919
  8915  001004  0E4E               	movlw	78
  8916  001006  0100               	movlb	0	; () banked
  8917  001008  1979               	xorwf	(isr@count+1)& (0+255),w,b
  8918  00100A  A4D8               	btfss	status,2,c
  8919  00100C  D00E               	goto	i2l3919
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;isr.c: 13: {
  8923                           ;isr.c: 14: flag--;
  8924  00100E  064D               	decf	_flag,f,c
  8925  001010  A0D8               	btfss	status,0,c
  8926  001012  064E               	decf	_flag+1,f,c
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;isr.c: 15: if (flag <= 0)
  8930  001014  BE4E               	btfsc	_flag+1,7,c
  8931  001016  D005               	goto	i2l3917
  8932  001018  504E               	movf	_flag+1,w,c
  8933  00101A  E107               	bnz	i2l3919
  8934  00101C  044D               	decf	_flag,w,c
  8935  00101E  B0D8               	btfsc	status,0,c
  8936  001020  D004               	goto	i2l3919
  8937  001022                     i2l3917:
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;isr.c: 16: {
  8941                           ;isr.c: 17: flag = 0;
  8942  001022  0E00               	movlw	0
  8943  001024  6E4E               	movwf	_flag+1,c
  8944  001026  0E00               	movlw	0
  8945  001028  6E4D               	movwf	_flag,c
  8946  00102A                     i2l3919:
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;isr.c: 18: }
  8950                           ;isr.c: 20: }
  8951                           ;isr.c: 22: TMR0IF = 0;
  8952  00102A  94F2               	bcf	intcon,2,c	;volatile
  8953  00102C                     i2l25:
  8954  00102C  C00E  FFF5         	movff	??_isr+13,tablat
  8955  001030  C00D  FFF8         	movff	??_isr+12,tblptru
  8956  001034  C00C  FFF7         	movff	??_isr+11,tblptrh
  8957  001038  C00B  FFF6         	movff	??_isr+10,tblptrl
  8958  00103C  C00A  FFF4         	movff	??_isr+9,prodh
  8959  001040  C009  FFF3         	movff	??_isr+8,prodl
  8960  001044  C008  FFDA         	movff	??_isr+7,fsr2h
  8961  001048  C007  FFD9         	movff	??_isr+6,fsr2l
  8962  00104C  C006  FFE2         	movff	??_isr+5,fsr1h
  8963  001050  C005  FFE1         	movff	??_isr+4,fsr1l
  8964  001054  C004  FFEA         	movff	??_isr+3,fsr0h
  8965  001058  C003  FFE9         	movff	??_isr+2,fsr0l
  8966  00105C  C002  FFFB         	movff	??_isr+1,pclatu
  8967  001060  C001  FFFA         	movff	??_isr,pclath
  8968  001064  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8969  001066  0011               	retfie		f
  8970  001068                     __end_of_isr:
  8971                           	opt stack 0
  8972                           pclatu	equ	0xFFB
  8973                           pclath	equ	0xFFA
  8974                           tblptru	equ	0xFF8
  8975                           tblptrh	equ	0xFF7
  8976                           tblptrl	equ	0xFF6
  8977                           tablat	equ	0xFF5
  8978                           prodh	equ	0xFF4
  8979                           prodl	equ	0xFF3
  8980                           intcon	equ	0xFF2
  8981                           intcon2	equ	0xFF1
  8982                           indf0	equ	0xFEF
  8983                           postinc0	equ	0xFEE
  8984                           fsr0h	equ	0xFEA
  8985                           fsr0l	equ	0xFE9
  8986                           wreg	equ	0xFE8
  8987                           indf1	equ	0xFE7
  8988                           postdec1	equ	0xFE5
  8989                           plusw1	equ	0xFE3
  8990                           fsr1h	equ	0xFE2
  8991                           fsr1l	equ	0xFE1
  8992                           indf2	equ	0xFDF
  8993                           postinc2	equ	0xFDE
  8994                           postdec2	equ	0xFDD
  8995                           plusw2	equ	0xFDB
  8996                           fsr2h	equ	0xFDA
  8997                           fsr2l	equ	0xFD9
  8998                           status	equ	0xFD8
  8999                           pclatu	equ	0xFFB
  9000                           pclath	equ	0xFFA
  9001                           tblptru	equ	0xFF8
  9002                           tblptrh	equ	0xFF7
  9003                           tblptrl	equ	0xFF6
  9004                           tablat	equ	0xFF5
  9005                           prodh	equ	0xFF4
  9006                           prodl	equ	0xFF3
  9007                           intcon	equ	0xFF2
  9008                           intcon2	equ	0xFF1
  9009                           indf0	equ	0xFEF
  9010                           postinc0	equ	0xFEE
  9011                           fsr0h	equ	0xFEA
  9012                           fsr0l	equ	0xFE9
  9013                           wreg	equ	0xFE8
  9014                           indf1	equ	0xFE7
  9015                           postdec1	equ	0xFE5
  9016                           plusw1	equ	0xFE3
  9017                           fsr1h	equ	0xFE2
  9018                           fsr1l	equ	0xFE1
  9019                           indf2	equ	0xFDF
  9020                           postinc2	equ	0xFDE
  9021                           postdec2	equ	0xFDD
  9022                           plusw2	equ	0xFDB
  9023                           fsr2h	equ	0xFDA
  9024                           fsr2l	equ	0xFD9
  9025                           status	equ	0xFD8
  9026                           
  9027                           	psect	rparam
  9028  0000                     pclatu	equ	0xFFB
  9029                           pclath	equ	0xFFA
  9030                           tblptru	equ	0xFF8
  9031                           tblptrh	equ	0xFF7
  9032                           tblptrl	equ	0xFF6
  9033                           tablat	equ	0xFF5
  9034                           prodh	equ	0xFF4
  9035                           prodl	equ	0xFF3
  9036                           intcon	equ	0xFF2
  9037                           intcon2	equ	0xFF1
  9038                           indf0	equ	0xFEF
  9039                           postinc0	equ	0xFEE
  9040                           fsr0h	equ	0xFEA
  9041                           fsr0l	equ	0xFE9
  9042                           wreg	equ	0xFE8
  9043                           indf1	equ	0xFE7
  9044                           postdec1	equ	0xFE5
  9045                           plusw1	equ	0xFE3
  9046                           fsr1h	equ	0xFE2
  9047                           fsr1l	equ	0xFE1
  9048                           indf2	equ	0xFDF
  9049                           postinc2	equ	0xFDE
  9050                           postdec2	equ	0xFDD
  9051                           plusw2	equ	0xFDB
  9052                           fsr2h	equ	0xFDA
  9053                           fsr2l	equ	0xFD9
  9054                           status	equ	0xFD8
  9055                           
  9056                           	psect	temp
  9057  000050                     btemp:
  9058                           	opt stack 0
  9059  000050                     	ds	1
  9060  0000                     int$flags	set	btemp
  9061                           pclatu	equ	0xFFB
  9062                           pclath	equ	0xFFA
  9063                           tblptru	equ	0xFF8
  9064                           tblptrh	equ	0xFF7
  9065                           tblptrl	equ	0xFF6
  9066                           tablat	equ	0xFF5
  9067                           prodh	equ	0xFF4
  9068                           prodl	equ	0xFF3
  9069                           intcon	equ	0xFF2
  9070                           intcon2	equ	0xFF1
  9071                           indf0	equ	0xFEF
  9072                           postinc0	equ	0xFEE
  9073                           fsr0h	equ	0xFEA
  9074                           fsr0l	equ	0xFE9
  9075                           wreg	equ	0xFE8
  9076                           indf1	equ	0xFE7
  9077                           postdec1	equ	0xFE5
  9078                           plusw1	equ	0xFE3
  9079                           fsr1h	equ	0xFE2
  9080                           fsr1l	equ	0xFE1
  9081                           indf2	equ	0xFDF
  9082                           postinc2	equ	0xFDE
  9083                           postdec2	equ	0xFDD
  9084                           plusw2	equ	0xFDB
  9085                           fsr2h	equ	0xFDA
  9086                           fsr2l	equ	0xFD9
  9087                           status	equ	0xFD8


Data Sizes:
    Strings     321
    Constant    0
    Data        24
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      79
    BANK0           160     18      93
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> password_compare@enter_pass(COMRAM[5]), password_change@r_password(COMRAM[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> password_compare@password(COMRAM[5]), password_change@c_password(COMRAM[5]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[3]), download_log@new1(COMRAM[16]), STR_15(CODE[18]), STR_14(CODE[18]), 

    display_menu@menu_list	PTR unsigned char [5] size(2) Largest target is 16
		 -> STR_13(CODE[6]), STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[16]), 
		 -> STR_9(CODE[9]), 

    display_menu@F16059	PTR unsigned char [5] size(2) Largest target is 16
		 -> STR_13(CODE[6]), STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[16]), 
		 -> STR_9(CODE[9]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[4]), display_speed@buff(COMRAM[5]), n_time(COMRAM[9]), 
		 -> STR_30(CODE[9]), STR_29(CODE[16]), STR_28(CODE[19]), STR_27(CODE[16]), 
		 -> STR_26(CODE[19]), STR_25(CODE[18]), STR_24(CODE[15]), STR_23(CODE[15]), 
		 -> STR_22(CODE[24]), STR_21(CODE[16]), STR_20(CODE[13]), STR_19(CODE[16]), 
		 -> STR_18(CODE[23]), STR_17(CODE[19]), date(BANK0[11]), time(BANK0[9]), 
		 -> STR_13(CODE[6]), STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[16]), 
		 -> STR_9(CODE[9]), STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[8]), STR_4(CODE[5]), save_array(BANK0[17]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_password_compare
    _save_speed->___lwdiv
    _save_events->_write_internal_eeprom
    _password_compare->_strcmp
    _init_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _init_clcd->_clcd_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _display_speed->___lwdiv
    _display_menu->_set_time
    _view_log->_clcd_print
    _set_time->_clcd_print
    _write_ds1307->_i2c_write
    _password_change->_delay_fun
    _password_change->_strcmp
    _clcd_putch->_clcd_write
    _download_log->_puts
    _puts->_putch
    _clear_log->_write_internal_eeprom
    _ON_OFF_up_down_gear->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_display_menu

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  163067
                                             47 COMRAM    12    12      0
                _ON_OFF_up_down_gear
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _delay_fun
                       _display_menu
                      _display_speed
                       _display_time
                           _get_time
                        _init_config
                   _password_compare
                           _read_adc
                      _read_switches
                        _save_events
                         _save_speed
                          _save_time
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (1) _save_time                                            4     4      0     158
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _save_speed                                           8     6      2    1167
                                             21 COMRAM     8     6      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _save_events                                          2     2      0     931
                                             16 COMRAM     2     2      0
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      23
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _password_compare                                    27    25      2   21228
                                             20 COMRAM    27    25      2
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_internal_eeprom
                      _read_switches
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    4914
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     848
                                             17 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0    4066
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      96
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      96
                                             15 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (5) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_time                                         0     0      0   10322
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _display_speed                                        8     6      2   11473
                                             21 COMRAM     8     6      2
                            ___lwdiv
                            ___lwmod
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     415
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _display_menu                                        20    20      0   80081
                                             41 COMRAM     2     2      0
                                              0 BANK0     18    18      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _clear_log
                       _download_log
                    _password_change
                      _read_switches
                           _set_time
                           _view_log
 ---------------------------------------------------------------------------------
 (2) _view_log                                            10    10      0   20345
                                             19 COMRAM    10    10      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_internal_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) _set_time                                            42    42      0   15833
                                             19 COMRAM    22    22      0
                         _clcd_print
                         _clcd_write
                      _read_switches
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     709
                                             15 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      31
                                             14 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _password_change                                     18    18      0   22370
                                             20 COMRAM    18    18      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _delay_fun
                      _read_switches
                             _strcmp
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     2      4     749
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        3     3      0     192
                                             14 COMRAM     3     3      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _delay_fun                                            6     6      0     204
                                             14 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    4898
                                             16 COMRAM     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _download_log                                        20    20      0     645
                                             17 COMRAM    20    20      0
                          _init_uart
                               _puts
               _read_internal_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_internal_eeprom                                 1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _puts                                                 2     0      2     404
                                             15 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_log                                            2     2      0     900
                                             16 COMRAM     2     2      0
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (1) _write_internal_eeprom                                2     1      1     832
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     424
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     428
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ON_OFF_up_down_gear                                  4     2      2   10584
                                             19 COMRAM     4     2      2
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3   10322
                                             16 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    4066
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ON_OFF_up_down_gear
     _clcd_print
       _clcd_write
   ___awdiv
   ___awmod
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _clcd_write
   _delay_fun
   _display_menu
     _clcd_print
       _clcd_write
     _clcd_putch
       _clcd_write
     _clcd_write
     _clear_log
       _write_internal_eeprom
     _download_log
       _init_uart
       _puts
         _putch
       _read_internal_eeprom
     _password_change
       _clcd_print
         _clcd_write
       _clcd_putch
         _clcd_write
       _clcd_write
       _delay_fun
       _read_switches
         _scan_key
       _strcmp
       _write_internal_eeprom
     _read_switches
       _scan_key
     _set_time
       _clcd_print
         _clcd_write
       _clcd_write
       _read_switches
         _scan_key
       _write_ds1307
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
     _view_log
       _clcd_print
         _clcd_write
       _clcd_putch
         _clcd_write
       _clcd_write
       _read_internal_eeprom
       _read_switches
         _scan_key
   _display_speed
     ___lwdiv
     ___lwmod
     _clcd_print
       _clcd_write
   _display_time
     _clcd_print
       _clcd_write
   _get_time
     _read_ds1307
       _i2c_read
         _i2c_no_ack
         _i2c_rx_mode
           _i2c_idle
       _i2c_rep_start
         _i2c_idle
       _i2c_start
         _i2c_idle
       _i2c_stop
         _i2c_idle
       _i2c_write
         _i2c_idle
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
       _write_ds1307
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
     _init_i2c
     _init_matrix_keypad
     _init_timer0
   _password_compare
     _clcd_print
       _clcd_write
     _clcd_putch
       _clcd_write
     _clcd_write
     _read_internal_eeprom
     _read_switches
       _scan_key
     _strcmp
   _read_adc
   _read_switches
     _scan_key
   _save_events
     _write_internal_eeprom
   _save_speed
     ___lwdiv
     ___lwmod
   _save_time
   _write_internal_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      5D       5       58.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      4F       1       84.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AC       3        0.0%
DATA                 0      0      AC      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Nov  7 12:15:34 2019

                clcd_print@addr 0013                  clcd_print@data 0011                              _GO 007E11  
                  ___awdiv@sign 0014                     __CFG_OSC$XT 000000              _init_matrix_keypad 1916  
                           l220 1210                             l230 123E                             l222 1228  
                           l223 1218                             l232 1246                             l225 1220  
                           l235 125E                             l228 1236                             l237 1266  
                           l229 124E                             l239 126E                             l273 1352  
                           l355 1984                             l615 1886                             l732 1844  
                           l582 0202                             l659 19B8                             _CKE 007E3E  
                           _GIE 007F97                             _RB1 007C09                             _RC0 007C10  
                           _RB2 007C0A                             _RC1 007C11                             _RB3 007C0B  
                           _RC2 007C12                             _RB4 007C0C                             _RB5 007C0D  
                           _RB6 007C0E                             _RB7 007C0F                   ?_display_menu 0001  
                           _RD7 007C1F                             _PEN 007E2A                             _SEN 007E28  
                           _RX9 007D5E                             _SMP 007E3F                             _TX9 007D66  
                 ?_display_time 0001                             _WUE 007DC1                             _isr 0008  
                clcd_putch@addr 0011                  clcd_putch@data 0012                    ___awmod@sign 0014  
                           prod 000FF3                             wreg 000FE8             ?_init_matrix_keypad 0001  
                  __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000                            l1156 15DE  
                          l1166 1704                            l5001 0BE0                            l4221 1276  
                          l4301 1740                            l5013 0C1C                            l4135 1826  
                          l5111 039E                            l5041 0E9A                            l5033 0E7C  
                          l4313 14EE                            l5025 0CA4                            l4147 1834  
                          l4323 1516                            l4307 174C                            l5019 0C3C  
                          l5203 0598                            l4253 1492                            l5061 0F28  
                          l5053 0EE0                            l5045 0EAE                            l4333 1534  
                          l4317 14FE                            l3461 15B8                            l5047 0EB4  
                          l5071 0F64                            l4327 151C                            l4319 1506  
                          l5223 05E2                            l5207 05A8                            l5151 046E  
                          l4257 14BE                            l5065 0F4C                            l5057 0F04  
                          l5049 0EBC                            l5073 0FA6                            l4337 153A  
                          l4329 1524                            l4521 08BA                            l4433 0CD8  
                          l3457 15AC                            l3481 16E6                            l5081 1642  
                          l5217 05CC                            l5145 0458                            l5153 047A  
                          l5067 0F54                            l3459 15B4                            l3901 12D2  
                          l4373 1612                            l4541 0922                            l4533 08F4  
                          l4445 0D18                            l3469 15D4                            l3485 16FA  
                          l3477 16DA                            l5093 1672                            l5085 1652  
                          l3741 133C                            l3725 12F2                            l5173 0502  
                          l4391 1688                            l4711 01B8                            l4463 0D74  
                          l3479 16E2                            l3735 1324                            l5183 0528  
                          l3905 12E0                            l4369 15EA                            l4297 1734  
                          l4393 1690                            l4561 0972                            l4537 090A  
                          l4529 08E6                            l4641 009A                            l4465 0D7E  
                          l4457 0D58                            l4449 0D28                            l3737 132C  
                          l3729 1302                            l3851 1146                            l3843 1128  
                          l4723 0252                            l4715 01FE                            l4643 009E  
                          l4619 003A                            l4731 02A4                            l3861 1166  
                          l3853 114A                            l3837 1118                            l4397 16C0  
                          l4565 0988                            l4557 0964                            l4717 0212  
                          l4661 00E2                            l4653 00BE                            l4637 008C  
                          l4821 11AC                            l5197 056C                            l4575 09B4  
                          l4671 0102                            l4655 00D0                            l5199 0588  
                          l3849 113E                            l3865 1170                            l3881 128E  
                          l4569 09A0                            l4577 09BA                            l4729 0288  
                          l4673 0114                            l4649 00B8                            l4921 07B0  
                          l3891 12B0                            l4739 02D6                            l4667 00FC  
                          l4691 0158                            l4923 07B8                            l3869 117E  
                          l3893 12B4                            l3885 129A                            l4781 10C4  
                          l4773 10A6                            l4685 0140                            l4837 1358  
                          l4917 0796                            l3797 1426                            l4767 108E  
                          l4599 0A46                            l4679 0126                            l4927 07D0  
                          l4863 0680                            l3897 12C8                            l3889 12A8  
                          l4769 1096                            l4785 10E0                            l4689 0146  
                          l4929 07E0                            _ADFM 007E07                            l4795 17CE  
                          l4787 10F0                            l4883 06E8                            l4947 0846  
                          l4875 06BA                            ?_isr 0001                            l4981 0B78  
                          l4949 084E                            l4799 17DC                            l4983 0B7E  
                          l4991 0B90                            l4967 0B20                            l4879 06D0  
                          l4985 0B84                            l4993 0BC0                            l4977 0B68  
                          l4987 0B8A                            l4899 0732                            l4997 0BCC  
                          _ADON 007E10                            _CHS2 007E14                            STR_1 2FD0  
                          STR_2 2FFA                            STR_3 2F31                            STR_4 2FD5  
                          STR_5 2F4D                            STR_6 2FF2                            STR_7 2FF6  
                          STR_8 2FCB                            STR_9 2FBC                            _BRGH 007D62  
                          _T0IF 007F92                            _CREN 007D5C                            _T0CS 007EAD  
                          _FERR 007D5A                            _CSRC 007D67                            u3370 1824  
                          u3530 14B6                            u3540 14DE                            u3537 14AC  
                          u3801 086A                            u4441 0ACA                            u4281 063C  
                          u3547 14D4                            u3811 087C                            u4291 064E  
                          u4460 0B5C                            u3680 160A                            u3690 1632  
                          u4570 042C                            _RCIE 007CED                            _RCIF 007CF5  
                          _RCEN 007E2B                            u4670 0538                            u3687 1600  
                          u4680 053A                            i2l25 102C                            u3697 1628  
                          _OERR 007D59                            _SCKP 007DC4                            _RBPU 007F8F  
                          _RX9D 007D58                            _TMR0 000FD6                            _SPEN 007D5F  
                          _RSEN 007E29                            _TX9D 007D60                            _SREN 007D5D  
                          _TRMT 007D61                            _TXIE 007CEC                            _TXIF 007CF4  
                          _TXEN 007D65                            _SYNC 007D64                  ?_display_speed 0016  
                          _date 008D                            _flag 004D                            _main 0366  
                          _save 003E                            _time 0098                            fsr0h 000FEA  
                          fsr1h 000FE2                            indf0 000FEF                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            btemp 0050  
                          _puts 15E8                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 0016            ??_init_matrix_keypad 000F  
                  ___param_bank 000010                  clcd_write@byte 0010               password_compare@i 001C  
             password_compare@j 002B        __size_of_password_change 0246                   _i2c_rep_start 1998  
                 ??_i2c_rx_mode 000F                           ??_isr 0001                    ?_init_ds1307 0001  
            password_change@key 0024              password_change@pos 0025                  ??_display_menu 002A  
                         _ABDEN 007DC0                           _ADCS0 007E00                           _ADCS1 007E01  
                         _ADCS2 007E02                           _ADDEN 007D5B                           ?_main 0001  
                  ?_read_ds1307 0001                           _ACKEN 007E2C                           _ACKDT 007E2D  
                ??_display_time 0014                           _BCLIF 007D0B                           _ACQT0 007E03  
                         _ACQT1 007E04                           _ACQT2 007E05                 __end_of___awdiv 1188  
                         _EEADR 000FA9                           STR_10 2F75                           STR_11 2FB3  
                         STR_20 2F94                           STR_12 2FAA                           STR_21 2F65  
                         STR_13 2FC5                           STR_30 2FA1                           STR_14 2F11  
                         STR_22 2EBD                           STR_31 2FEE                           STR_23 2F85  
                         STR_15 2F23                           STR_16 2F20                           STR_24 2F85  
                         STR_32 2FEA                           _BRG16 007DC3                           STR_17 2ED9  
                         STR_33 2FDA                           STR_25 2EFF                           STR_34 2FDE  
                         STR_26 2EEC                           STR_18 2ED5                           STR_35 2FE2  
                         STR_19 2F55                           STR_27 2F35                           STR_28 2EEC  
                         STR_36 2FE6                 __end_of___awmod 12EA                           STR_29 2F45  
                         ?_puts 0010                 ___awdiv@divisor 0011                 __end_of___lwdiv 15E8  
               __end_of___lwmod 170E                    ?_init_config 0001                           _RCIDL 007DC6  
               ___awdiv@counter 0013                           _VCFG0 007E0C                           _VCFG1 007E0D  
                         _RCREG 000FAE                           _SENDB 007D63                           _SPBRG 000FAF  
                         _PORTB 000F81                           _PORTD 000F83                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _SSPIF 007CF3  
                         _TXREG 000FAD                    ?_init_timer0 0001           password_compare@flag1 001E  
         password_compare@count 0029      password_compare@enter_pass 0017                    view_log@key1 0016  
                         _putch 1982                  __CFG_BOREN$OFF 000000                           tablat 000FF5  
                         plusw1 000FE3                           plusw2 000FDB                           puts@s 0010  
                         status 000FD8         ??_write_internal_eeprom 0010                init_ds1307@dummy 0012  
                    _i2c_no_ack 19C0           __size_of_write_ds1307 001E                 __initialization 13BC  
                ?_i2c_rep_start 0001              password_compare@ch 0025                    __end_of_main 060E  
                  __end_of_puts 163A                __end_of_i2c_idle 19C0                __end_of_i2c_read 1976  
              __end_of_i2c_stop 19B0                  save_time@i_231 000F                   ?_download_log 0001  
                        ??_main 0030                          ??_puts 0012                   __activetblptr 000002  
           __end_of_i2c_rx_mode 19A8             password_change@star 0015          password_compare@F16070 006F  
        password_compare@F16068 006A                  save_speed@buff 0018        __end_of_password_compare 0860  
                        _ADCON1 000FC1                          _ABDOVF 007DC7                read_switches@key 0011  
               ??_display_speed 0018                          _ADRESH 000FC4                          _ADRESL 000FC3  
                        _EEDATA 000FA8                          _EECON2 000FA7                ___awdiv@dividend 000F  
                  ?_save_events 0001                          ?_putch 0001                          _GODONE 007E11  
                        i2l3917 1022                          i2l3919 102A                    _write_ds1307 18B0  
                        _TMR0IE 007F95                          _TMR0IF 007F92                          _SSPADD 000FC8  
                        _TRISC3 007CA3                          _TRISC4 007CA4                          _TRISC6 007CA6  
                        _TRISC7 007CA7                          _TRISD7 007CAF                          _SSPBUF 000FC9  
            __size_of_i2c_start 0008              __size_of_i2c_write 000C                __end_of_get_time 1202  
                     ??___awdiv 0013                       ??___awmod 0013                 set_time@sh_flag 0016  
                     ??___lwdiv 0013                       ??___lwmod 0013                __end_of_init_i2c 1916  
              __end_of_init_adc 18B0                          _n_time 0041                __end_of_read_adc 1868  
                        clear_0 13C2                  ??_download_log 0012                ___awdiv@quotient 0015  
               ___awmod@divisor 0011                    _calender_reg 0074                __end_of_scan_key 127A  
                 view_log@count 0017                 ___awmod@counter 0013                          _strcmp 1686  
             ??_password_change 0015                    __pdataCOMRAM 003C                __end_of_set_time 0366  
                  __mediumconst 2EBC                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                __end_of_view_log 0E7A   __size_of_read_internal_eeprom 0012  
        password_change@address 0021                      __accesstop 0060         __end_of__initialization 1414  
               __CFG_PBADEN$OFF 000000            __end_of_display_menu 0CB0            __end_of_display_time 193A  
                 ___rparam_used 000001     __end_of_ON_OFF_up_down_gear 0FB4                 ??_i2c_rep_start 000F  
                   ?_i2c_no_ack 0001                  __pcstackCOMRAM 0001                    __pidataBANK0 198E  
                   _i2c_rx_mode 19A0             password_compare@key 002D             password_compare@pos 002E  
        __size_of_read_switches 0042                   __end_of_putch 198E              __size_of_delay_fun 005A  
            __size_of_clear_log 002C            __size_of_init_ds1307 0056               __end_of_i2c_start 19B8  
             __end_of_i2c_write 1982            __size_of_read_ds1307 002A            __size_of_init_config 001A  
          __size_of_init_timer0 0010                         ??_putch 000F                      __pbssBANK0 0060  
          password_change@count 0022                       ?_i2c_idle 0001                       ?_i2c_read 0001  
                     ?_i2c_stop 0001              __size_of_init_clcd 0036              __size_of_init_uart 003E  
                    _clcd_print 1486                      _clcd_putch 18E8                      _clcd_write 181A  
               read_ds1307@data 0011               read_switches@key1 000F               read_switches@once 0040  
                       _ACKSTAT 007E2E              __size_of_save_time 006A                         ?_strcmp 000F  
           __size_of_i2c_no_ack 0006                         _SSPCON1 000FC6                       ?_get_time 0001  
                 _read_switches 170E                      ??_i2c_idle 000F                      ??_i2c_read 000F  
                    ??_i2c_stop 000F                       ?_init_i2c 0001            __end_of_download_log 1104  
          __size_of_save_events 004C     read_internal_eeprom@address 000F                       ?_init_adc 0001  
             __end_of_delay_fun 1540                       ?_read_adc 000F               __end_of_clear_log 17F0  
                     ?_scan_key 0001  __size_of_write_internal_eeprom 0026   __end_of_write_internal_eeprom 188E  
                   save_speed@i 001D                         __Hparam 0000                         __Lparam 0000  
                     ?_set_time 0001     __size_of_init_matrix_keypad 0012         password_compare@address 0026  
                       ___awdiv 1104                         ___awmod 127A                       ?_view_log 0001  
                       ___lwdiv 1596                         ___lwmod 16CC        display_speed@adc_reg_val 0016  
                       __pcinit 13BC                         __ramtop 0600                         __ptext0 0366  
                       __ptext1 12EA                         __ptext2 1422                         __ptext3 163A  
                       __ptext4 1842                         __ptext5 060E                         __ptext6 18CE  
                       __ptext7 194C                         __ptext8 1916                         __ptext9 1900  
               __size_of_strcmp 0046               __end_of_init_clcd 17C4                    __size_of_isr 1060  
             __end_of_init_uart 178E                ___awmod@dividend 000F       write_internal_eeprom@data 000F  
                ?_read_switches 0001                         main@key 003B               ?_password_compare 0015  
         __size_of_display_menu 020A                      ??_get_time 0012                  __pintcode_body 0FB4  
         __size_of_display_time 0012                      delay_fun@i 000F                      delay_fun@j 0011  
                    delay_fun@k 0013            end_of_initialization 1414               __end_of_save_time 1354  
            ??_password_compare 0017              display_menu@F16059 00B3                     set_time@key 0027  
                    ??_init_i2c 000F                      ??_init_adc 000F                   __Lmediumconst 2EBC  
                    ??_read_adc 0011                         int_func 0FB4                      _save_array 007C  
                    ??_scan_key 000F                      _save_speed 1422                     ?_clcd_print 0011  
                   ?_clcd_putch 0011                     ?_clcd_write 000F                 _password_change 0860  
                    ??_set_time 0014                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE                      ??_view_log 0014  
                display_speed@i 001D                         strcmp@r 0014                   _new_time_flag 004F  
               main@adc_reg_val 0036                 read_adc@channel 0001                    _display_menu 0AA6  
                  _display_time 1928                   i2c_write@data 000F                      main@ON_OFF 0038  
               read_adc@reg_val 0013           __end_of_display_speed 13BC                    ??_i2c_no_ack 000F  
                    main@status 0032    __end_of_read_internal_eeprom 194C                    ?_i2c_rx_mode 0001  
                 __pidataCOMRAM 195C            password_compare@flag 0027       password_change@c_password 001C  
                   view_log@add 001C                     view_log@key 001B                  __end_of_strcmp 16CC  
           start_initialization 13BC                 ??_read_switches 000F             __size_of_clcd_print 0060  
           __size_of_clcd_putch 0018             __size_of_clcd_write 0028                       _i2c_start 19B0  
                   __end_of_isr 1068                       _i2c_write 1976           __size_of_download_log 009C  
            __end_of_i2c_no_ack 19C6         ON_OFF_up_down_gear@gear 0014           password_change@F16060 0060  
         password_change@F16062 0065         __end_of_password_change 0AA6                     ?_save_speed 0016  
             __size_of_i2c_idle 0008               __size_of_i2c_read 000C               __size_of_i2c_stop 0008  
         __end_of_i2c_rep_start 19A0                  set_time@t_flag 0015                   ??_init_ds1307 0012  
                   __pdataBANK0 00B3    __size_of_ON_OFF_up_down_gear 013A                   ??_read_ds1307 0010  
                  _download_log 1068                        ??_strcmp 0013     read_switches@detection_type 0010  
                 ??_init_config 0013                   ??_init_timer0 000F                     __pbssCOMRAM 004A  
                 __pcstackBANK0 00A1                      ?_i2c_start 0001                      ?_i2c_write 0001  
                     _e_address 003C               __size_of_get_time 007A               __size_of_init_i2c 0016  
             __size_of_init_adc 0022               __size_of_read_adc 0026                ___lwdiv@dividend 000F  
                     _delay_fun 14E6               __size_of_scan_key 0078                       _clear_log 17C4  
                     __pintcode 0008                   __pmediumconst 2EBC                        ?___awdiv 000F  
                      ?___awmod 000F              read_ds1307@address 0010                        ?___lwdiv 000F  
                     _clock_reg 004A                        ?___lwmod 000F               __size_of_set_time 034C  
     password_change@r_password 0017               __size_of_view_log 01CA             __end_of_init_ds1307 1596  
           __size_of_save_speed 0064                      save_time@i 0011             __end_of_read_ds1307 181A  
              ___lwdiv@quotient 0013                       _init_clcd 178E             __end_of_init_config 18E8  
                 ??_save_events 0011                       _init_uart 1750            _read_internal_eeprom 193A  
                __size_of_putch 000C                   ?_write_ds1307 0010             __end_of_init_timer0 195C  
              ?_password_change 0001                    ??_clcd_print 0014                    ??_clcd_putch 0012  
    __end_of_init_matrix_keypad 1928                    ??_clcd_write 0010                       _save_time 12EA  
              clear_log@address 0011                      ?_delay_fun 0001                        _PIR2bits 000FA1  
                    ?_clear_log 0001           _write_internal_eeprom 1868       __size_of_password_compare 0252  
             display_menu@count 00B1                   download_log@i 0024                   download_log@j 0022  
          __size_of_i2c_rx_mode 0008           clcd_write@control_bit 000F                       main@count 007A  
                   ??_i2c_start 000F              __end_of_clcd_print 14E6                     ??_i2c_write 000F  
            __end_of_clcd_putch 1900              __end_of_clcd_write 1842                      ?_init_clcd 0001  
                    ?_init_uart 0001                    save_events@i 0011           ?_read_internal_eeprom 0001  
                     copy_data0 13E8                       copy_data1 1408                  ??_write_ds1307 0011  
                      _i2c_idle 19B8                        _i2c_read 196A                        _i2c_stop 19A8  
                    _EECON1bits 000FA6             __end_of_save_events 1686                   set_time@i_420 0023  
                 set_time@i_417 0017                   set_time@i_418 001B                   set_time@i_419 001F  
                    ?_save_time 0001                        __Hrparam 0000                        __Lrparam 0000  
                 set_time@count 0029                __size_of___awdiv 0084                __size_of___awmod 0070  
                   _init_ds1307 1540                __size_of___lwdiv 0052                __size_of___lwmod 0042  
             display_speed@buff 0018                     _read_ds1307 17F0                     _init_config 18CE  
           write_ds1307@address 0011                     _init_timer0 194C                 ___lwdiv@divisor 0011  
               ___lwdiv@counter 0015                        __ptext10 1540                        __ptext11 178E  
                      __ptext20 1354                        __ptext12 188E                        __ptext21 16CC  
                      __ptext13 1188                        __ptext30 19B8                        __ptext22 1596  
                      __ptext14 17F0                        __ptext31 0860                        __ptext23 0AA6  
                      __ptext15 1998                        __ptext40 1982                        __ptext32 1686  
                      __ptext24 0CB0                        __ptext16 196A                        __ptext41 1750  
                      __ptext33 170E                        __ptext25 001A                        __ptext17 19A0  
                      __ptext42 17C4                        __ptext34 1202                        __ptext26 18B0  
                      __ptext18 19C0                        __ptext43 1868                        __ptext35 14E6  
                      __ptext27 1976                        __ptext19 1928                        __ptext44 127A  
                      __ptext36 18E8                        __ptext28 19A8                        __ptext45 1104  
                      __ptext37 1068                        __ptext29 19B0                        __ptext46 0E7A  
                      __ptext38 193A                        __ptext47 1486                        __ptext39 15E8  
                      __ptext48 181A                        _get_time 1188             _ON_OFF_up_down_gear 0E7A  
      password_compare@password 0020                        _init_i2c 1900                        _init_adc 188E  
                      _read_adc 1842                   __size_of_main 02A8                   __size_of_puts 0052  
                  ??_save_speed 0018                        _scan_key 1202                     ??_delay_fun 000F  
        ?_write_internal_eeprom 000F                     ??_clear_log 0011                        _set_time 001A  
               view_log@inc_dec 0019                display_menu@key1 00AD                        int$flags 0050  
                      _view_log 0CB0                display_menu@temp 00AE                display_menu@star 00A1  
          ?_ON_OFF_up_down_gear 0014                        main@gear 0039                        main@key1 0034  
                      main@wait 0035          __size_of_display_speed 0068                       putch@byte 000F  
                      isr@count 0078              __end_of_save_speed 1486                    set_time@just 0028  
        ??_read_internal_eeprom 000F                     ??_init_clcd 0011           __end_of_read_switches 1750  
                   ??_init_uart 000F                     _save_events 163A                        intlevel2 0000  
              ___lwmod@dividend 000F                     ??_save_time 000F                 display_menu@key 00B0  
              _password_compare 060E           ??_ON_OFF_up_down_gear 0016           save_speed@adc_reg_val 0016  
          __end_of_write_ds1307 18CE                        strcmp@s1 000F                        strcmp@s2 0011  
               ___lwmod@divisor 0011                 ___lwmod@counter 0013          __size_of_i2c_rep_start 0008  
              write_ds1307@data 0010           display_menu@menu_list 00A3                   _display_speed 1354  
              download_log@new1 0012    write_internal_eeprom@address 0010  
